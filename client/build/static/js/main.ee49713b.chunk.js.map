{"version":3,"sources":["app_config.js","Routes/dispenser/components/Nav.js","assets/place-holder.jpg","api/users.jsx","assets/doctor.png","assets/fhp.jpg","components/Login.jsx","Routes/dispenser/components/Header.js","components/format.js","Routes/dispenser/Dashboard.jsx","api/forms.js","components/raw_print.js","Routes/dispenser/Newsale.jsx","Routes/dispenser/allProducts.jsx","Routes/dispenser/new_purchase.jsx","Routes/dispenser/product.jsx","Routes/dispenser/new-product.jsx","components/404.js","users_routes/dispenser.jsx","users_routes/cashier.jsx","Routes/admin/components/Nav.js","Routes/admin/components/Header.js","Routes/admin/Dashboard.jsx","Routes/admin/NewProduct.jsx","Routes/admin/NewSupplier.jsx","Routes/admin/NewCustomer.jsx","Routes/admin/NewUser.jsx","Routes/admin/Newsale.jsx","Routes/admin/allProducts.jsx","Routes/admin/new_purchase.jsx","Routes/admin/product.jsx","Routes/admin/editProduct.jsx","Routes/admin/finance.jsx","Routes/admin/reports.jsx","components/print.jsx","Routes/admin/allPurchases.jsx","Routes/admin/allSales.jsx","Routes/admin/allBatches.jsx","users_routes/admin.jsx","app.js","index.js"],"names":["token","sessionStorage","getItem","tokenFrom","JSON","parse","Base64","decode","user","Nav","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","_createClass","key","value","_jsx","_Fragment","children","className","_jsxs","htmlFor","style","fontSize","Link","to","concat","this","active","Component","url","UsersApi","_login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","axios","post","sent","abrupt","t0","console","error","stop","_x","apply","arguments","_data","_callee2","i","_context2","get","_x2","Login","_useState","useState","username","password","_cp","_useState2","_slicedToArray","setUser","_useState3","_useState4","loaderOpen","setloaderOpen","_useState5","_useState6","ServerError","setServerError","handleClick","_ref","e","login","log","status","_objectSpread","encode","stringify","setItem","window","location","replace","setTimeout","width","height","backgroundColor","alt","src","Logo","objectFit","margin","TextField","name","variant","label","helperText","onChange","target","fullWidth","required","display","type","Button","color","marginRight","onClick","marginLeft","CircularProgress","size","Image","Logout","removeItem","Header","AnchorEl","setAnchorEl","_React$useState","React","_React$useState2","open","setOpen","handleCloseActions","handleCloseDialog","alignItems","currentTarget","cursor","Avatar","user_role","Menu","id","anchorEl","keepMounted","disableScrollLock","Boolean","onClose","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","UI_Helper","toLocaleString","Dashboard","expiry_products","setState","handleSaleClose","open_sale","handleOpenActions","handleOpenActionsDrugs","AnchorElDrugs","handleCloseActionsDrugs","products","purchase_number","sales_number","my_sales","purchases","sales","_my_sales","_products","_callee3","_context3","_purchases","_callee4","_context4","length","_sales","_callee5","_context5","_this2","defaultChecked","Helper","format","map","v","product_generic_name","batch_no","batch_qty","batch_expiry_date","sales_amount","sales_discount","amount_paid","dialog_data","products_sold","product_name","qty","selling_unit","product_price","sale_type","FormsApi","_post","RawPrint","new_sale","values","total_amount","parseInt","discount","pay_amount","customer","sale","getDate","month","Date","now","getMonth","getFullYear","getNameSpaces","n","name_formatted","substring","spaces","forEach","push","toString","user_first_name","newLine","Alert","MuiAlert","elevation","NewSale","print_receipt","qz","websocket","connect","then","printers","find","printer","config","configs","create","print","disconnect","catch","err","customers","handleSale","_ref2","fd","content","api","preventDefault","finish_btn_disabled","messageState","FormData","_content","formData","date","message","reload","handleSubmit","_ref3","_fcontent","over_qty_error","active_drug","batch","_toConsumableArray","handleDrugNameKeyUp","_ref4","t1","_x3","_x4","handleChangeDrugName","IsJsonString","product_units","active_selling_unit","active_selling_price","active_sale_type","active_product_re_order","product_re_order","el","active_product_qty","product_qty","closePopUp","event","reason","total","str","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","IconButton","severity","arr","splice","getTotals","autoComplete","onSubmit","FormControl","marginInline","InputLabel","Select","inputProps","Autocomplete","options","getOptionLabel","option","product_description_name","onKeyUp","renderInput","params","disabled","_ref5","_x5","_x6","defaultValue","_ref6","_callee6","_context6","_x7","hidden","product_id","marginTop","FormGroup","FormControlLabel","control","Checkbox","Finish","t","_ref7","setDiscount","customer_surname","customer_lastname","AllProducts","expiry_date","quantity","NewPurchase","handlePurchase","products_purchased","empty_error","active_retail_price","retail","active_wholesale_price","wholesale","suppliers","_suppliers","cost_price","supplier_id","supplier_surname","Product","product","_product","_yield$UsersApi$data","_yield$UsersApi$data2","URLSearchParams","search","borderBottom","padding","product_track_number","fontWeight","unit_price","date_added","getHours","getMinutes","product_description","supplier_lastname","date_registered","supplier_contact","supplier_location","supplier_address","NewProduct","handleClose","open_dialog","handleUnit","empty_name_error","units","new_unit_error","selling_units","_units","justifyContent","flex","units_change","unit_name","multiline","NotFound","flexDirection","marginBlock","Dispenser","BrowserRouter","Switch","Route","path","exact","component","Cashier","less_qty","less_qty_pdts","sales_number_daily","sales_number_monthly","sales_daily","sales_monthly","sales_date","NewSupplier","NewCustomer","New_user","departments","handleDelete","open_del","loading","loader","EditProduct","re_order","units_arr","unit","_this3","_this4","Finance","handlePurchaseClose","open_purchase","print_sale","income","today_income","expenses","today_expense","_income","today_sales","_expenses","today_purchases","purchase_date","purchase_amount","split","sold","p","indexOf","purchase_t_amount","dialog_purchase_data","sale_made_by","purchase_discount","purchase_made_by","Reports","daily","daily_purchases","daily_expenses","daily_products","daily_income","daily_sales","monthly","monthly_products","monthly_purchases","monthly_expenses","monthly_income","monthly_sales","annually","year","annual_products","annual_expenses","annual_purchases","annual_income","annual_sales","products_daily","products_monthly","products_annual","product_date","purchase_daily","expense_daily","purchase_monthly","expense_monthly","purchase_annual","expense_annual","income_daily","income_monthly","income_annual","sales_annual","Print","s","getPurchaseTotals","AllPurchases","purchase","ReactToPrint","trigger","componentRef","ref","AllSales","batch_id","batches","_batches","t2","Admin","NewUser","Edit","Purchases","Sales","Batches","App","THEME","createTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","AppWithTheme","MuiThemeProvider","theme","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee49713b.chunk.js","sourcesContent":["import { Base64 } from \"js-base64\";\nconst token = sessionStorage.getItem(\"token\");\nconst tokenFrom = token ? JSON.parse(Base64.decode(token)) : null;\nconst user = {\n  user: tokenFrom ? tokenFrom : {},\n};\n\nexport default user;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <div className=\"sideBar-ctr\">\n          <div className=\"sidebar\">\n            <label htmlFor=\"nav-toggle\" className=\"close-on-sm\">\n              <span className=\"las la-times\"></span>\n            </label>\n            <div className=\"sidebar-brand\">\n              <h2>\n                <span\n                  className=\"las la-clinic-medical\"\n                  style={{ fontSize: \"32px\" }}\n                ></span>\n                <span>Pharmacy</span>\n              </h2>\n            </div>\n            <div className=\"sidebar-menu\">\n              <ul>\n                <li>\n                  <Link to=\"/\">\n                    <span\n                      className={`${\n                        this.props.active === \"dashboard\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-home\"></span>\n                      <span>Dashboard</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/new-sale\">\n                    <span\n                      className={`${\n                        this.props.active === \"sale\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-user-plus\"></span>\n                      <span>New Sale</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/new-purchase\">\n                    <span\n                      className={`${\n                        this.props.active === \"purchase\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-prescription-bottle-alt\"></span>\n                      <span>New Purchase</span>\n                    </span>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/place-holder.8c84566a.jpg\";","import axios from \"axios\";\n\nconst url = \"http://localhost:5050/api\";\n// const url = \"https://freedomhealth.herokuapp.com/api\";\n\nexport default class UsersApi {\n  ///new Login\n  static async login(data) {\n    try {\n      const res = await axios.post(`${url}/user/admin/login`, data);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return \"Error\";\n    }\n  }\n  static async data(i) {\n    try {\n      const res = await axios.get(`${url}${i}`);\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return \"Error\";\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/doctor.26885907.png\";","export default __webpack_public_path__ + \"static/media/fhp.574aa51e.jpg\";","import React, { useState } from \"react\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport UsersApi from \"../api/users\";\nimport Image from \"../assets/doctor.png\";\nimport Logo from \"../assets/fhp.jpg\";\nimport { Base64 } from \"js-base64\";\n//design\nimport \"./login.css\";\n\nfunction Login() {\n  const [user, setUser] = useState({ username: \"\", password: \"\", _cp: true });\n  const [loaderOpen, setloaderOpen] = useState(false);\n  const [ServerError, setServerError] = useState(\"\");\n  const handleClick = async (e) => {\n    setloaderOpen(true);\n    const res = await UsersApi.login({\n      username: user.username,\n      password: user.password,\n    });\n    console.log(res);\n    if (res !== \"Error\") {\n      if (res.status === false) {\n        setUser({ ...user, _cp: false });\n        setloaderOpen(false);\n        return;\n      } else {\n        const data = Base64.encode(JSON.stringify(res.user));\n        sessionStorage.setItem(\"token\", data);\n        window.location.replace(\"/\");\n        setloaderOpen(false);\n      }\n    } else {\n      setServerError(\"Server Error...\");\n      setTimeout(() => {\n        setloaderOpen(false);\n        setServerError(\"\");\n      }, 5000);\n    }\n  };\n  return (\n    <div\n      style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}\n      className=\"m-ctr\"\n    >\n      <div className=\"ctr\">\n        <img\n          alt=\"Hospital\"\n          src={Logo}\n          height=\"120px\"\n          width=\"150px\"\n          style={{ objectFit: \"cover\" }}\n        />\n        <div\n          className=\"header\"\n          style={{\n            margin: \"15px 0px\",\n          }}\n        >\n          Freedom Pharmacy\n        </div>\n        <div className=\"loginCtr\">\n          <TextField\n            name=\"username\"\n            variant=\"standard\"\n            label=\"Username\"\n            helperText={!user._cp ? \"Incorrect Username Or Password\" : \"\"}\n            error={!user._cp}\n            onChange={(e) => {\n              setUser({ ...user, username: e.target.value });\n            }}\n            fullWidth\n            required\n            style={{\n              width: \"250px\",\n              display: \"block\",\n              margin: \"15px 0px\",\n            }}\n          />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            variant=\"standard\"\n            helperText={!user._cp ? \"Incorrect Username Or Password\" : \"\"}\n            label=\"Password\"\n            required\n            error={!user._cp}\n            onChange={(e) => {\n              setUser({ ...user, password: e.target.value });\n            }}\n            fullWidth\n            style={{\n              display: \"block\",\n              margin: \"50px 0px\",\n            }}\n          />\n        </div>\n        <div className=\"submitCtr\">\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: 10 }}\n            onClick={handleClick}\n          >\n            Login\n            <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n              <i className=\"las la-sign-in-alt\"></i>\n            </span>\n          </Button>\n        </div>\n        {/* for loader */}\n        <div\n          className=\"loader\"\n          style={loaderOpen ? { display: \"flex\" } : { display: \"none\" }}\n        >\n          <CircularProgress size={25} />\n          <div>{ServerError}</div>\n        </div>\n        {/* for loader */}\n      </div>\n      <img src={Image} className=\"img\" alt=\"Hospital\" />\n    </div>\n  );\n}\n\nexport default Login;\n\nexport function Logout() {\n  sessionStorage.removeItem(\"token\");\n  window.location.replace(\"/\");\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"../../../assets/place-holder.jpg\";\nimport {\n  Menu,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport user from \"../../../app_config\";\nimport { Logout } from \"../../../components/Login\";\nfunction Header() {\n  const [AnchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenActions = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleCloseActions = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <header>\n        <h2>\n          <label htmlFor=\"nav-toggle\">\n            <span className=\"las la-bars\"></span>\n          </label>\n          <span className=\"health_unit_name\">Freedom Health</span>\n        </h2>\n        {/* <div className=\"search-wrapper\">\n          <span className=\"las la-search\"></span>\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Search here\" />\n        </div> */}\n        <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div className=\"\" style={{ fontSize: \"42px\", marginRight: 20 }}>\n            <i className=\"las la-bell\"></i>\n          </div>\n          <div\n            className=\"user-wrapper\"\n            aria-controls=\"reception-actions\"\n            aria-haspopup=\"true\"\n            onClick={handleOpenActions}\n            style={{ cursor: \"pointer\" }}\n          >\n            <img src={Avatar} alt=\"\" width=\"40px\" height=\"40px\" />\n            <div className=\"\">\n              <h4>{user.user.username}</h4>\n              <small>{user.user.user_role}</small>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <Menu\n        id=\"reception-actions\"\n        anchorEl={AnchorEl}\n        keepMounted\n        disableScrollLock={true}\n        open={Boolean(AnchorEl)}\n        onClose={handleCloseActions}\n      >\n        <MenuItem onClick={handleCloseActions}>\n          <span style={{ fontSize: 24, marginRight: 10 }}>\n            <i className=\"las la-user-alt\"></i>\n          </span>\n          Profile\n        </MenuItem>\n        <MenuItem onClick={handleClickOpenDialog}>\n          <span style={{ fontSize: 24, marginRight: 10 }}>\n            <i className=\"las la-sign-out-alt\"></i>\n          </span>\n          Log out\n        </MenuItem>\n      </Menu>\n\n      <Dialog\n        open={open}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Want to Log Out. Click 'Stay' to close, Log Out to Continue\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Stay\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            onClick={() => {\n              Logout();\n            }}\n          >\n            Log Out\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Header;\n","export default class UI_Helper {\n  static format(value) {\n    return value.toLocaleString();\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\nimport user from \"../../app_config\";\nimport Helper from \"../../components/format\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      products: [],\n      purchase_number: \"...\",\n      sales_number: \"...\",\n      expiry_products: [],\n      my_sales: [],\n      open_sale: false,\n    };\n    this.products();\n    this.purchases();\n    this.sales();\n    this.expiry_products();\n    this.my_sales();\n  }\n\n  async my_sales() {\n    const res =\n      (await UsersApi.data(`/user/all/my_sales/${user.user.username}`)) || [];\n    if (res) {\n      this.setState({ ...this.state, my_sales: res !== \"Error\" ? res : [] });\n    }\n  }\n\n  expiry_products = async () => {\n    const res = (await UsersApi.data(\"/user/all/batch/expiry\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        expiry_products: res !== \"Error\" ? res : [],\n      });\n    }\n  };\n\n  async products() {\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\n    if (res) {\n      this.setState({ ...this.state, products: res });\n    }\n  }\n\n  async purchases() {\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\n    if (res) {\n      this.setState({ ...this.state, purchase_number: res.length });\n    }\n  }\n\n  async sales() {\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\n    if (res) {\n      this.setState({ ...this.state, sales_number: res.length });\n    }\n  }\n\n  handleSaleClose = () => {\n    this.setState({ ...this.state, open_sale: false });\n  };\n\n  handleOpenActions = (e) => {\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\n  };\n  handleOpenActionsDrugs = (e) => {\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\n  };\n  handleCloseActions = () => {\n    this.setState({ ...this.state, AnchorEl: null });\n  };\n  handleCloseActionsDrugs = () => {\n    this.setState({ ...this.state, AnchorElDrugs: null });\n  };\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"cards\">\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.my_sales.length)}</h3>\n                  <span>My Sales</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.sales_number)}</h3>\n                  <span>Sales</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"></span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.purchase_number)}</h3>\n                  <span>Purchases</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.products.length)}</h3>\n                  <span>Total Products</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"recent-grid\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Expiring in 90 days</h3>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-controls=\"drug-actions\"\n                      aria-haspopup=\"true\"\n                      onClick={this.handleOpenActionsDrugs}\n                    >\n                      Menu\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-angle-down\"></span>\n                      </span>\n                    </Button>\n                    <Menu\n                      id=\"drug-actions\"\n                      anchorEl={this.state.AnchorElDrugs}\n                      keepMounted\n                      open={Boolean(this.state.AnchorElDrugs)}\n                      onClose={this.handleCloseActionsDrugs}\n                      disableScrollLock={true}\n                    >\n                      <Link to=\"/new-product\">\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\n                          New Product\n                        </MenuItem>\n                      </Link>\n                    </Menu>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Name</td>\n                          <td>Batch No.</td>\n                          <td>Quantity In Batch</td>\n                          <td>Expires On</td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.expiry_products.length === 0 ? (\n                          <tr>\n                            <td>No Medicine Expires In 90 days</td>\n                          </tr>\n                        ) : (\n                          this.state.expiry_products.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"name_cell\">\n                                  {v.product_generic_name}\n                                </td>\n                                <td>{v.batch_no}</td>\n                                <td>{v.batch_qty}</td>\n                                <td>{v.batch_expiry_date}</td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>My Sales</h3>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-controls=\"reception-actions\"\n                      aria-haspopup=\"true\"\n                      onClick={this.handleOpenActions}\n                    >\n                      See All\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-angle-down\"></span>\n                      </span>\n                    </Button>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Total</td>\n                          <td>Discount</td>\n                          <td>Paid</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.my_sales.length === 0 ? (\n                          <tr>\n                            <td>No sale made</td>\n                          </tr>\n                        ) : (\n                          this.state.my_sales.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td>{v.sales_amount}</td>\n                                <td>{v.sales_discount}</td>\n                                <td>{v.amount_paid}</td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={(e) => {\n                                      this.setState({\n                                        ...this.state,\n                                        open_sale: true,\n                                        dialog_data: v,\n                                      });\n                                    }}\n                                  >\n                                    Details\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n        {this.state.dialog_data ? (\n          <Dialog\n            open={this.state.open_sale}\n            onClose={this.handleSaleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <table width=\"100%\">\n                  <thead>\n                    <tr>\n                      <td>Product</td>\n                      <td>Qty</td>\n                      <td>Selling Unit</td>\n                      <td>Amount</td>\n                      <td>Sale Type</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\n                      (v, i) => {\n                        return (\n                          <>\n                            <tr key={i}>\n                              <td>{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.selling_unit}</td>\n                              <td>{v.product_price}</td>\n                              <td>{v.sale_type}</td>\n                            </tr>\n                          </>\n                        );\n                      }\n                    )}\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"\">\n                  <table>\n                    <tr>\n                      <td>\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Discount: UGX  ${this.state.dialog_data.sales_discount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Amount Paid: UGX ${this.state.dialog_data.amount_paid}`}\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleSaleClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import axios from \"axios\";\n\nconst url = \"http://localhost:5050/api\";\n// const url = \"https://freedomhealth.herokuapp.com/api\";\n\nexport default class FormsApi {\n  async post(i, data) {\n    try {\n      const res = await axios.post(`${url}${i}`, data);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n      return \"Error\";\n    }\n  }\n}\n","//imports\nimport user from \"../app_config\";\n//imports\n\nexport default class RawPrint {\n  static new_sale = (v) => {\n    console.log(v);\n    const values = v.products_sold;\n    const total_amount = parseInt(v.total_amount);\n    const discount = parseInt(v.discount) || 0;\n    const amount_paid = parseInt(v.pay_amount);\n    const customer = v.customer;\n    const sale = v.sale_type;\n    //functions\n    const getDate = () => {\n      let month =\n        new Date(Date.now()).getMonth() + 1 < 10\n          ? \"0\" + (new Date(Date.now()).getMonth() + 1)\n          : new Date(Date.now()).getMonth() + 1;\n      let date =\n        new Date(Date.now()).getDate() < 10\n          ? \"0\" + new Date(Date.now()).getDate()\n          : new Date(Date.now()).getDate();\n\n      let date_str =\n        date + \"/\" + month + \"/\" + new Date(Date.now()).getFullYear();\n      return date_str;\n    };\n\n    const getNameSpaces = (n, i) => {\n      let name = n;\n      let name_formatted;\n      if (name.length === i) {\n        name_formatted = name;\n      }\n      if (name.length > i) {\n        name_formatted = name.substring(0, i - 2) + \"..\";\n      }\n      if (name.length < i) {\n        name_formatted = name;\n        let spaces = i - name.length;\n        for (let i = 0; i < spaces; i++) {\n          name_formatted = name_formatted + \" \";\n        }\n      }\n      return name_formatted + \" \";\n    };\n    // `${customer ? `Customer:  ${customer}` : \"\"}`,\n    //functions\n    if (customer) {\n      let data = [\n        \"------------------------------------------------\",\n        \"                                                \",\n        \"FREEDOM HEALTH AND SUPPLIES LTD                 \",\n        \"Plot 7, Chegere Road Apac                       \",\n        \"P.O.Box 120 Apac                                \",\n        \"Tel: 0393 193 423                               \",\n        \"                                                \",\n        \"SALES RECEIPT                                   \",\n        \"                                                \",\n        \"Date: \" + getDate() + \"                                \",\n        \"                                                \",\n        \"------------------------------------------------\",\n        \"Name                  Qty   Unit     Amount(Shs)\",\n      ];\n\n      values.forEach((v, i) => {\n        data.push(\n          `${getNameSpaces(v.product_name, 21)}${getNameSpaces(\n            v.qty,\n            5\n          )}${getNameSpaces(v.selling_unit, 8)}${getNameSpaces(\n            (parseInt(v.product_price) * parseInt(v.qty)).toString(),\n            10\n          )}`\n        );\n      });\n      let data_with_footer = [\n        ...data,\n        \"------------------------------------------------\",\n        `Sale          ${getNameSpaces(sale, 10)}                       `,\n        `Total         UGX: ${getNameSpaces(\n          total_amount.toString(),\n          8\n        )}                    `,\n        `Discount      UGX: ${getNameSpaces(\n          discount.toString(),\n          8\n        )}                    `,\n        `Paid          UGX: ${getNameSpaces(\n          amount_paid.toString(),\n          8\n        )}                    `,\n        \"                                                \",\n        `Customer: ${getNameSpaces(customer, 24)}             `,\n        \"                                                \",\n        \"Thank You                                       \",\n        `Served By: ${getNameSpaces(\n          user.user.user_first_name,\n          19\n        )}                 `,\n        \"Be Healthy, Be Happy                            \",\n        \"                                                \",\n        \"------------------------------------------------\",\n      ];\n      // \"\\x1B\" + \"\\x45\" + \"\\x4d\" + \"\\x20\" + \"\\x34\",\n\n      // return data;\n      return data_with_footer;\n    } else {\n      let data = [\n        \"------------------------------------------------\",\n        \"                                                \",\n        \"FREEDOM HEALTH AND SUPPLIES LTD                 \",\n        \"Plot 7, Chegere Road Apac                       \",\n        \"P.O.Box 120 Apac                                \",\n        \"Tel: 0393 193 423                               \",\n        \"                                                \",\n        \"SALES RECEIPT                                   \",\n        \"                                                \",\n        \"Date: \" + getDate() + \"                                \",\n        \"                                                \",\n        \"------------------------------------------------\",\n        \"Name                  Qty   Unit     Amount(Shs)\",\n      ];\n\n      values.forEach((v, i) => {\n        data.push(\n          `${getNameSpaces(v.product_name, 21)}${getNameSpaces(\n            v.qty,\n            5\n          )}${getNameSpaces(v.selling_unit, 8)}${getNameSpaces(\n            (parseInt(v.product_price) * parseInt(v.qty)).toString(),\n            10\n          )}`\n        );\n      });\n      let data_with_footer = [\n        ...data,\n        \"------------------------------------------------\",\n        `Sale          ${getNameSpaces(sale, 10)}                       `,\n        `Total         UGX: ${getNameSpaces(\n          total_amount.toString(),\n          8\n        )}                    `,\n        `Discount      UGX: ${getNameSpaces(\n          discount.toString(),\n          8\n        )}                    `,\n        `Paid          UGX: ${getNameSpaces(\n          amount_paid.toString(),\n          8\n        )}                    `,\n        \"                                                \",\n        \"Thank You                                       \",\n        `Served By: ${getNameSpaces(\n          user.user.user_first_name,\n          19\n        )}                 `,\n        \"Be Healthy, Be Happy                            \",\n        \"                                                \",\n        \"------------------------------------------------\",\n      ];\n      // \"\\x1B\" + \"\\x45\" + \"\\x4d\" + \"\\x20\" + \"\\x34\",\n\n      // return data;\n      return data_with_footer;\n    }\n  };\n}\n\n//Set content to print...\n//Create ESP/POS commands for sample label\nvar esc = \"\\x1B\"; //ESC byte in hex notation\nvar newLine = \"\\x0A\"; //LF byte in hex notation\n\nvar cmds = esc + \"@\"; //Initializes the printer (ESC @)\ncmds += esc + \"!\" + \"\\x38\"; //Emphasized + Double-height + Double-width mode selected (ESC ! (8 + 16 + 32)) 56 dec => 38 hex\ncmds += \"BEST DEAL STORES\"; //text to print\ncmds += newLine + newLine;\ncmds += esc + \"!\" + \"\\x00\"; //Character font A selected (ESC ! 0)\ncmds += \"COOKIES                   5.00\";\ncmds += newLine;\ncmds += \"MILK 65 Fl oz             3.78\";\ncmds += newLine + newLine;\ncmds += \"SUBTOTAL                  8.78\";\ncmds += newLine;\ncmds += \"TAX 5%                    0.44\";\ncmds += newLine;\ncmds += \"TOTAL                     9.22\";\ncmds += newLine;\ncmds += \"CASH TEND                10.00\";\ncmds += newLine;\ncmds += \"CASH DUE                  0.78\";\ncmds += newLine + newLine;\ncmds += esc + \"!\" + \"\\x18\"; //Emphasized + Double-height mode selected (ESC ! (16 + 8)) 24 dec => 18 hex\ncmds += \"# ITEMS SOLD 2\";\ncmds += esc + \"!\" + \"\\x00\"; //Character font A selected (ESC ! 0)\ncmds += newLine + newLine;\ncmds += \"11/03/13  19:53:17\";\n","import React, { Component, useState } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport qz from \"qz-tray\";\n\nimport \"../../design/main.css\";\nimport \"../../design/forms.css\";\nimport \"../../design/print_sale.css\";\nimport user from \"../../app_config\";\nimport data from \"../../components/raw_print\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewSale extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      print: true,\n      _content: {},\n      active_product_qty: 0,\n      active_product_re_order: 0,\n      over_qty_error: false,\n      active_sale_type: \"retail\",\n      active_selling_unit: \"\",\n      active_selling_price: \"\",\n      products: [],\n      customers: [],\n      formData: [],\n      total: 0,\n      discount: 0,\n      finish_btn_disabled: false,\n    };\n    this.customers();\n  }\n\n  print_receipt = (v) => {\n    qz.websocket\n      .connect()\n      .then(() => {\n        return qz.printers.find(\"Generic\");\n      })\n      .then((printer) => {\n        console.log(printer);\n        let config = qz.configs.create(printer);\n        return qz.print(config, data.new_sale(v));\n      })\n      .then(() => {\n        return qz.websocket.disconnect();\n      })\n      .then(() => {\n        // process.exit(0);\n      })\n      .catch((err) => {\n        console.error(err);\n        // process.exit(1);\n      });\n  };\n\n  //date for receipt\n  getDate() {\n    let date =\n      new Date(Date.now()).getDate() +\n      \" / \" +\n      (new Date(Date.now()).getMonth() + 1) +\n      \" / \" +\n      new Date(Date.now()).getFullYear();\n    return date;\n  }\n  //date for receipt\n\n  //customers\n  customers = async () => {\n    const res = (await UsersApi.data(\"/user/sale/customers\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        customers: res !== \"Error\" ? res : [],\n      });\n    }\n  };\n  //customers\n  handleSale = async (e) => {\n    e.preventDefault();\n    if (this.state.finish_btn_disabled) return;\n    this.setState({\n      ...this.state,\n      open: true,\n      messageState: \"info\",\n      finish_btn_disabled: true,\n    });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n    await this.setState({ ...this.state, _content: content });\n\n    if (this.state.formData.length !== 0) {\n      this.setState({\n        ...this.state,\n        _content: {\n          ...this.state._content,\n          products_sold: this.state.formData,\n          date: Date.now(),\n          user: user.user.username,\n        },\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"No Products To Sell\",\n        messageState: \"warning\",\n      });\n      return;\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_sale\", this.state._content);\n    if (res.status === true) {\n      if (this.state.print) {\n        this.print_receipt(this.state._content);\n      }\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"success\",\n        finish_btn_disabled: false,\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 700);\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    if (this.state.over_qty_error) {\n      this.setState({\n        ...this.state,\n        open: true,\n        messageState: \"error\",\n        message: \"Quantity Exceeds Available\",\n      });\n      return;\n    }\n    if (!this.state.active_drug) {\n      this.setState({\n        ...this.state,\n        open: true,\n        messageState: \"error\",\n        message: \"No Selling Unit\",\n      });\n      return;\n    }\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    _fcontent[\"batch\"] = this.state.batch ? this.state.batch : [];\n    const product_name = this.state.formData.find(\n      (e) => e.product_name === _fcontent.product_name\n    );\n    if (!product_name) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Added\",\n        messageState: \"success\",\n        formData: [...this.state.formData, _fcontent],\n        active_drug: null,\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Exists\",\n        messageState: \"warning\",\n      });\n    }\n  };\n\n  handleDrugNameKeyUp = async (e, v) => {\n    const res = e.target.value\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\n      : [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  };\n\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChangeDrugName = (e, v) => {\n    if (v) {\n      if (!this.IsJsonString(v.product_units)) {\n        this.setState({\n          ...this.state,\n          open: true,\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\n          messageState: \"warning\",\n        });\n        return;\n      }\n      this.setState(\n        {\n          ...this.state,\n          active_drug: v,\n        },\n        () => {\n          this.setState(\n            {\n              ...this.state,\n              active_selling_unit: JSON.parse(\n                this.state.active_drug.product_units\n              )[0].selling_unit,\n              active_selling_price: JSON.parse(\n                this.state.active_drug.product_units\n              )[0][this.state.active_sale_type],\n            },\n            () => {\n              this.setState({\n                ...this.state,\n                active_product_re_order:\n                  (this.state.active_selling_unit ===\n                  JSON.parse(this.state.active_drug.product_units)[0]\n                    .selling_unit\n                    ? parseInt(this.state.active_drug.product_re_order)\n                    : parseInt(this.state.active_drug.product_re_order) /\n                      parseInt(\n                        JSON.parse(this.state.active_drug.product_units).find(\n                          (el) => el.selling_unit === e.target.value\n                        )[\"qty\"]\n                      )) || 0,\n                active_product_qty:\n                  this.state.active_selling_unit ===\n                  JSON.parse(this.state.active_drug.product_units)[0]\n                    .selling_unit\n                    ? parseInt(this.state.active_drug.product_qty)\n                    : parseInt(this.state.active_drug.product_qty) /\n                      parseInt(\n                        JSON.parse(this.state.active_drug.product_units).find(\n                          (el) => el.selling_unit === e.target.value\n                        )[\"qty\"]\n                      ),\n              });\n            }\n          );\n        }\n      );\n    }\n  };\n\n  getTotals() {\n    let total = 0;\n    if (this.state.formData.length !== 0) {\n      this.state.formData.forEach((e) => {\n        total += parseInt(e.product_price) * parseInt(e.qty);\n      });\n    }\n    return total;\n  }\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false, message: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"sale\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"recent-grid\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Sale List</h3>\n                  <Button\n                    aria-describedby={this.id}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                    style={{ fontSize: \"17.5px\", marginRight: \"15px\" }}\n                  >\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\n                      <i className=\"las la-redo\"></i>\n                    </span>\n                    Cancel\n                  </Button>\n                </div>\n                <div className=\"card-body\">\n                  <table width=\"100%\">\n                    <thead>\n                      <tr>\n                        <td>Name</td>\n                        <td>Qty</td>\n                        <td>Unit Price(Shs)</td>\n                        <td>Total(Shs)</td>\n                        <td></td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.formData.length === 0 ? (\n                        <tr>\n                          <td>No Product Added</td>\n                        </tr>\n                      ) : (\n                        this.state.formData.map((v, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.product_price}</td>\n                              <td>\n                                {parseInt(v.product_price) * parseInt(v.qty)}\n                              </td>\n                              <td>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => {\n                                    let arr = this.state.formData;\n                                    arr.splice(i, 1);\n                                    this.setState({\n                                      ...this.state,\n                                      formData: arr,\n                                    });\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        })\n                      )}\n                    </tbody>\n                    <thead>\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td>Total</td>\n                        <td>{this.getTotals()}</td>\n                      </tr>\n                    </thead>\n                  </table>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"card-header \">\n                    <div>\n                      <FormControl\n                        variant=\"outlined\"\n                        // label=\"selling_unit\"\n                        style={{\n                          width: \"85%\",\n                          marginInline: \"20px\",\n                        }}\n                      >\n                        <InputLabel id=\"sale_type\">Sale</InputLabel>\n                        <Select\n                          inputProps={{\n                            name: \"sale_type\",\n                          }}\n                          label=\"Sale\"\n                          id=\"select_sale_type\"\n                          value={this.state.active_sale_type}\n                          onChange={(e, v) => {\n                            this.setState({\n                              ...this.state,\n                              active_sale_type: e.target.value,\n                              active_drug: null,\n                            });\n                          }}\n                        >\n                          <MenuItem value=\"retail\">Retail</MenuItem>\n                          <MenuItem value=\"wholesale\">Wholesale</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </div>\n                    <div className=\"\">\n                      <Button\n                        type=\"submit\"\n                        aria-describedby={this.id}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-plus-circle\"></i>\n                        </span>\n                        Add\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Product Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <Autocomplete\n                              id=\"combo-box-demo\"\n                              options={this.state.products}\n                              getOptionLabel={(option) =>\n                                `${option.product_generic_name} ${option.product_description_name}`\n                              }\n                              onChange={this.handleChangeDrugName}\n                              onKeyUp={this.handleDrugNameKeyUp}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Search Product\"\n                                  name=\"product_name\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            />\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              type=\"number\"\n                              name=\"qty_available\"\n                              variant=\"outlined\"\n                              label=\"Available\"\n                              value={this.state.active_product_qty}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              helperText={\n                                this.state.active_drug\n                                  ? this.state.active_product_re_order >=\n                                    this.state.active_product_qty\n                                    ? \"Purchase Needed For This Drug\"\n                                    : \"\"\n                                  : \"\"\n                              }\n                              error={\n                                this.state.active_drug\n                                  ? this.state.active_product_re_order >=\n                                    this.state.active_product_qty\n                                    ? true\n                                    : \"\"\n                                  : \"\"\n                              }\n                              type=\"number\"\n                              name=\"qty_re_order\"\n                              variant=\"outlined\"\n                              label=\"Re-order Quantity\"\n                              value={this.state.active_product_re_order}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inpts_on_right\">\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"selling_unit\"\n                              disabled={this.state.active_drug ? false : true}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"selling_unit\">\n                                Selling Unit\n                              </InputLabel>\n                              <Select\n                                inputProps={{\n                                  name: \"selling_unit\",\n                                }}\n                                label=\"Selling Unit\"\n                                id=\"select_selling_unit\"\n                                value={this.state.active_selling_unit}\n                                onChange={async (e, v) => {\n                                  await this.setState({\n                                    ...this.state,\n                                    active_selling_price: JSON.parse(\n                                      this.state.active_drug.product_units\n                                    ).find(\n                                      (el) => el.selling_unit === e.target.value\n                                    )[this.state.active_sale_type],\n                                  });\n                                  this.setState(\n                                    {\n                                      ...this.state,\n                                      active_selling_unit: e.target.value,\n                                    },\n                                    () => {\n                                      this.setState({\n                                        ...this.state,\n                                        active_product_re_order:\n                                          (this.state.active_selling_unit ===\n                                          JSON.parse(\n                                            this.state.active_drug.product_units\n                                          )[0].selling_unit\n                                            ? parseInt(\n                                                this.state.active_drug\n                                                  .product_re_order\n                                              )\n                                            : parseInt(\n                                                this.state.active_drug\n                                                  .product_re_order\n                                              ) /\n                                              parseInt(\n                                                JSON.parse(\n                                                  this.state.active_drug\n                                                    .product_units\n                                                ).find(\n                                                  (el) =>\n                                                    el.selling_unit ===\n                                                    e.target.value\n                                                )[\"qty\"]\n                                              )) || 0,\n                                        active_product_qty:\n                                          this.state.active_selling_unit ===\n                                          JSON.parse(\n                                            this.state.active_drug.product_units\n                                          )[0].selling_unit\n                                            ? parseInt(\n                                                this.state.active_drug\n                                                  .product_qty\n                                              )\n                                            : parseInt(\n                                                this.state.active_drug\n                                                  .product_qty\n                                              ) /\n                                              parseInt(\n                                                JSON.parse(\n                                                  this.state.active_drug\n                                                    .product_units\n                                                ).find(\n                                                  (el) =>\n                                                    el.selling_unit ===\n                                                    e.target.value\n                                                )[\"qty\"]\n                                              ),\n                                      });\n                                    }\n                                  );\n                                }}\n                              >\n                                {this.state.active_drug ? (\n                                  JSON.parse(\n                                    this.state.active_drug.product_units\n                                  ).map((v, i) => {\n                                    return (\n                                      <MenuItem key={i} value={v.selling_unit}>\n                                        {v.selling_unit}\n                                      </MenuItem>\n                                    );\n                                  })\n                                ) : (\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\n                                )}\n                              </Select>\n                            </FormControl>\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              error={this.state.over_qty_error}\n                              type=\"number\"\n                              name=\"qty\"\n                              variant=\"outlined\"\n                              label=\"Quantity\"\n                              helperText={\n                                this.state.over_qty_error\n                                  ? \"Quantity Exceeds Available\"\n                                  : \"\"\n                              }\n                              defaultValue={0}\n                              onChange={async (e) => {\n                                if (\n                                  parseInt(e.target.value) >\n                                  this.state.active_product_qty\n                                ) {\n                                  await this.setState({\n                                    ...this.state,\n                                    over_qty_error: true,\n                                  });\n                                } else {\n                                  await this.setState({\n                                    ...this.state,\n                                    over_qty_error: false,\n                                  });\n                                }\n                              }}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_id\"\n                              defaultValue={\n                                this.state.active_drug\n                                  ? this.state.active_drug.product_id\n                                  : \"\"\n                              }\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_price\"\n                              defaultValue={this.state.active_selling_price}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n                <form\n                  className=\"card\"\n                  style={{ marginTop: \"20px\" }}\n                  onSubmit={this.handleSale}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">Payment</h3>\n                    <div className=\"\">\n                      <FormGroup style={{ display: \"inline\" }}>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              defaultChecked\n                              name=\"print_receipt\"\n                              onChange={() => {\n                                this.setState(\n                                  {\n                                    ...this.state,\n                                    print: !this.state.print,\n                                  },\n                                  () => {\n                                    console.log(this.state.print);\n                                  }\n                                );\n                              }}\n                            />\n                          }\n                          label=\"Print Receipt\"\n                        />\n                      </FormGroup>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        style={{ marginRight: 10 }}\n                        disabled={this.state.finish_btn_disabled}\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-print\"></i>\n                        </span>\n                        Finish Sale\n                      </Button>\n                    </div>\n                  </div>\n                  <Finish\n                    t={this.getTotals()}\n                    sale_type={this.state.active_sale_type}\n                    customers={this.state.customers}\n                  />\n                  <input\n                    type=\"text\"\n                    hidden\n                    value={this.state.active_sale_type}\n                    name=\"sale_type\"\n                    onChange={() => {}}\n                  />\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewSale;\n\nfunction Finish({ t, sale_type, customers }) {\n  const [discount, setDiscount] = useState(0);\n  return (\n    <div className=\"_finish_purchase_ctr\">\n      <TextField\n        name=\"total_amount\"\n        variant=\"outlined\"\n        label=\"Total\"\n        value={t}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"discount\"\n        variant=\"outlined\"\n        label=\"Discount\"\n        type=\"number\"\n        onChange={(e) => {\n          setDiscount(parseInt(e.target.value) || 0);\n        }}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"pay_amount\"\n        variant=\"outlined\"\n        label=\"Amount to Be Paid\"\n        value={t - discount}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <FormControl\n        variant=\"outlined\"\n        label=\"customer\"\n        style={\n          sale_type === \"retail\"\n            ? { display: \"none\" }\n            : { width: \"75%\", margin: \"20px\" }\n        }\n      >\n        <InputLabel id=\"customer\">Customer</InputLabel>\n        <Select\n          inputProps={{ name: \"customer\" }}\n          label=\"customer\"\n          id=\"select_customer\"\n          defaultValue=\"\"\n        >\n          {customers.length === 0\n            ? \"No Customer Added\"\n            : customers.map((v, i) => {\n                return (\n                  <MenuItem\n                    value={`${v.customer_surname} ${v.customer_lastname}`}\n                    key={i}\n                  >\n                    {`${v.customer_surname} ${v.customer_lastname}`}\n                  </MenuItem>\n                );\n              })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n    };\n    this.products();\n  }\n\n  async products() {\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Products Available</h3>\n                    <TextField\n                      name=\"drug_name\"\n                      variant=\"outlined\"\n                      label=\"Search Product\"\n                      style={{\n                        width: \"15%\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Product Name</td>\n                          <td>Expiry Date</td>\n                          <td>Quantity</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.products.length === 0 ? (\n                          <tr>\n                            <td>No Product Exists</td>\n                          </tr>\n                        ) : (\n                          this.state.products.map((v, i) => {\n                            return (\n                              <>\n                                <tr key={i}>\n                                  <td>{v.product_name}</td>\n                                  <td>{v.expiry_date}</td>\n                                  <td>{v.quantity}</td>\n                                  <td>\n                                    <Link\n                                      to={`/product?product-id=${v.product_id}`}\n                                    >\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                      >\n                                        Details\n                                      </Button>\n                                    </Link>\n                                  </td>\n                                </tr>\n                              </>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AllProducts;\n","import React, { Component, useState } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport user from \"../../app_config\";\n\nimport \"../../design/main.css\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewPurchase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      _content: {},\n      active_selling_unit: \"\",\n      active_wholesale_price: \"\",\n      empty_error: false,\n      products: [],\n      suppliers: [],\n      formData: [],\n      total: 0,\n      discount: 0,\n    };\n    this.suppliers();\n  }\n\n  async suppliers() {\n    const res = (await UsersApi.data(\"/user/all/suppliers\")) || [];\n    if (res) {\n      this.setState({ ...this.state, suppliers: res === \"Error\" ? [] : res });\n    }\n  }\n\n  // async products() {\n  //   const res = (await UsersApi.data(\"/user/all/products\")) || [];\n  //   if (res) {\n  //     this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n  //   }\n  // }\n\n  handlePurchase = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n    await this.setState({ ...this.state, _content: content });\n\n    if (this.state.formData.length !== 0) {\n      this.setState({\n        ...this.state,\n        _content: {\n          ...this.state._content,\n          products_purchased: this.state.formData,\n          date: Date.now(),\n          user: user.user.username,\n        },\n      });\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_purchase\", this.state._content);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    const product_name = this.state.formData.find(\n      (e) => e.product_name === _fcontent.product_name\n    );\n    if (\n      !_fcontent[\"batch_no\"] ||\n      !_fcontent[\"expiry_date\"] ||\n      !_fcontent[\"qty\"] ||\n      !_fcontent[\"cost_price\"]\n    ) {\n      this.setState({\n        ...this.state,\n        empty_error: true,\n        open: true,\n        messageState: \"error\",\n        message: \"Some Fields are missing\",\n      });\n      return;\n    }\n    if (!product_name) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Added\",\n        messageState: \"success\",\n        formData: [...this.state.formData, _fcontent],\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Exists\",\n        messageState: \"warning\",\n      });\n    }\n  };\n\n  handleDrugNameKeyUp = async (e, v) => {\n    const res = e.target.value\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\n      : [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  };\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChangeDrugName = (e, v) => {\n    if (v) {\n      if (!this.IsJsonString(v.product_units)) {\n        this.setState({\n          ...this.state,\n          open: true,\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\n          messageState: \"warning\",\n        });\n        return;\n      }\n      this.setState(\n        {\n          ...this.state,\n          active_drug: v,\n        },\n        () => {\n          let arr = JSON.parse(this.state.active_drug.product_units);\n          this.setState({\n            ...this.state,\n            active_selling_unit: arr[arr.length - 1].selling_unit,\n            active_retail_price: arr[arr.length - 1].retail,\n            active_wholesale_price: arr[arr.length - 1].wholesale,\n          });\n        }\n      );\n    }\n  };\n\n  getTotals() {\n    let total = 0;\n    if (this.state.formData.length !== 0) {\n      this.state.formData.forEach((e) => {\n        total += parseInt(e.cost_price) * parseInt(e.qty);\n      });\n    }\n    return total;\n  }\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false, message: \"\" });\n    if (this.state.empty_error) {\n      this.setState({ ...this.state, empty_error: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"purchase\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"recent-grid-left\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Purchase List</h3>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ marginRight: 10 }}\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  >\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\n                      <i className=\"las la-redo\"></i>\n                    </span>\n                    Cancel\n                  </Button>\n                </div>\n                <div className=\"card-body tbl_ctr\">\n                  <table width=\"100%\">\n                    <thead>\n                      <tr>\n                        <td>Name</td>\n                        <td>Qty</td>\n                        <td>Batch No.</td>\n                        <td>Expiry Date</td>\n                        <td>Cost Price(Shs)</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.formData.length === 0 ? (\n                        <tr>\n                          <td>No Product Added</td>\n                        </tr>\n                      ) : (\n                        this.state.formData.map((v, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.batch_no}</td>\n                              <td>{v.expiry_date}</td>\n                              <td>\n                                {parseInt(v.cost_price) * parseInt(v.qty)}\n                              </td>\n                              <td>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => {\n                                    let arr = this.state.formData;\n                                    arr.splice(i, 1);\n                                    this.setState({\n                                      ...this.state,\n                                      formData: arr,\n                                    });\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        })\n                      )}\n                    </tbody>\n                    <thead>\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>Total</td>\n                        <td>{this.getTotals()}</td>\n                      </tr>\n                    </thead>\n                  </table>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">New Purchase</h3>\n                    <div className=\"\">\n                      <Button\n                        type=\"submit\"\n                        aria-describedby={this.id}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-plus-circle\"></i>\n                        </span>\n                        Add\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Product Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <Autocomplete\n                              id=\"combo-box-demo\"\n                              options={this.state.products}\n                              getOptionLabel={(option) =>\n                                `${option.product_generic_name} ${option.product_description_name}`\n                              }\n                              onChange={this.handleChangeDrugName}\n                              onKeyUp={this.handleDrugNameKeyUp}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Search Product\"\n                                  name=\"product_name\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              name=\"batch_no\"\n                              variant=\"outlined\"\n                              label=\"Batch Number\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              type=\"date\"\n                              name=\"expiry_date\"\n                              variant=\"outlined\"\n                              helperText=\"Expiry Date\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"supplier\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"supplier\">Supplier</InputLabel>\n                              <Select\n                                inputProps={{ name: \"supplier\" }}\n                                label=\"supplier\"\n                                id=\"select_supplier\"\n                                defaultValue=\"\"\n                              >\n                                {this.state.suppliers.length === 0\n                                  ? \"No Supplier Added\"\n                                  : this.state.suppliers.map((v, i) => {\n                                      return (\n                                        <MenuItem value={v.supplier_id} key={i}>\n                                          {v.supplier_surname}\n                                        </MenuItem>\n                                      );\n                                    })}\n                              </Select>\n                            </FormControl>\n                          </div>\n                          <div className=\"inpts_on_right\">\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"selling_unit\"\n                              disabled={this.state.active_drug ? false : true}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"selling_unit\">\n                                Purchasing Unit\n                              </InputLabel>\n                              <Select\n                                inputProps={{\n                                  name: \"selling_unit\",\n                                }}\n                                label=\"Purchasing Unit\"\n                                id=\"select_selling_unit\"\n                                value={this.state.active_selling_unit}\n                                onChange={(e, v) => {\n                                  let arr = JSON.parse(\n                                    this.state.active_drug.product_units\n                                  );\n                                  this.setState({\n                                    ...this.state,\n                                    active_retail_price: arr.find(\n                                      (el) => el.selling_unit === e.target.value\n                                    ).retail,\n                                    active_wholesale_price: arr.find(\n                                      (el) => el.selling_unit === e.target.value\n                                    ).wholesale,\n                                  });\n                                  this.setState({\n                                    ...this.state,\n                                    active_selling_unit: e.target.value,\n                                  });\n                                }}\n                              >\n                                {this.state.active_drug ? (\n                                  JSON.parse(\n                                    this.state.active_drug.product_units\n                                  ).map((v, i) => {\n                                    return (\n                                      <MenuItem key={i} value={v.selling_unit}>\n                                        {v.selling_unit}\n                                      </MenuItem>\n                                    );\n                                  })\n                                ) : (\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\n                                )}\n                              </Select>\n                            </FormControl>\n                            <TextField\n                              error={this.state.empty_error}\n                              type=\"number\"\n                              name=\"qty\"\n                              variant=\"outlined\"\n                              label=\"Quantity\"\n                              defaultValue={0}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              name=\"cost_price\"\n                              variant=\"outlined\"\n                              type=\"number\"\n                              label=\"Unit Cost Price(Ushs)\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_id\"\n                              defaultValue={\n                                this.state.active_drug\n                                  ? this.state.active_drug.product_id\n                                  : \"\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n                <form\n                  className=\"card\"\n                  style={{ marginTop: \"20px\" }}\n                  onSubmit={this.handlePurchase}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">Payment</h3>\n                    <div className=\"\">\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Finish Purchase\n                        <span style={{ fontSize: \"15px\", marginLeft: \"10px\" }}>\n                          <i className=\"las la-angle-double-right\"></i>\n                        </span>\n                      </Button>\n                    </div>\n                  </div>\n                  <Finish t={this.getTotals()} />\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewPurchase;\n\nfunction Finish({ t }) {\n  const [discount, setDiscount] = useState(0);\n  return (\n    <div className=\"_finish_purchase_ctr\">\n      <TextField\n        name=\"total_amount\"\n        variant=\"outlined\"\n        label=\"Total\"\n        value={t}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"pay_amount\"\n        variant=\"outlined\"\n        label=\"Amount to Be Paid\"\n        value={t - discount}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Button, Snackbar, IconButton } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport UsersApi from \"../../api/users\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      product: {},\n    };\n    this.product();\n  }\n\n  async product() {\n    let id = parseInt(\n      new URLSearchParams(window.location.search).get(\"product-id\")\n    );\n    const [res] = await UsersApi.data(`/user/all/product/${id}`);\n    if (res) {\n      this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <h3>Product Details</h3>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Print\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h3>\n                          Product No: {this.state.product.product_track_number}\n                        </h3>\n                        <div className=\"inputs_ctr\">\n                          <table width=\"100%\">\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Product Name :\n                                </span>\n                                {this.state.product.product_name}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Quantity in Stock :\n                                </span>\n                                {this.state.product.quantity}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Unit Price :\n                                </span>\n                                {\"UGX\"}\n                                {\"\"}\n                                {this.state.product.unit_price}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Cost Price :\n                                </span>\n                                {\"UGX\"} {\"\"}\n                                {this.state.product.cost_price}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Total Sales:\n                                </span>\n                                0\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Income:\n                                </span>\n                                UGX 0\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Total Purchases:\n                                </span>\n                                0\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Expenses:\n                                </span>\n                                UGX 0\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Date Added :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_added\n                                ).getDate() +\n                                  \"-\" +\n                                  (new Date(\n                                    this.state.product.date_added\n                                  ).getMonth() +\n                                    1) +\n                                  \"-\" +\n                                  new Date(\n                                    this.state.product.date_added\n                                  ).getFullYear()}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Time :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_added\n                                ).getHours() +\n                                  \":\" +\n                                  new Date(\n                                    this.state.product.date_added\n                                  ).getMinutes() +\n                                  (new Date(\n                                    this.state.product.date_added\n                                  ).getHours() < 12\n                                    ? \"AM\"\n                                    : \"PM\")}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Expiry Date :\n                                </span>\n                                {this.state.product.expiry_date}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Description :\n                                </span>\n                                {this.state.product.product_description}\n                              </td>\n                            </tr>\n                          </table>\n                        </div>\n                        <h5>Supplier</h5>\n                        <div className=\"inputs_ctr\">\n                          <table width=\"100%\">\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Surname :\n                                </span>\n                                {this.state.product.supplier_surname}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Lastname :\n                                </span>\n                                {this.state.product.supplier_lastname}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Date Added :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_registered\n                                ).getDate() +\n                                  \"-\" +\n                                  (new Date(\n                                    this.state.product.date_registered\n                                  ).getMonth() +\n                                    1) +\n                                  \"-\" +\n                                  new Date(\n                                    this.state.product.date_registered\n                                  ).getFullYear()}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Time :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_registered\n                                ).getHours() +\n                                  \":\" +\n                                  new Date(\n                                    this.state.product.date_registered\n                                  ).getMinutes() +\n                                  (new Date(\n                                    this.state.product.date_registered\n                                  ).getHours() < 12\n                                    ? \"AM\"\n                                    : \"PM\")}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Contact :\n                                </span>\n                                {this.state.product.supplier_contact}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Location :\n                                </span>\n                                {this.state.product.supplier_location}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Address :\n                                </span>\n                                {this.state.product.supplier_address}\n                              </td>\n                            </tr>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Product;\n","import React, { Component } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      open_dialog: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      suppliers: [],\n      units: [],\n      new_unit_error: false,\n      empty_name_error: false,\n      selling_units: [],\n    };\n    this.units();\n  }\n\n  async units() {\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        selling_units: res === \"Error\" ? [] : res,\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ ...this.state, open_dialog: false });\n  };\n\n  handleUnit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n\n    if (!content[\"unit_name\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"This field is missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/admin/new_unit\", content);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    if (this.state.units.length === 0) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"No Selling Units Registered\",\n        messageState: \"error\",\n      });\n      return;\n    }\n    if (!_fcontent[\"generic_name\"] || !_fcontent[\"re_order_qty\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"These Fields are missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n    if (\n      !(\n        this.state.units[this.state.units.length - 1].selling_unit &&\n        this.state.units[this.state.units.length - 1].qty &&\n        this.state.units[this.state.units.length - 1].retail &&\n        this.state.units[this.state.units.length - 1].wholesale\n      )\n    ) {\n      this.setState({\n        ...this.state,\n        new_unit_error: true,\n        open: true,\n        message: \"Some Fields are Missing\",\n        messageState: \"error\",\n      });\n      return;\n    }\n    _fcontent[\"units\"] = this.state.units;\n    _fcontent[\"date\"] = Date.now();\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_product\", _fcontent);\n\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      ...this.state,\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"info\",\n      empty_name_error: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                          onClick={(e) => {\n                            this.setState({\n                              ...this.state,\n                              open_dialog: true,\n                            });\n                          }}\n                        >\n                          Add Unit\n                        </Button>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginRight: 10 }}\n                          onClick={() => {\n                            window.location.reload();\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginLeft: 10 }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Medicine Entry</h4>\n                        <div className=\"inputs_ctr_np\">\n                          <div className=\"inputs_left_np\">\n                            <TextField\n                              error={this.state.empty_name_error}\n                              name=\"generic_name\"\n                              variant=\"outlined\"\n                              label=\"Generic Name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <TextField\n                                error={this.state.empty_name_error}\n                                type=\"number\"\n                                name=\"re_order_qty\"\n                                variant=\"outlined\"\n                                label=\"Re-order Qty\"\n                                style={{ flex: 1, marginRight: \"5px\" }}\n                              />\n                              <TextField\n                                value={\n                                  this.state.units.length > 0 &&\n                                  this.state.units[this.state.units.length - 1]\n                                    .selling_unit\n                                    ? this.state.units[\n                                        this.state.units.length - 1\n                                      ].selling_unit\n                                    : \"\"\n                                }\n                                name=\"re_order_unit\"\n                                variant=\"outlined\"\n                                label=\"Unit\"\n                                style={{ flex: 1, marginLeft: \"5px\" }}\n                              />\n                            </div>\n                            <TextField\n                              name=\"description\"\n                              variant=\"outlined\"\n                              label=\"Medicine Description\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inputs_right_np\">\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\n                            <div className=\"tbl_ctr_np\">\n                              <table width=\"100%\">\n                                <thead>\n                                  <tr>\n                                    <td>Selling Unit</td>\n                                    <td>Quantity</td>\n                                    <td>Retail</td>\n                                    <td>Wholesale</td>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {this.state.units.length === 0 ? (\n                                    <tr>\n                                      <td>No Selected Units</td>\n                                    </tr>\n                                  ) : (\n                                    this.state.units.map((v, i) => {\n                                      return (\n                                        <tr key={i}>\n                                          <td>\n                                            <FormControl\n                                              error={this.state.new_unit_error}\n                                              variant=\"standard\"\n                                              label=\"supplier\"\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            >\n                                              <InputLabel id=\"selling_unit\">\n                                                {i === 0\n                                                  ? `Smallest Unit`\n                                                  : `Unit ${i + 1}`}\n                                              </InputLabel>\n                                              <Select\n                                                inputProps={{\n                                                  name: \"selling_unit\",\n                                                }}\n                                                label={\n                                                  i === 0\n                                                    ? `Smallest Unit`\n                                                    : `Unit ${i + 1}`\n                                                }\n                                                id=\"select_selling_unit\"\n                                                defaultValue=\"\"\n                                                onChange={(e) => {\n                                                  let units_change =\n                                                    this.state.units;\n                                                  units_change[i].selling_unit =\n                                                    e.target.value;\n                                                  this.setState({\n                                                    ...this.state,\n                                                    units: units_change,\n                                                  });\n                                                }}\n                                              >\n                                                {this.state.selling_units\n                                                  .length === 0 ? (\n                                                  <MenuItem value=\"no_unit\">\n                                                    No Unit Added\n                                                  </MenuItem>\n                                                ) : (\n                                                  this.state.selling_units.map(\n                                                    (v, i) => {\n                                                      return (\n                                                        <MenuItem\n                                                          value={v.unit_name}\n                                                          key={i}\n                                                        >\n                                                          {v.unit_name}\n                                                        </MenuItem>\n                                                      );\n                                                    }\n                                                  )\n                                                )}\n                                              </Select>\n                                            </FormControl>\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              multiline={true}\n                                              variant=\"standard\"\n                                              defaultValue={i === 0 ? \"1\" : \"\"}\n                                              label={\n                                                i === 0\n                                                  ? `Quantity`\n                                                  : `Quantity In Unit ${i}`\n                                              }\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].qty =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Retail\"\n                                              error={this.state.new_unit_error}\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].retail =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Wholesale\"\n                                              error={this.state.new_unit_error}\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].wholesale =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <Button\n                                              color=\"primary\"\n                                              variant=\"outlined\"\n                                              onClick={() => {\n                                                let units = this.state.units;\n                                                units.splice(i, 1);\n                                                this.setState({\n                                                  ...this.state,\n                                                  units,\n                                                });\n                                              }}\n                                            >\n                                              Remove\n                                            </Button>\n                                          </td>\n                                        </tr>\n                                      );\n                                    })\n                                  )}\n                                </tbody>\n                              </table>\n                            </div>\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                width: \"95%\",\n                                margin: \"10px auto\",\n                              }}\n                            >\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  if (this.state.units.length === 0) {\n                                    this.setState({\n                                      ...this.state,\n                                      units: [...this.state.units, { qty: 1 }],\n                                    });\n                                  } else if (this.state.units.length === 1) {\n                                    let units = this.state.units;\n                                    if (\n                                      !units[0].selling_unit ||\n                                      !units[0].qty ||\n                                      !units[0].retail ||\n                                      !units[0].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are missing\",\n                                        messageState: \"error\",\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    }\n                                  } else {\n                                    let units = this.state.units;\n                                    if (\n                                      units[units.length - 1].selling_unit &&\n                                      units[units.length - 1].qty &&\n                                      units[units.length - 1].retail &&\n                                      units[units.length - 1].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are Missing\",\n                                        messageState: \"error\",\n                                      });\n                                    }\n                                  }\n                                }}\n                              >\n                                New Unit\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n\n        <Dialog\n          open={this.state.open_dialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\n            <DialogContent>\n              <DialogContentText>\n                <TextField\n                  error={this.state.empty_name_error}\n                  name=\"unit_name\"\n                  variant=\"standard\"\n                  label=\"Unit Name\"\n                  style={{\n                    width: \"85%\",\n                    margin: \"20px\",\n                  }}\n                />\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default NewProduct;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nclass NotFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ marginBlock: 20 }}>404</h1>\n        <span style={{ marginBlock: 10 }}>\n          This Page Was Not Found On The Server\n        </span>\n        <Link to=\"/\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginBlock: 20 }}\n          >\n            <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\n              <span className=\"las la-home\"></span>\n            </span>\n            Home\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"../app.css\";\nimport \"line-awesome/dist/line-awesome/css/line-awesome.css\";\nimport Dashboard from \"../Routes/dispenser/Dashboard\";\nimport NewSale from \"../Routes/dispenser/Newsale\";\nimport AllProducts from \"../Routes/dispenser/allProducts\";\nimport NewPurchase from \"../Routes/dispenser/new_purchase\";\nimport Product from \"../Routes/dispenser/product\";\nimport NewProduct from \"../Routes/dispenser/new-product\";\nimport NotFound from \"../components/404\";\n\nclass Dispenser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/new-sale\" exact component={NewSale} />\n            <Route path=\"/all-products\" exact component={AllProducts} />\n            <Route path=\"/new-purchase\" exact component={NewPurchase} />\n            <Route path=\"/new-product\" exact component={NewProduct} />\n            <Route path=\"/product\" exact component={Product} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Dispenser;\n","// import React, { Component } from \"react\";\n// import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n// import \"../app.css\";\n// import \"line-awesome/dist/line-awesome/css/line-awesome.css\";\n// import Dashboard from \"../Routes/dispenser/Dashboard\";\n// import NewSale from \"../Routes/dispenser/Newsale\";\n// import AllProducts from \"../Routes/dispenser/allProducts\";\n// import Product from \"../Routes/dispenser/product\";\n// import NotFound from \"../components/404\";\n\n// class Dispenser extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div>\n//           <Switch>\n//             <Route path=\"/\" exact component={Dashboard} />\n//             <Route path=\"/new-sale\" exact component={NewSale} />\n//             <Route path=\"/all-products\" exact component={AllProducts} />\n//             <Route path=\"/product\" exact component={Product} />\n//             <Route path=\"*\" component={NotFound} />\n//           </Switch>\n//         </div>\n//       </BrowserRouter>\n//     );\n//   }\n// }\n\n// export default Dispenser;\n\nimport React, { Component } from \"react\";\n\nclass Cashier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <h1>Xamuel</h1>\n      </>\n    );\n  }\n}\n\nexport default Cashier;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <div className=\"sideBar-ctr\">\n          <div className=\"sidebar\">\n            <label htmlFor=\"nav-toggle\" className=\"close-on-sm\">\n              <span className=\"las la-times\"></span>\n            </label>\n            <div className=\"sidebar-brand\">\n              <h2>\n                <span\n                  className=\"las la-clinic-medical\"\n                  style={{ fontSize: \"32px\" }}\n                ></span>\n                <span>Pharmacy</span>\n              </h2>\n            </div>\n            <div className=\"sidebar-menu\">\n              <ul>\n                <li>\n                  <Link to=\"/\">\n                    <span\n                      className={`${\n                        this.props.active === \"dashboard\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-home\"></span>\n                      <span>Dashboard</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/new-sale\">\n                    <span\n                      className={`${\n                        this.props.active === \"sale\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-user-plus\"></span>\n                      <span>New Sale</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/new-purchase\">\n                    <span\n                      className={`${\n                        this.props.active === \"purchase\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-prescription-bottle-alt\"></span>\n                      <span>New Purchase</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/finance\">\n                    <span\n                      className={`${\n                        this.props.active === \"finance\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-comments-dollar\"></span>\n                      <span>Finance</span>\n                    </span>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/reports\">\n                    <span\n                      className={`${\n                        this.props.active === \"reports\" ? \"active\" : \"\"\n                      } _a_replaced`}\n                    >\n                      <span className=\"las la-comment\"></span>\n                      <span>Reports</span>\n                    </span>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport Avatar from \"../../../assets/place-holder.jpg\";\nimport {\n  Menu,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport user from \"../../../app_config\";\nimport { Logout } from \"../../../components/Login\";\nfunction Header() {\n  const [AnchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenActions = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleCloseActions = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <header>\n        <h2>\n          <label htmlFor=\"nav-toggle\">\n            <span className=\"las la-bars\"></span>\n          </label>\n          <span className=\"health_unit_name\">Freedom Health</span>\n        </h2>\n        {/* <div className=\"search-wrapper\">\n          <span className=\"las la-search\"></span>\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Search here\" />\n        </div> */}\n        <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div className=\"\" style={{ fontSize: \"42px\", marginRight: 20 }}>\n            <i className=\"las la-bell\"></i>\n          </div>\n          <div\n            className=\"user-wrapper\"\n            aria-controls=\"reception-actions\"\n            aria-haspopup=\"true\"\n            onClick={handleOpenActions}\n            style={{ cursor: \"pointer\" }}\n          >\n            <img src={Avatar} alt=\"\" width=\"40px\" height=\"40px\" />\n            <div className=\"\">\n              <h4>{user.user.username}</h4>\n              <small>{user.user.user_role}</small>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <Menu\n        id=\"reception-actions\"\n        anchorEl={AnchorEl}\n        keepMounted\n        disableScrollLock={true}\n        open={Boolean(AnchorEl)}\n        onClose={handleCloseActions}\n      >\n        <MenuItem onClick={handleCloseActions}>\n          <span style={{ fontSize: 24, marginRight: 10 }}>\n            <i className=\"las la-user-alt\"></i>\n          </span>\n          Profile\n        </MenuItem>\n        <MenuItem onClick={handleClickOpenDialog}>\n          <span style={{ fontSize: 24, marginRight: 10 }}>\n            <i className=\"las la-sign-out-alt\"></i>\n          </span>\n          Log out\n        </MenuItem>\n      </Menu>\n\n      <Dialog\n        open={open}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Want to Log Out. Click 'Stay' to close, Log Out to Continue\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Stay\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            onClick={() => {\n              Logout();\n            }}\n          >\n            Log Out\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\nimport { Link } from \"react-router-dom\";\nimport Helper from \"../../components/format\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      products: [],\n      sales_number_daily: \"...\",\n      sales_number_monthly: \"...\",\n      expiry_products: [],\n      less_qty_pdts: [],\n    };\n    this.products();\n    this.sales();\n    this.expiry_products();\n    this.less_qty();\n  }\n\n  expiry_products = async () => {\n    const res = (await UsersApi.data(\"/user/all/batch/expiry\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        expiry_products: res !== \"Error\" ? res : [],\n      });\n    }\n  };\n  less_qty = async () => {\n    const res = (await UsersApi.data(\"/user/all/less_qty\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        less_qty_pdts: res !== \"Error\" ? res : [],\n      });\n    }\n  };\n\n  async products() {\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  }\n\n  async sales() {\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\n    let sales_daily = 0;\n    let sales_monthly = 0;\n    res === \"Error\"\n      ? this.setState({\n          ...this.state,\n          sales_number_monthly: 0,\n          sales_number_daily: 0,\n        })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.sales_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            sales_daily++;\n          }\n          if (\n            new Date(parseInt(e.sales_date)).getMonth() ===\n            new Date(Date.now()).getMonth()\n          ) {\n            sales_monthly++;\n          }\n        });\n    this.setState({\n      ...this.state,\n      sales_number_monthly: sales_monthly,\n      sales_number_daily: sales_daily,\n    });\n  }\n\n  handleOpenActions = (e) => {\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\n  };\n  handleOpenActionsDrugs = (e) => {\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\n  };\n  handleCloseActions = () => {\n    this.setState({ ...this.state, AnchorEl: null });\n  };\n  handleCloseActionsDrugs = () => {\n    this.setState({ ...this.state, AnchorElDrugs: null });\n  };\n\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"cards\">\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.expiry_products.length)}</h3>\n                  <span>\n                    Medicines <br />\n                    <span style={{ fontSize: \"13px\" }}>\n                      Expire in less than 90 days\n                    </span>\n                  </span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.sales_number_monthly)}</h3>\n                  <span>Sales</span>\n                  <br />\n                  <span style={{ fontSize: \"13px\" }}>Made This Month</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"></span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.sales_number_daily)}</h3>\n                  <span>Sales</span>\n                  <br />\n                  <span style={{ fontSize: \"13px\" }}>Made Today</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h3>{Helper.format(this.state.products.length)}</h3>\n                  <span>Medicines</span>\n                  <br />\n                  <span style={{ fontSize: \"13px\" }}>Registered</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"recent-grid\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Batches - Expiring In 90 Days</h3>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-controls=\"drug-actions\"\n                      aria-haspopup=\"true\"\n                      onClick={this.handleOpenActionsDrugs}\n                    >\n                      Menu\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-angle-down\"></span>\n                      </span>\n                    </Button>\n                    <Menu\n                      id=\"drug-actions\"\n                      anchorEl={this.state.AnchorElDrugs}\n                      keepMounted\n                      open={Boolean(this.state.AnchorElDrugs)}\n                      onClose={this.handleCloseActionsDrugs}\n                      disableScrollLock={true}\n                    >\n                      <Link to=\"/new-product\">\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\n                          New Medicine\n                        </MenuItem>\n                      </Link>\n                      <Link to=\"/all-products\">\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\n                          Medicines\n                        </MenuItem>\n                      </Link>\n                      <Link to=\"/all-batches\">\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\n                          Medicine Batches\n                        </MenuItem>\n                      </Link>\n                    </Menu>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Name</td>\n                          <td>Batch No.</td>\n                          <td>Quantity In Batch</td>\n                          <td>Expires On</td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.expiry_products.length === 0 ? (\n                          <tr>\n                            <td>No Medicine Expires In 90 days</td>\n                          </tr>\n                        ) : (\n                          this.state.expiry_products.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"name_cell\">\n                                  {v.product_generic_name}\n                                </td>\n                                <td>{v.batch_no}</td>\n                                <td>{v.batch_qty}</td>\n                                <td>{v.batch_expiry_date}</td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Quantity Less Re-order Level</h3>\n                    <div className=\"\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                          window.location.reload();\n                        }}\n                        style={{ marginRight: \"15px\" }}\n                        className=\"small-none\"\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\n                        >\n                          <span className=\"las la-redo\"></span>\n                        </span>\n                        Refresh\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        aria-controls=\"reception-actions\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpenActions}\n                      >\n                        Other Menu\n                        <span\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\n                        >\n                          <span className=\"las la-angle-down\"></span>\n                        </span>\n                      </Button>\n                      <Menu\n                        id=\"reception-actions\"\n                        anchorEl={this.state.AnchorEl}\n                        keepMounted\n                        open={Boolean(this.state.AnchorEl)}\n                        onClose={this.handleCloseActions}\n                        disableScrollLock={true}\n                      >\n                        <Link to=\"/new-user\">\n                          <MenuItem onClick={this.handleCloseActions}>\n                            New User\n                          </MenuItem>\n                        </Link>\n                        <Link to=\"/new-supplier\">\n                          <MenuItem onClick={this.handleCloseActions}>\n                            New Supplier\n                          </MenuItem>\n                        </Link>\n                        <Link to=\"/new-customer\">\n                          <MenuItem onClick={this.handleCloseActions}>\n                            New Customer\n                          </MenuItem>\n                        </Link>\n                      </Menu>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Name</td>\n                          <td>Re-order Level</td>\n                          <td>Quantity</td>\n                          <td>Unit</td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.less_qty_pdts.length === 0 ? (\n                          <tr>\n                            <td>No Medicines to display</td>\n                          </tr>\n                        ) : (\n                          this.state.less_qty_pdts.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"name_cell\">\n                                  {`\n                                  ${v.product_generic_name}\n                                  ${v.product_description_name}\n                                  `}\n                                </td>\n                                <td>{v.product_re_order}</td>\n                                <td>{v.product_qty}</td>\n                                <td>\n                                  {this.IsJsonString(v.product_units)\n                                    ? JSON.parse(v.product_units)[0]\n                                        .selling_unit\n                                    : \"No Product Units\"}\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      open_dialog: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      suppliers: [],\n      units: [],\n      new_unit_error: false,\n      empty_name_error: false,\n      selling_units: [],\n    };\n    this.units();\n  }\n\n  async units() {\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        selling_units: res === \"Error\" ? [] : res,\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ ...this.state, open_dialog: false });\n  };\n\n  handleUnit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n\n    if (!content[\"unit_name\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"This field is missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/admin/new_unit\", content);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    if (this.state.units.length === 0) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"No Selling Units Registered\",\n        messageState: \"error\",\n      });\n      return;\n    }\n    if (!_fcontent[\"generic_name\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"The Generic Name is missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n    if (\n      !(\n        this.state.units[this.state.units.length - 1].selling_unit &&\n        this.state.units[this.state.units.length - 1].qty &&\n        this.state.units[this.state.units.length - 1].retail &&\n        this.state.units[this.state.units.length - 1].wholesale\n      )\n    ) {\n      this.setState({\n        ...this.state,\n        new_unit_error: true,\n        open: true,\n        message: \"Some Fields are Missing\",\n        messageState: \"error\",\n      });\n      return;\n    }\n    _fcontent[\"units\"] = this.state.units;\n    _fcontent[\"date\"] = Date.now();\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_product\", _fcontent);\n\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      ...this.state,\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"info\",\n      empty_name_error: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                          onClick={(e) => {\n                            this.setState({\n                              ...this.state,\n                              open_dialog: true,\n                            });\n                          }}\n                        >\n                          Add Unit\n                        </Button>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginRight: 10 }}\n                          onClick={() => {\n                            window.location.reload();\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginLeft: 10 }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Medicine Entry</h4>\n                        <div className=\"inputs_ctr_np\">\n                          <div className=\"inputs_left_np\">\n                            <TextField\n                              error={this.state.empty_name_error}\n                              name=\"generic_name\"\n                              variant=\"outlined\"\n                              label=\"Generic Name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <TextField\n                                error={this.state.empty_name_error}\n                                type=\"number\"\n                                name=\"re_order_qty\"\n                                variant=\"outlined\"\n                                label=\"Re-order Qty\"\n                                style={{ flex: 1, marginRight: \"5px\" }}\n                              />\n                              <TextField\n                                value={\n                                  this.state.units.length > 0 &&\n                                  this.state.units[this.state.units.length - 1]\n                                    .selling_unit\n                                    ? this.state.units[\n                                        this.state.units.length - 1\n                                      ].selling_unit\n                                    : \"\"\n                                }\n                                name=\"re_order_unit\"\n                                variant=\"outlined\"\n                                label=\"Unit\"\n                                style={{ flex: 1, marginLeft: \"5px\" }}\n                              />\n                            </div>\n                            <TextField\n                              name=\"description\"\n                              variant=\"outlined\"\n                              label=\"Medicine Description\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inputs_right_np\">\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\n                            <div className=\"tbl_ctr_np\">\n                              <table width=\"100%\">\n                                <thead>\n                                  <tr>\n                                    <td>Selling Unit</td>\n                                    <td>Quantity</td>\n                                    <td>Retail</td>\n                                    <td>Wholesale</td>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {this.state.units.length === 0 ? (\n                                    <tr>\n                                      <td>No Selected Units</td>\n                                    </tr>\n                                  ) : (\n                                    this.state.units.map((v, i) => {\n                                      return (\n                                        <tr key={i}>\n                                          <td>\n                                            <FormControl\n                                              error={this.state.new_unit_error}\n                                              variant=\"standard\"\n                                              label=\"selling_unit\"\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            >\n                                              <InputLabel id=\"selling_unit\">\n                                                {i === 0\n                                                  ? `Smallest Unit`\n                                                  : `Unit ${i + 1}`}\n                                              </InputLabel>\n                                              <Select\n                                                inputProps={{\n                                                  name: \"selling_unit\",\n                                                }}\n                                                label={\n                                                  i === 0\n                                                    ? `Smallest Unit`\n                                                    : `Unit ${i + 1}`\n                                                }\n                                                id=\"select_selling_unit\"\n                                                defaultValue=\"\"\n                                                onChange={(e) => {\n                                                  let units_change =\n                                                    this.state.units;\n                                                  units_change[i].selling_unit =\n                                                    e.target.value;\n                                                  this.setState({\n                                                    ...this.state,\n                                                    units: units_change,\n                                                  });\n                                                }}\n                                              >\n                                                {this.state.selling_units\n                                                  .length === 0 ? (\n                                                  <MenuItem value=\"no_unit\">\n                                                    No Unit Added\n                                                  </MenuItem>\n                                                ) : (\n                                                  this.state.selling_units.map(\n                                                    (v, i) => {\n                                                      return (\n                                                        <MenuItem\n                                                          value={v.unit_name}\n                                                          key={i}\n                                                        >\n                                                          {v.unit_name}\n                                                        </MenuItem>\n                                                      );\n                                                    }\n                                                  )\n                                                )}\n                                              </Select>\n                                            </FormControl>\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              multiline={true}\n                                              variant=\"standard\"\n                                              defaultValue={i === 0 ? \"1\" : \"\"}\n                                              label={\n                                                i === 0\n                                                  ? `Quantity`\n                                                  : `Quantity In Unit ${i}`\n                                              }\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].qty =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Retail\"\n                                              error={this.state.new_unit_error}\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].retail =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Wholesale\"\n                                              error={this.state.new_unit_error}\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].wholesale =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <Button\n                                              color=\"primary\"\n                                              variant=\"outlined\"\n                                              onClick={() => {\n                                                let units = this.state.units;\n                                                units.splice(i, 1);\n                                                this.setState({\n                                                  ...this.state,\n                                                  units,\n                                                });\n                                              }}\n                                            >\n                                              Remove\n                                            </Button>\n                                          </td>\n                                        </tr>\n                                      );\n                                    })\n                                  )}\n                                </tbody>\n                              </table>\n                            </div>\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                width: \"95%\",\n                                margin: \"10px auto\",\n                              }}\n                            >\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  if (this.state.units.length === 0) {\n                                    this.setState({\n                                      ...this.state,\n                                      units: [...this.state.units, { qty: 1 }],\n                                    });\n                                  } else if (this.state.units.length === 1) {\n                                    let units = this.state.units;\n                                    if (\n                                      !units[0].selling_unit ||\n                                      !units[0].qty ||\n                                      !units[0].retail ||\n                                      !units[0].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are missing\",\n                                        messageState: \"error\",\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    }\n                                  } else {\n                                    let units = this.state.units;\n                                    if (\n                                      units[units.length - 1].selling_unit &&\n                                      units[units.length - 1].qty &&\n                                      units[units.length - 1].retail &&\n                                      units[units.length - 1].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are Missing\",\n                                        messageState: \"error\",\n                                      });\n                                    }\n                                  }\n                                }}\n                              >\n                                New Unit\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n\n        <Dialog\n          open={this.state.open_dialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\n            <DialogContent>\n              <DialogContentText>\n                <TextField\n                  error={this.state.empty_name_error}\n                  name=\"unit_name\"\n                  variant=\"standard\"\n                  label=\"Unit Name\"\n                  style={{\n                    width: \"85%\",\n                    margin: \"20px\",\n                  }}\n                />\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default NewProduct;\n","import React, { Component } from \"react\";\nimport { TextField, Snackbar, Button, IconButton } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewSupplier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n    };\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    _fcontent[\"date\"] = Date.now();\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_supplier\", _fcontent);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <h3>New Supplier</h3>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Supplier Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <TextField\n                              name=\"supplier_surname\"\n                              variant=\"outlined\"\n                              label=\"First name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"supplier_lastname\"\n                              variant=\"outlined\"\n                              label=\"Last name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"supplier_contact\"\n                              variant=\"outlined\"\n                              label=\"Phonenumber\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"supplier_location\"\n                              variant=\"outlined\"\n                              label=\"Location\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inpts_center\">\n                            <TextField\n                              name=\"supplier_address\"\n                              variant=\"outlined\"\n                              label=\"Address\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewSupplier;\n","import React, { Component } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n    };\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_customer\", _fcontent);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <h3>New Customer</h3>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginRight: 10 }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginLeft: 10 }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Customer Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <TextField\n                              name=\"surname\"\n                              variant=\"outlined\"\n                              label=\"Surname\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"first_name\"\n                              variant=\"outlined\"\n                              label=\"First Name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"phone_contact\"\n                              variant=\"outlined\"\n                              label=\"Phone Contact\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inpts_center\">\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"type\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"type\">\n                                Type Of Customer\n                              </InputLabel>\n                              <Select\n                                inputProps={{ name: \"type\" }}\n                                label=\"type\"\n                                id=\"select_type\"\n                                defaultValue=\"\"\n                              >\n                                <MenuItem value=\"Retailer\">Retailer</MenuItem>\n                                <MenuItem value=\"Wholesaler\">\n                                  Wholesaler\n                                </MenuItem>\n                              </Select>\n                            </FormControl>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewCustomer;\n","import React, { Component } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass New_user extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      departments: [],\n    };\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    let api = new FormsApi();\n    let res = await api.post(\"/user/admin/new_user\", _fcontent);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"users\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <h3>New User</h3>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>User Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <TextField\n                              name=\"surname\"\n                              variant=\"outlined\"\n                              label=\"Surname\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"first_name\"\n                              variant=\"outlined\"\n                              label=\"First Name\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              name=\"username\"\n                              variant=\"outlined\"\n                              label=\"Username\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inpts_center\">\n                            <TextField\n                              name=\"phone_contact\"\n                              variant=\"outlined\"\n                              label=\"Phone Contact\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"Role\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"role\">Role</InputLabel>\n                              <Select\n                                inputProps={{ name: \"role\" }}\n                                id=\"select_role\"\n                                label=\"Role\"\n                                defaultValue=\"dispenser\"\n                              >\n                                <MenuItem value=\"dispenser\">Dispenser</MenuItem>\n                                <MenuItem value=\"admin\">Admin</MenuItem>\n                              </Select>\n                            </FormControl>\n\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"Gender\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"gender\">Gender</InputLabel>\n                              <Select\n                                inputProps={{ name: \"gender\" }}\n                                id=\"select_gender\"\n                                label=\"Gender\"\n                                defaultValue=\"M\"\n                              >\n                                <MenuItem value=\"M\">Male</MenuItem>\n                                <MenuItem value=\"F\">Female</MenuItem>\n                              </Select>\n                            </FormControl>\n                          </div>\n                          <div className=\"inpts_on_right\">\n                            <TextField\n                              type=\"password\"\n                              name=\"password\"\n                              variant=\"outlined\"\n                              label=\"Password\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              type=\"password\"\n                              name=\"confirm_password\"\n                              variant=\"outlined\"\n                              label=\"Confirm Password\"\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default New_user;\n","import React, { Component, useState } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport qz from \"qz-tray\";\n\nimport \"../../design/main.css\";\nimport \"../../design/forms.css\";\nimport \"../../design/print_sale.css\";\nimport user from \"../../app_config\";\nimport data from \"../../components/raw_print\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewSale extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      print: true,\n      _content: {},\n      active_product_qty: 0,\n      active_product_re_order: 0,\n      over_qty_error: false,\n      active_sale_type: \"retail\",\n      active_selling_unit: \"\",\n      active_selling_price: \"\",\n      products: [],\n      customers: [],\n      formData: [],\n      total: 0,\n      discount: 0,\n      finish_btn_disabled: false,\n    };\n    this.customers();\n  }\n\n  print_receipt = (v) => {\n    qz.websocket\n      .connect()\n      .then(() => {\n        return qz.printers.find(\"Generic\");\n      })\n      .then((printer) => {\n        console.log(printer);\n        let config = qz.configs.create(printer);\n        return qz.print(config, data.new_sale(v));\n      })\n      .then(() => {\n        return qz.websocket.disconnect();\n      })\n      .then(() => {\n        // process.exit(0);\n      })\n      .catch((err) => {\n        console.error(err);\n        // process.exit(1);\n      });\n  };\n\n  //date for receipt\n  getDate() {\n    let date =\n      new Date(Date.now()).getDate() +\n      \" / \" +\n      (new Date(Date.now()).getMonth() + 1) +\n      \" / \" +\n      new Date(Date.now()).getFullYear();\n    return date;\n  }\n  //date for receipt\n\n  //customers\n  customers = async () => {\n    const res = (await UsersApi.data(\"/user/sale/customers\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        customers: res !== \"Error\" ? res : [],\n      });\n    }\n  };\n  //customers\n  handleSale = async (e) => {\n    e.preventDefault();\n    if (this.state.finish_btn_disabled) return;\n    this.setState({\n      ...this.state,\n      open: true,\n      messageState: \"info\",\n      finish_btn_disabled: true,\n    });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n    await this.setState({ ...this.state, _content: content });\n\n    if (this.state.formData.length !== 0) {\n      this.setState({\n        ...this.state,\n        _content: {\n          ...this.state._content,\n          products_sold: this.state.formData,\n          date: Date.now(),\n          user: user.user.username,\n        },\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"No Products To Sell\",\n        messageState: \"warning\",\n      });\n      return;\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_sale\", this.state._content);\n    if (res.status === true) {\n      if (this.state.print) {\n        this.print_receipt(this.state._content);\n      }\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"success\",\n        finish_btn_disabled: false,\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 700);\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    if (this.state.over_qty_error) {\n      this.setState({\n        ...this.state,\n        open: true,\n        messageState: \"error\",\n        message: \"Quantity Exceeds Available\",\n      });\n      return;\n    }\n    if (!this.state.active_drug) {\n      this.setState({\n        ...this.state,\n        open: true,\n        messageState: \"error\",\n        message: \"No Selling Unit\",\n      });\n      return;\n    }\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    _fcontent[\"batch\"] = this.state.batch ? this.state.batch : [];\n    const product_name = this.state.formData.find(\n      (e) => e.product_name === _fcontent.product_name\n    );\n    if (!product_name) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Added\",\n        messageState: \"success\",\n        formData: [...this.state.formData, _fcontent],\n        active_drug: null,\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Exists\",\n        messageState: \"warning\",\n      });\n    }\n  };\n\n  handleDrugNameKeyUp = async (e, v) => {\n    const res = e.target.value\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\n      : [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  };\n\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChangeDrugName = (e, v) => {\n    if (v) {\n      if (!this.IsJsonString(v.product_units)) {\n        this.setState({\n          ...this.state,\n          open: true,\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\n          messageState: \"warning\",\n        });\n        return;\n      }\n      this.setState(\n        {\n          ...this.state,\n          active_drug: v,\n        },\n        () => {\n          this.setState(\n            {\n              ...this.state,\n              active_selling_unit: JSON.parse(\n                this.state.active_drug.product_units\n              )[0].selling_unit,\n              active_selling_price: JSON.parse(\n                this.state.active_drug.product_units\n              )[0][this.state.active_sale_type],\n            },\n            () => {\n              this.setState({\n                ...this.state,\n                active_product_re_order:\n                  (this.state.active_selling_unit ===\n                  JSON.parse(this.state.active_drug.product_units)[0]\n                    .selling_unit\n                    ? parseInt(this.state.active_drug.product_re_order)\n                    : parseInt(this.state.active_drug.product_re_order) /\n                      parseInt(\n                        JSON.parse(this.state.active_drug.product_units).find(\n                          (el) => el.selling_unit === e.target.value\n                        )[\"qty\"]\n                      )) || 0,\n                active_product_qty:\n                  this.state.active_selling_unit ===\n                  JSON.parse(this.state.active_drug.product_units)[0]\n                    .selling_unit\n                    ? parseInt(this.state.active_drug.product_qty)\n                    : parseInt(this.state.active_drug.product_qty) /\n                      parseInt(\n                        JSON.parse(this.state.active_drug.product_units).find(\n                          (el) => el.selling_unit === e.target.value\n                        )[\"qty\"]\n                      ),\n              });\n            }\n          );\n        }\n      );\n    }\n  };\n\n  getTotals() {\n    let total = 0;\n    if (this.state.formData.length !== 0) {\n      this.state.formData.forEach((e) => {\n        total += parseInt(e.product_price) * parseInt(e.qty);\n      });\n    }\n    return total;\n  }\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false, message: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"sale\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"recent-grid\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Sale List</h3>\n                  <Button\n                    aria-describedby={this.id}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                    style={{ fontSize: \"17.5px\", marginRight: \"15px\" }}\n                  >\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\n                      <i className=\"las la-redo\"></i>\n                    </span>\n                    Cancel\n                  </Button>\n                </div>\n                <div className=\"card-body\">\n                  <table width=\"100%\">\n                    <thead>\n                      <tr>\n                        <td>Name</td>\n                        <td>Qty</td>\n                        <td>Unit Price(Shs)</td>\n                        <td>Total(Shs)</td>\n                        <td></td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.formData.length === 0 ? (\n                        <tr>\n                          <td>No Product Added</td>\n                        </tr>\n                      ) : (\n                        this.state.formData.map((v, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.product_price}</td>\n                              <td>\n                                {parseInt(v.product_price) * parseInt(v.qty)}\n                              </td>\n                              <td>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => {\n                                    let arr = this.state.formData;\n                                    arr.splice(i, 1);\n                                    this.setState({\n                                      ...this.state,\n                                      formData: arr,\n                                    });\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        })\n                      )}\n                    </tbody>\n                    <thead>\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td>Total</td>\n                        <td>{this.getTotals()}</td>\n                      </tr>\n                    </thead>\n                  </table>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"card-header \">\n                    <div>\n                      <FormControl\n                        variant=\"outlined\"\n                        // label=\"selling_unit\"\n                        style={{\n                          width: \"85%\",\n                          marginInline: \"20px\",\n                        }}\n                      >\n                        <InputLabel id=\"sale_type\">Sale</InputLabel>\n                        <Select\n                          inputProps={{\n                            name: \"sale_type\",\n                          }}\n                          label=\"Sale\"\n                          id=\"select_sale_type\"\n                          value={this.state.active_sale_type}\n                          onChange={(e, v) => {\n                            this.setState({\n                              ...this.state,\n                              active_sale_type: e.target.value,\n                              active_drug: null,\n                            });\n                          }}\n                        >\n                          <MenuItem value=\"retail\">Retail</MenuItem>\n                          <MenuItem value=\"wholesale\">Wholesale</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </div>\n                    <div className=\"\">\n                      <Button\n                        type=\"submit\"\n                        aria-describedby={this.id}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-plus-circle\"></i>\n                        </span>\n                        Add\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Product Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <Autocomplete\n                              id=\"combo-box-demo\"\n                              options={this.state.products}\n                              getOptionLabel={(option) =>\n                                `${option.product_generic_name} ${option.product_description_name}`\n                              }\n                              onChange={this.handleChangeDrugName}\n                              onKeyUp={this.handleDrugNameKeyUp}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Search Product\"\n                                  name=\"product_name\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            />\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              type=\"number\"\n                              name=\"qty_available\"\n                              variant=\"outlined\"\n                              label=\"Available\"\n                              value={this.state.active_product_qty}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              helperText={\n                                this.state.active_drug\n                                  ? this.state.active_product_re_order >=\n                                    this.state.active_product_qty\n                                    ? \"Purchase Needed For This Drug\"\n                                    : \"\"\n                                  : \"\"\n                              }\n                              error={\n                                this.state.active_drug\n                                  ? this.state.active_product_re_order >=\n                                    this.state.active_product_qty\n                                    ? true\n                                    : \"\"\n                                  : \"\"\n                              }\n                              type=\"number\"\n                              name=\"qty_re_order\"\n                              variant=\"outlined\"\n                              label=\"Re-order Quantity\"\n                              value={this.state.active_product_re_order}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inpts_on_right\">\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"selling_unit\"\n                              disabled={this.state.active_drug ? false : true}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"selling_unit\">\n                                Selling Unit\n                              </InputLabel>\n                              <Select\n                                inputProps={{\n                                  name: \"selling_unit\",\n                                }}\n                                label=\"Selling Unit\"\n                                id=\"select_selling_unit\"\n                                value={this.state.active_selling_unit}\n                                onChange={async (e, v) => {\n                                  await this.setState({\n                                    ...this.state,\n                                    active_selling_price: JSON.parse(\n                                      this.state.active_drug.product_units\n                                    ).find(\n                                      (el) => el.selling_unit === e.target.value\n                                    )[this.state.active_sale_type],\n                                  });\n                                  this.setState(\n                                    {\n                                      ...this.state,\n                                      active_selling_unit: e.target.value,\n                                    },\n                                    () => {\n                                      this.setState({\n                                        ...this.state,\n                                        active_product_re_order:\n                                          (this.state.active_selling_unit ===\n                                          JSON.parse(\n                                            this.state.active_drug.product_units\n                                          )[0].selling_unit\n                                            ? parseInt(\n                                                this.state.active_drug\n                                                  .product_re_order\n                                              )\n                                            : parseInt(\n                                                this.state.active_drug\n                                                  .product_re_order\n                                              ) /\n                                              parseInt(\n                                                JSON.parse(\n                                                  this.state.active_drug\n                                                    .product_units\n                                                ).find(\n                                                  (el) =>\n                                                    el.selling_unit ===\n                                                    e.target.value\n                                                )[\"qty\"]\n                                              )) || 0,\n                                        active_product_qty:\n                                          this.state.active_selling_unit ===\n                                          JSON.parse(\n                                            this.state.active_drug.product_units\n                                          )[0].selling_unit\n                                            ? parseInt(\n                                                this.state.active_drug\n                                                  .product_qty\n                                              )\n                                            : parseInt(\n                                                this.state.active_drug\n                                                  .product_qty\n                                              ) /\n                                              parseInt(\n                                                JSON.parse(\n                                                  this.state.active_drug\n                                                    .product_units\n                                                ).find(\n                                                  (el) =>\n                                                    el.selling_unit ===\n                                                    e.target.value\n                                                )[\"qty\"]\n                                              ),\n                                      });\n                                    }\n                                  );\n                                }}\n                              >\n                                {this.state.active_drug ? (\n                                  JSON.parse(\n                                    this.state.active_drug.product_units\n                                  ).map((v, i) => {\n                                    return (\n                                      <MenuItem key={i} value={v.selling_unit}>\n                                        {v.selling_unit}\n                                      </MenuItem>\n                                    );\n                                  })\n                                ) : (\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\n                                )}\n                              </Select>\n                            </FormControl>\n                            <TextField\n                              disabled={this.state.active_drug ? false : true}\n                              error={this.state.over_qty_error}\n                              type=\"number\"\n                              name=\"qty\"\n                              variant=\"outlined\"\n                              label=\"Quantity\"\n                              helperText={\n                                this.state.over_qty_error\n                                  ? \"Quantity Exceeds Available\"\n                                  : \"\"\n                              }\n                              defaultValue={0}\n                              onChange={async (e) => {\n                                if (\n                                  parseInt(e.target.value) >\n                                  this.state.active_product_qty\n                                ) {\n                                  await this.setState({\n                                    ...this.state,\n                                    over_qty_error: true,\n                                  });\n                                } else {\n                                  await this.setState({\n                                    ...this.state,\n                                    over_qty_error: false,\n                                  });\n                                }\n                              }}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_id\"\n                              defaultValue={\n                                this.state.active_drug\n                                  ? this.state.active_drug.product_id\n                                  : \"\"\n                              }\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_price\"\n                              defaultValue={this.state.active_selling_price}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n                <form\n                  className=\"card\"\n                  style={{ marginTop: \"20px\" }}\n                  onSubmit={this.handleSale}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">Payment</h3>\n                    <div className=\"\">\n                      <FormGroup style={{ display: \"inline\" }}>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              defaultChecked\n                              name=\"print_receipt\"\n                              onChange={() => {\n                                this.setState(\n                                  {\n                                    ...this.state,\n                                    print: !this.state.print,\n                                  },\n                                  () => {\n                                    console.log(this.state.print);\n                                  }\n                                );\n                              }}\n                            />\n                          }\n                          label=\"Print Receipt\"\n                        />\n                      </FormGroup>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        style={{ marginRight: 10 }}\n                        disabled={this.state.finish_btn_disabled}\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-print\"></i>\n                        </span>\n                        Finish Sale\n                      </Button>\n                    </div>\n                  </div>\n                  <Finish\n                    t={this.getTotals()}\n                    sale_type={this.state.active_sale_type}\n                    customers={this.state.customers}\n                  />\n                  <input\n                    type=\"text\"\n                    hidden\n                    value={this.state.active_sale_type}\n                    name=\"sale_type\"\n                    onChange={() => {}}\n                  />\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewSale;\n\nfunction Finish({ t, sale_type, customers }) {\n  const [discount, setDiscount] = useState(0);\n  return (\n    <div className=\"_finish_purchase_ctr\">\n      <TextField\n        name=\"total_amount\"\n        variant=\"outlined\"\n        label=\"Total\"\n        value={t}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"discount\"\n        variant=\"outlined\"\n        label=\"Discount\"\n        type=\"number\"\n        onChange={(e) => {\n          setDiscount(parseInt(e.target.value) || 0);\n        }}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"pay_amount\"\n        variant=\"outlined\"\n        label=\"Amount to Be Paid\"\n        value={t - discount}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <FormControl\n        variant=\"outlined\"\n        label=\"customer\"\n        style={\n          sale_type === \"retail\"\n            ? { display: \"none\" }\n            : { width: \"75%\", margin: \"20px\" }\n        }\n      >\n        <InputLabel id=\"customer\">Customer</InputLabel>\n        <Select\n          inputProps={{ name: \"customer\" }}\n          label=\"customer\"\n          id=\"select_customer\"\n          defaultValue=\"\"\n        >\n          {customers.length === 0\n            ? \"No Customer Added\"\n            : customers.map((v, i) => {\n                return (\n                  <MenuItem\n                    value={`${v.customer_surname} ${v.customer_lastname}`}\n                    key={i}\n                  >\n                    {`${v.customer_surname} ${v.customer_lastname}`}\n                  </MenuItem>\n                );\n              })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Snackbar,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      products: [],\n      loading: true,\n      open: false,\n      open_del: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n    };\n    this.products();\n  }\n\n  handleOpenActions = (e) => {\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\n  };\n  handleOpenActionsDrugs = (e) => {\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\n  };\n  handleCloseActions = () => {\n    this.setState({ ...this.state, AnchorEl: null });\n  };\n  handleCloseActionsDrugs = () => {\n    this.setState({ ...this.state, AnchorElDrugs: null });\n  };\n\n  async products() {\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        loading: false,\n        products: res === \"Error\" ? [] : res,\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  handleDelete = async () => {\n    this.setState({ ...this.state, open_del: true, messageState: \"info\" });\n    const res = await UsersApi.data(\n      `/user/all/delete/${this.state.product_id}`\n    );\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      ...this.state,\n      open_del: false,\n      message: \"Please Wait...\",\n      messageState: \"info\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <TextField\n                      className=\"text_field_all_products\"\n                      name=\"drug_name\"\n                      variant=\"outlined\"\n                      label=\"Product Name\"\n                      style={{ width: \"15%\" }}\n                      onKeyUp={async (e) => {\n                        const res = e.target.value\n                          ? (await UsersApi.data(\n                              `/user/sale/products/${e.target.value}`\n                            )) || []\n                          : [];\n                        if (res) {\n                          this.setState({\n                            ...this.state,\n                            loader: false,\n                            products: res === \"Error\" ? [] : res,\n                          });\n                        }\n                      }}\n                    />\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Product Generic Name</td>\n                          <td>Product Description</td>\n                          <td>Quantity</td>\n                          <td></td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.products.length === 0 ? (\n                          this.state.loading ? (\n                            <tr>\n                              <td>\n                                <CircularProgress size={25} />\n                              </td>\n                            </tr>\n                          ) : (\n                            <tr>\n                              <td>No Product Exists</td>\n                            </tr>\n                          )\n                        ) : (\n                          this.state.products.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td>{v.product_generic_name}</td>\n                                <td>{v.product_description_name}</td>\n                                <td>{v.product_qty}</td>\n                                <td>\n                                  <Link\n                                    to={`/edit-product?product-id=${v.product_id}`}\n                                  >\n                                    <Button variant=\"contained\" color=\"primary\">\n                                      Edit\n                                    </Button>\n                                  </Link>\n                                </td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    style={{ color: \"red\" }}\n                                    onClick={() => {\n                                      this.setState({\n                                        ...this.state,\n                                        open: true,\n                                        product_id: v.product_id,\n                                      });\n                                    }}\n                                  >\n                                    Delete\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n        {this.state.product_id ? (\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">\n              Want to Delete Product?\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                This will delete all Batches. Press OK and Continue. This\n                process is Irreversible\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleDelete} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AllProducts;\n","import React, { Component, useState } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport user from \"../../app_config\";\n\nimport \"../../design/main.css\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewPurchase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      _content: {},\n      active_selling_unit: \"\",\n      active_wholesale_price: \"\",\n      empty_error: false,\n      products: [],\n      suppliers: [],\n      formData: [],\n      total: 0,\n      discount: 0,\n    };\n    this.suppliers();\n  }\n\n  async suppliers() {\n    const res = (await UsersApi.data(\"/user/all/suppliers\")) || [];\n    if (res) {\n      this.setState({ ...this.state, suppliers: res === \"Error\" ? [] : res });\n    }\n  }\n\n  // async products() {\n  //   const res = (await UsersApi.data(\"/user/all/products\")) || [];\n  //   if (res) {\n  //     this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n  //   }\n  // }\n\n  handlePurchase = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n    await this.setState({ ...this.state, _content: content });\n\n    if (this.state.formData.length !== 0) {\n      this.setState({\n        ...this.state,\n        _content: {\n          ...this.state._content,\n          products_purchased: this.state.formData,\n          date: Date.now(),\n          user: user.user.username,\n        },\n      });\n    }\n\n    let api = new FormsApi();\n    let res = await api.post(\"/user/sale/new_purchase\", this.state._content);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    const product_name = this.state.formData.find(\n      (e) => e.product_name === _fcontent.product_name\n    );\n    if (\n      !_fcontent[\"batch_no\"] ||\n      !_fcontent[\"expiry_date\"] ||\n      !_fcontent[\"qty\"] ||\n      !_fcontent[\"cost_price\"]\n    ) {\n      this.setState({\n        ...this.state,\n        empty_error: true,\n        open: true,\n        messageState: \"error\",\n        message: \"Some Fields are missing\",\n      });\n      return;\n    }\n    if (!product_name) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Added\",\n        messageState: \"success\",\n        formData: [...this.state.formData, _fcontent],\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"Product Exists\",\n        messageState: \"warning\",\n      });\n    }\n  };\n\n  handleDrugNameKeyUp = async (e, v) => {\n    const res = e.target.value\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\n      : [];\n    if (res) {\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\n    }\n  };\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  handleChangeDrugName = (e, v) => {\n    if (v) {\n      if (!this.IsJsonString(v.product_units)) {\n        this.setState({\n          ...this.state,\n          open: true,\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\n          messageState: \"warning\",\n        });\n        return;\n      }\n      this.setState(\n        {\n          ...this.state,\n          active_drug: v,\n        },\n        () => {\n          let arr = JSON.parse(this.state.active_drug.product_units);\n          this.setState({\n            ...this.state,\n            active_selling_unit: arr[arr.length - 1].selling_unit,\n            active_retail_price: arr[arr.length - 1].retail,\n            active_wholesale_price: arr[arr.length - 1].wholesale,\n          });\n        }\n      );\n    }\n  };\n\n  getTotals() {\n    let total = 0;\n    if (this.state.formData.length !== 0) {\n      this.state.formData.forEach((e) => {\n        total += parseInt(e.cost_price) * parseInt(e.qty);\n      });\n    }\n    return total;\n  }\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ ...this.state, open: false, message: \"\" });\n    if (this.state.empty_error) {\n      this.setState({ ...this.state, empty_error: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"purchase\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"recent-grid-left\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Purchase List</h3>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ marginRight: 10 }}\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                  >\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\n                      <i className=\"las la-redo\"></i>\n                    </span>\n                    Cancel\n                  </Button>\n                </div>\n                <div className=\"card-body tbl_ctr\">\n                  <table width=\"100%\">\n                    <thead>\n                      <tr>\n                        <td>Name</td>\n                        <td>Qty</td>\n                        <td>Batch No.</td>\n                        <td>Expiry Date</td>\n                        <td>Cost Price(Shs)</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.formData.length === 0 ? (\n                        <tr>\n                          <td>No Product Added</td>\n                        </tr>\n                      ) : (\n                        this.state.formData.map((v, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.batch_no}</td>\n                              <td>{v.expiry_date}</td>\n                              <td>\n                                {parseInt(v.cost_price) * parseInt(v.qty)}\n                              </td>\n                              <td>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => {\n                                    let arr = this.state.formData;\n                                    arr.splice(i, 1);\n                                    this.setState({\n                                      ...this.state,\n                                      formData: arr,\n                                    });\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        })\n                      )}\n                    </tbody>\n                    <thead>\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>Total</td>\n                        <td>{this.getTotals()}</td>\n                      </tr>\n                    </thead>\n                  </table>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">New Purchase</h3>\n                    <div className=\"\">\n                      <Button\n                        type=\"submit\"\n                        aria-describedby={this.id}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        <span\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\n                        >\n                          <i className=\"las la-plus-circle\"></i>\n                        </span>\n                        Add\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <h4>Product Details</h4>\n                        <div className=\"inputs_ctr\">\n                          <div className=\"inpts_on_left\">\n                            <Autocomplete\n                              id=\"combo-box-demo\"\n                              options={this.state.products}\n                              getOptionLabel={(option) =>\n                                `${option.product_generic_name} ${option.product_description_name}`\n                              }\n                              onChange={this.handleChangeDrugName}\n                              onKeyUp={this.handleDrugNameKeyUp}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Search Product\"\n                                  name=\"product_name\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              name=\"batch_no\"\n                              variant=\"outlined\"\n                              label=\"Batch Number\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              type=\"date\"\n                              name=\"expiry_date\"\n                              variant=\"outlined\"\n                              helperText=\"Expiry Date\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"supplier\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"supplier\">Supplier</InputLabel>\n                              <Select\n                                inputProps={{ name: \"supplier\" }}\n                                label=\"supplier\"\n                                id=\"select_supplier\"\n                                defaultValue=\"\"\n                              >\n                                {this.state.suppliers.length === 0\n                                  ? \"No Supplier Added\"\n                                  : this.state.suppliers.map((v, i) => {\n                                      return (\n                                        <MenuItem value={v.supplier_id} key={i}>\n                                          {v.supplier_surname}\n                                        </MenuItem>\n                                      );\n                                    })}\n                              </Select>\n                            </FormControl>\n                          </div>\n                          <div className=\"inpts_on_right\">\n                            <FormControl\n                              variant=\"outlined\"\n                              label=\"selling_unit\"\n                              disabled={this.state.active_drug ? false : true}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <InputLabel id=\"selling_unit\">\n                                Purchasing Unit\n                              </InputLabel>\n                              <Select\n                                inputProps={{\n                                  name: \"selling_unit\",\n                                }}\n                                label=\"Purchasing Unit\"\n                                id=\"select_selling_unit\"\n                                value={this.state.active_selling_unit}\n                                onChange={(e, v) => {\n                                  let arr = JSON.parse(\n                                    this.state.active_drug.product_units\n                                  );\n                                  this.setState({\n                                    ...this.state,\n                                    active_retail_price: arr.find(\n                                      (el) => el.selling_unit === e.target.value\n                                    ).retail,\n                                    active_wholesale_price: arr.find(\n                                      (el) => el.selling_unit === e.target.value\n                                    ).wholesale,\n                                  });\n                                  this.setState({\n                                    ...this.state,\n                                    active_selling_unit: e.target.value,\n                                  });\n                                }}\n                              >\n                                {this.state.active_drug ? (\n                                  JSON.parse(\n                                    this.state.active_drug.product_units\n                                  ).map((v, i) => {\n                                    return (\n                                      <MenuItem key={i} value={v.selling_unit}>\n                                        {v.selling_unit}\n                                      </MenuItem>\n                                    );\n                                  })\n                                ) : (\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\n                                )}\n                              </Select>\n                            </FormControl>\n                            <TextField\n                              error={this.state.empty_error}\n                              type=\"number\"\n                              name=\"qty\"\n                              variant=\"outlined\"\n                              label=\"Quantity\"\n                              defaultValue={0}\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <TextField\n                              error={this.state.empty_error}\n                              name=\"cost_price\"\n                              variant=\"outlined\"\n                              type=\"number\"\n                              label=\"Unit Cost Price(Ushs)\"\n                              style={{\n                                width: \"85%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <input\n                              hidden\n                              type=\"text\"\n                              name=\"product_id\"\n                              defaultValue={\n                                this.state.active_drug\n                                  ? this.state.active_drug.product_id\n                                  : \"\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n                <form\n                  className=\"card\"\n                  style={{ marginTop: \"20px\" }}\n                  onSubmit={this.handlePurchase}\n                >\n                  <div className=\"card-header card-header-payments\">\n                    <h3 className=\"class_payment_header\">Payment</h3>\n                    <div className=\"\">\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Finish Purchase\n                        <span style={{ fontSize: \"15px\", marginLeft: \"10px\" }}>\n                          <i className=\"las la-angle-double-right\"></i>\n                        </span>\n                      </Button>\n                    </div>\n                  </div>\n                  <Finish t={this.getTotals()} />\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default NewPurchase;\n\nfunction Finish({ t }) {\n  const [discount, setDiscount] = useState(0);\n  return (\n    <div className=\"_finish_purchase_ctr\">\n      <TextField\n        name=\"total_amount\"\n        variant=\"outlined\"\n        label=\"Total\"\n        value={t}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n      <TextField\n        name=\"pay_amount\"\n        variant=\"outlined\"\n        label=\"Amount to Be Paid\"\n        value={t - discount}\n        style={{\n          width: \"75%\",\n          margin: \"20px\",\n        }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Button, Snackbar, IconButton } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport UsersApi from \"../../api/users\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      product: {},\n    };\n    this.product();\n  }\n\n  async product() {\n    let id = parseInt(\n      new URLSearchParams(window.location.search).get(\"product-id\")\n    );\n    const [res] = await UsersApi.data(`/user/all/product/${id}`);\n    if (res) {\n      this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <h3>Product Details</h3>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginInline: 10 }}\n                        >\n                          Print\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <div className=\"inputs_ctr\">\n                          <table width=\"100%\">\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Product Name :\n                                </span>\n                                {this.state.product.product_name}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Quantity in Stock :\n                                </span>\n                                {this.state.product.quantity}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Unit Price :\n                                </span>\n                                {\"UGX\"}\n                                {\"\"}\n                                {this.state.product.unit_price}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Cost Price :\n                                </span>\n                                {\"UGX\"} {\"\"}\n                                {this.state.product.cost_price}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Date Added :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_added\n                                ).getDate() +\n                                  \"-\" +\n                                  (new Date(\n                                    this.state.product.date_added\n                                  ).getMonth() +\n                                    1) +\n                                  \"-\" +\n                                  new Date(\n                                    this.state.product.date_added\n                                  ).getFullYear()}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Time :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_added\n                                ).getHours() +\n                                  \":\" +\n                                  new Date(\n                                    this.state.product.date_added\n                                  ).getMinutes() +\n                                  (new Date(\n                                    this.state.product.date_added\n                                  ).getHours() < 12\n                                    ? \"AM\"\n                                    : \"PM\")}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Expiry Date :\n                                </span>\n                                {this.state.product.expiry_date}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Description :\n                                </span>\n                                {this.state.product.product_description}\n                              </td>\n                            </tr>\n                          </table>\n                        </div>\n                        <h5>Supplier</h5>\n                        <div className=\"inputs_ctr\">\n                          <table width=\"100%\">\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Surname :\n                                </span>\n                                {this.state.product.supplier_surname}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Lastname :\n                                </span>\n                                {this.state.product.supplier_lastname}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Date Added :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_registered\n                                ).getDate() +\n                                  \"-\" +\n                                  (new Date(\n                                    this.state.product.date_registered\n                                  ).getMonth() +\n                                    1) +\n                                  \"-\" +\n                                  new Date(\n                                    this.state.product.date_registered\n                                  ).getFullYear()}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Time :\n                                </span>\n                                {new Date(\n                                  this.state.product.date_registered\n                                ).getHours() +\n                                  \":\" +\n                                  new Date(\n                                    this.state.product.date_registered\n                                  ).getMinutes() +\n                                  (new Date(\n                                    this.state.product.date_registered\n                                  ).getHours() < 12\n                                    ? \"AM\"\n                                    : \"PM\")}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Contact :\n                                </span>\n                                {this.state.product.supplier_contact}\n                              </td>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Location :\n                                </span>\n                                {this.state.product.supplier_location}\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>\n                                <span style={{ fontWeight: \"bolder\" }}>\n                                  Address :\n                                </span>\n                                {this.state.product.supplier_address}\n                              </td>\n                            </tr>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Product;\n","// import React, { Component } from \"react\";\n// import {\n//   TextField,\n//   Snackbar,\n//   Button,\n//   IconButton,\n//   Select,\n//   InputLabel,\n//   FormControl,\n//   MenuItem,\n// } from \"@material-ui/core\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\n// import Nav from \"./components/Nav\";\n// import Header from \"./components/Header\";\n// import FormsApi from \"../../api/forms\";\n// import UsersApi from \"../../api/users\";\n// import \"../../design/forms.css\";\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n// class EditProduct extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       open: false,\n//       message: \"Please Wait...\",\n//       messageState: \"\",\n//       product: {},\n//       units: [],\n//       new_unit_error: false,\n//       selling_units: [],\n//     };\n//     this.product();\n//   }\n\n//   async product() {\n//     let id = parseInt(\n//       new URLSearchParams(window.location.search).get(\"product-id\")\n//     );\n//     const [res] = await UsersApi.data(`/user/all/product/${id}`);\n//     if (res) {\n//       this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\n//     }\n//   }\n\n//   handleSubmit = async (e) => {\n//     e.preventDefault();\n//     this.setState({ ...this.state, open: true, messageState: \"info\" });\n//     const fd = new FormData(e.target);\n//     let _fcontent = {};\n//     fd.forEach((value, key) => {\n//       _fcontent[key] = value;\n//     });\n//     let id = parseInt(\n//       new URLSearchParams(window.location.search).get(\"product-id\")\n//     );\n//     _fcontent[\"units\"] = this.state.units;\n//     let api = new FormsApi();\n//     let res = await api.post(`/user/sale/edit_product/${id}`, _fcontent);\n//     if (res.status === true) {\n//       this.setState({\n//         ...this.state,\n//         message: res.data,\n//         messageState: \"success\",\n//       });\n//       setTimeout(() => {\n//         window.location.reload();\n//       }, 200);\n//     } else {\n//       this.setState({\n//         ...this.state,\n//         message: res.data,\n//         messageState: \"error\",\n//       });\n//     }\n//   };\n\n//   closePopUp = (event, reason) => {\n//     if (reason === \"clickaway\") {\n//       return;\n//     }\n//     this.setState({ ...this.state, open: false });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"center\",\n//           }}\n//           open={this.state.open}\n//           autoHideDuration={5000}\n//           onClose={this.closePopUp}\n//           action={\n//             <React.Fragment>\n//               <IconButton\n//                 size=\"small\"\n//                 aria-label=\"close\"\n//                 color=\"inherit\"\n//                 onClick={this.closePopUp}\n//               >\n//                 <i className=\"las la-times\"></i>\n//               </IconButton>\n//             </React.Fragment>\n//           }\n//         >\n//           <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n//             {this.state.message}\n//           </Alert>\n//         </Snackbar>\n//         <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n//         <Nav active=\"dashboard\" />\n//         <div className=\"main-content\">\n//           <Header />\n//           <main>\n//             <div className=\"fullwidth-ctr\">\n//               <div className=\"projects\">\n//                 <form\n//                   className=\"card\"\n//                   autoComplete=\"off\"\n//                   onSubmit={this.handleSubmit}\n//                 >\n//                   <div\n//                     className=\"\"\n//                     style={{\n//                       borderBottom: \"1px solid #f0f0f0\",\n//                       padding: \"1rem\",\n//                     }}\n//                   >\n//                     <div className=\"form-header-ctr\">\n//                       <div className=\"\">\n//                         <h3>Edit Product</h3>\n//                       </div>\n//                       <div className=\"\">\n//                         <Button\n//                           aria-describedby={this.id}\n//                           variant=\"contained\"\n//                           color=\"primary\"\n//                           style={{ marginInline: 10 }}\n//                           onClick={() => {\n//                             window.location.reload();\n//                           }}\n//                         >\n//                           Cancel\n//                         </Button>\n//                         <Button\n//                           type=\"submit\"\n//                           aria-describedby={this.id}\n//                           variant=\"contained\"\n//                           color=\"primary\"\n//                           style={{ marginInline: 10 }}\n//                         >\n//                           Save\n//                         </Button>\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <div className=\"card-body\">\n//                     <div>\n//                       <div className=\"inputCtr\">\n//                         <h4>Medicine Entry</h4>\n//                         <div className=\"inputs_ctr_np\">\n//                           <div className=\"inputs_left_np\">\n//                             <TextField\n//                               name=\"generic_name\"\n//                               variant=\"outlined\"\n//                               helperText=\"Generic Name\"\n//                               value={this.state.product.product_generic_name}\n//                               style={{\n//                                 width: \"75%\",\n//                                 margin: \"20px\",\n//                               }}\n//                               onChange={(e) => {\n//                                 this.setState({\n//                                   ...this.state,\n//                                   product: {\n//                                     ...this.state.product,\n//                                     product_generic_name: e.target.value,\n//                                   },\n//                                 });\n//                               }}\n//                             />\n//                             <TextField\n//                               name=\"description\"\n//                               variant=\"outlined\"\n//                               helperText=\"Medicine Description\"\n//                               value={\n//                                 this.state.product.product_description_name\n//                               }\n//                               style={{\n//                                 width: \"75%\",\n//                                 margin: \"20px\",\n//                               }}\n//                               onChange={(e) => {\n//                                 this.setState({\n//                                   ...this.state,\n//                                   product: {\n//                                     ...this.state.product,\n//                                     product_description: e.target.value,\n//                                   },\n//                                 });\n//                               }}\n//                             />\n//                           </div>\n//                           <div className=\"inputs_right_np\">\n//                             <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\n//                             <div className=\"tbl_ctr_np\">\n//                               <table width=\"100%\">\n//                                 <thead>\n//                                   <tr>\n//                                     <td>Selling Unit</td>\n//                                     <td>Quantity</td>\n//                                     <td>Retail</td>\n//                                     <td>Wholesale</td>\n//                                   </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                   {this.state.units.length === 0 ? (\n//                                     <tr>\n//                                       <td>No Selected Units</td>\n//                                     </tr>\n//                                   ) : (\n//                                     this.state.units.map((v, i) => {\n//                                       return (\n//                                         <tr key={i}>\n//                                           <td>\n//                                             <FormControl\n//                                               error={this.state.new_unit_error}\n//                                               variant=\"standard\"\n//                                               label=\"supplier\"\n//                                               style={{\n//                                                 width: \"95%\",\n//                                               }}\n//                                             >\n//                                               <InputLabel id=\"selling_unit\">\n//                                                 {i === 0\n//                                                   ? `Smallest Unit`\n//                                                   : `Unit ${i + 1}`}\n//                                               </InputLabel>\n//                                               <Select\n//                                                 inputProps={{\n//                                                   name: \"selling_unit\",\n//                                                 }}\n//                                                 label={\n//                                                   i === 0\n//                                                     ? `Smallest Unit`\n//                                                     : `Unit ${i + 1}`\n//                                                 }\n//                                                 id=\"select_selling_unit\"\n//                                                 defaultValue=\"\"\n//                                                 onChange={(e) => {\n//                                                   let units_change =\n//                                                     this.state.units;\n//                                                   units_change[i].selling_unit =\n//                                                     e.target.value;\n//                                                   this.setState({\n//                                                     ...this.state,\n//                                                     units: units_change,\n//                                                   });\n//                                                 }}\n//                                               >\n//                                                 {this.state.selling_units\n//                                                   .length === 0\n//                                                   ? \"No Unit Added\"\n//                                                   : this.state.selling_units.map(\n//                                                       (v, i) => {\n//                                                         return (\n//                                                           <>\n//                                                             <MenuItem\n//                                                               value={\n//                                                                 v.unit_name\n//                                                               }\n//                                                               key={i}\n//                                                             >\n//                                                               {v.unit_name}\n//                                                             </MenuItem>\n//                                                           </>\n//                                                         );\n//                                                       }\n//                                                     )}\n//                                               </Select>\n//                                             </FormControl>\n//                                           </td>\n//                                           <td>\n//                                             <TextField\n//                                               multiline={true}\n//                                               variant=\"standard\"\n//                                               defaultValue={i === 0 ? \"1\" : \"\"}\n//                                               label={\n//                                                 i === 0\n//                                                   ? `Quantity`\n//                                                   : `Quantity In Unit ${i}`\n//                                               }\n//                                               onChange={(e) => {\n//                                                 let units_change =\n//                                                   this.state.units;\n//                                                 units_change[i].qty =\n//                                                   e.target.value;\n//                                                 this.setState({\n//                                                   ...this.state,\n//                                                   units: units_change,\n//                                                 });\n//                                               }}\n//                                               style={{\n//                                                 width: \"95%\",\n//                                               }}\n//                                             />\n//                                           </td>\n//                                           <td>\n//                                             <TextField\n//                                               variant=\"standard\"\n//                                               label=\"Retail\"\n//                                               error={this.state.new_unit_error}\n//                                               onChange={(e) => {\n//                                                 let units_change =\n//                                                   this.state.units;\n//                                                 units_change[i].retail =\n//                                                   e.target.value;\n//                                                 this.setState({\n//                                                   ...this.state,\n//                                                   units: units_change,\n//                                                 });\n//                                               }}\n//                                               style={{\n//                                                 width: \"95%\",\n//                                               }}\n//                                             />\n//                                           </td>\n//                                           <td>\n//                                             <TextField\n//                                               variant=\"standard\"\n//                                               label=\"Wholesale\"\n//                                               error={this.state.new_unit_error}\n//                                               onChange={(e) => {\n//                                                 let units_change =\n//                                                   this.state.units;\n//                                                 units_change[i].wholesale =\n//                                                   e.target.value;\n//                                                 this.setState({\n//                                                   ...this.state,\n//                                                   units: units_change,\n//                                                 });\n//                                               }}\n//                                               style={{\n//                                                 width: \"95%\",\n//                                               }}\n//                                             />\n//                                           </td>\n//                                         </tr>\n//                                       );\n//                                     })\n//                                   )}\n//                                 </tbody>\n//                               </table>\n//                             </div>\n//                             <div\n//                               className=\"\"\n//                               style={{\n//                                 display: \"flex\",\n//                                 justifyContent: \"flex-end\",\n//                                 width: \"95%\",\n//                                 margin: \"10px auto\",\n//                               }}\n//                             >\n//                               <Button\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 onClick={() => {\n//                                   if (this.state.units.length === 0) {\n//                                     this.setState({\n//                                       ...this.state,\n//                                       units: [...this.state.units, { qty: 1 }],\n//                                     });\n//                                   } else if (this.state.units.length === 1) {\n//                                     let units = this.state.units;\n//                                     if (\n//                                       !units[0].selling_unit ||\n//                                       !units[0].qty ||\n//                                       !units[0].retail ||\n//                                       !units[0].wholesale\n//                                     ) {\n//                                       this.setState({\n//                                         ...this.state,\n//                                         new_unit_error: true,\n//                                         open: true,\n//                                         message: \"Some Fields are missing\",\n//                                         messageState: \"error\",\n//                                       });\n//                                     } else {\n//                                       this.setState({\n//                                         ...this.state,\n//                                         units: [...this.state.units, {}],\n//                                         new_unit_error: false,\n//                                       });\n//                                     }\n//                                   } else {\n//                                     let units = this.state.units;\n//                                     if (\n//                                       units[units.length - 1].selling_unit &&\n//                                       units[units.length - 1].qty &&\n//                                       units[units.length - 1].retail &&\n//                                       units[units.length - 1].wholesale\n//                                     ) {\n//                                       if (\n//                                         parseInt(units[units.length - 1].qty) *\n//                                           parseInt(\n//                                             units[units.length - 2].retail\n//                                           ) ===\n//                                           parseInt(\n//                                             units[units.length - 1].retail\n//                                           ) ||\n//                                         parseInt(units[units.length - 1].qty) *\n//                                           parseInt(\n//                                             units[units.length - 2].wholesale\n//                                           ) ===\n//                                           parseInt(\n//                                             units[units.length - 1].wholesale\n//                                           )\n//                                       ) {\n//                                         this.setState({\n//                                           ...this.state,\n//                                           units: [...this.state.units, {}],\n//                                           new_unit_error: false,\n//                                         });\n//                                       } else {\n//                                         this.setState({\n//                                           ...this.state,\n//                                           new_unit_error: true,\n//                                           open: true,\n//                                           message: \"Unit Prices Mismatch\",\n//                                           messageState: \"error\",\n//                                         });\n//                                       }\n//                                     } else {\n//                                       this.setState({\n//                                         ...this.state,\n//                                         new_unit_error: true,\n//                                         open: true,\n//                                         message: \"Some Fields are Missing\",\n//                                         messageState: \"error\",\n//                                       });\n//                                     }\n//                                   }\n//                                 }}\n//                               >\n//                                 New Unit\n//                               </Button>\n//                             </div>\n//                           </div>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           </main>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default EditProduct;\n\nimport React, { Component } from \"react\";\nimport {\n  TextField,\n  Snackbar,\n  Button,\n  IconButton,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport FormsApi from \"../../api/forms\";\nimport UsersApi from \"../../api/users\";\nimport \"../../design/forms.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass EditProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      open_dialog: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      suppliers: [],\n      units: [],\n      new_unit_error: false,\n      empty_name_error: false,\n      selling_units: [],\n      product: {},\n      re_order: 0,\n    };\n    this.units();\n  }\n  handleClose = () => {\n    this.setState({ ...this.state, open_dialog: false });\n  };\n\n  handleUnit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let content = {};\n    fd.forEach((value, key) => {\n      content[key] = value;\n    });\n    if (!content[\"unit_name\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"This field is missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n    let api = new FormsApi();\n    let res = await api.post(\"/user/admin/new_unit\", content);\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n  async units() {\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\n    if (res) {\n      this.setState(\n        {\n          ...this.state,\n          selling_units: res === \"Error\" ? [] : res,\n        },\n        () => {\n          this.product();\n        }\n      );\n    }\n  }\n\n  //if json string\n  IsJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  //if json string\n\n  async product() {\n    let id = parseInt(\n      new URLSearchParams(window.location.search).get(\"product-id\")\n    );\n    const product = await UsersApi.data(`/user/all/product/${id}`);\n    if (product) {\n      if (product !== \"Error\") {\n        const res = product[0];\n        console.log(res);\n        this.setState({ ...this.state, product: res });\n        const units = this.IsJsonString(res.product_units)\n          ? JSON.parse(res.product_units)\n          : [];\n        const re_order =\n          units.length === 0\n            ? 0\n            : (parseInt(res.product_re_order) || 0) /\n                parseInt(units[units.length - 1].qty) || 0;\n        let units_arr = [];\n        for (let i = 0; i < units.length; i++) {\n          let unit = units[i];\n          if (unit.qty && unit.selling_unit) {\n            if (i === 0) {\n              units_arr.push(unit);\n            } else {\n              unit.qty =\n                parseInt(units[i].qty) / parseInt(units_arr[i - 1].qty);\n              units_arr.push(unit);\n            }\n          }\n        }\n        this.setState(\n          {\n            ...this.state,\n            units: units_arr,\n            re_order,\n          },\n          () => {\n            console.log(this.state);\n          }\n        );\n      }\n    }\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\n    const fd = new FormData(e.target);\n    let _fcontent = {};\n    fd.forEach((value, key) => {\n      _fcontent[key] = value;\n    });\n    if (this.state.units.length === 0) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"No Selling Units Registered\",\n        messageState: \"error\",\n      });\n      return;\n    }\n    if (!_fcontent[\"generic_name\"] || !_fcontent[\"re_order_qty\"]) {\n      this.setState({\n        ...this.state,\n        open: true,\n        message: \"These fields are missing\",\n        messageState: \"error\",\n        empty_name_error: true,\n      });\n      return;\n    }\n    let id = parseInt(\n      new URLSearchParams(window.location.search).get(\"product-id\")\n    );\n    _fcontent[\"units\"] = this.state.units;\n    let api = new FormsApi();\n    let res = await api.post(`/user/sale/edit_product/${id}`, _fcontent);\n\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      ...this.state,\n      open: false,\n      message: \"Please Wait...\",\n      messageState: \"info\",\n      empty_name_error: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <form\n                  className=\"card\"\n                  autoComplete=\"off\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div\n                    className=\"\"\n                    style={{\n                      borderBottom: \"1px solid #f0f0f0\",\n                      padding: \"1rem\",\n                    }}\n                  >\n                    <div className=\"form-header-ctr\">\n                      <div className=\"\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={(e) => {\n                            this.setState({\n                              ...this.state,\n                              open_dialog: true,\n                            });\n                          }}\n                        >\n                          Add Unit\n                        </Button>\n                      </div>\n                      <div className=\"\">\n                        <Button\n                          type=\"submit\"\n                          aria-describedby={this.id}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          style={{ marginLeft: 10 }}\n                        >\n                          Finish &amp; Save\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <div>\n                      <div className=\"inputCtr\">\n                        <div className=\"inputs_ctr_np\">\n                          <div className=\"inputs_left_np\">\n                            <TextField\n                              error={this.state.empty_name_error}\n                              name=\"generic_name\"\n                              variant=\"outlined\"\n                              label=\"Generic Name\"\n                              value={\n                                this.state.product.product_generic_name\n                                  ? this.state.product.product_generic_name\n                                  : \"\"\n                              }\n                              onChange={(e) => {\n                                this.setState({\n                                  ...this.state,\n                                  product: {\n                                    ...this.state.product,\n                                    product_generic_name: e.target.value,\n                                  },\n                                });\n                              }}\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            >\n                              <TextField\n                                error={this.state.empty_name_error}\n                                value={this.state.re_order}\n                                type=\"number\"\n                                name=\"re_order_qty\"\n                                variant=\"outlined\"\n                                label=\"Re-order Qty\"\n                                style={{ flex: 1, marginRight: \"5px\" }}\n                                onChange={(e) => {\n                                  this.setState({\n                                    ...this.state,\n                                    re_order: e.target.value,\n                                  });\n                                }}\n                              />\n                              <TextField\n                                value={\n                                  this.state.units.length > 0 &&\n                                  this.state.units[this.state.units.length - 1]\n                                    .selling_unit\n                                    ? this.state.units[\n                                        this.state.units.length - 1\n                                      ].selling_unit\n                                    : \"\"\n                                }\n                                name=\"re_order_unit\"\n                                variant=\"outlined\"\n                                label=\"Unit\"\n                                style={{ flex: 1, marginLeft: \"5px\" }}\n                              />\n                            </div>\n                            <TextField\n                              error={this.state.empty_name_error}\n                              name=\"description\"\n                              variant=\"outlined\"\n                              label=\"Medicine Description\"\n                              value={\n                                this.state.product.product_description_name\n                                  ? this.state.product.product_description_name\n                                  : \" \"\n                              }\n                              onChange={(e) => {\n                                this.setState({\n                                  ...this.state,\n                                  product: {\n                                    ...this.state.product,\n                                    product_description_name: e.target.value,\n                                  },\n                                });\n                              }}\n                              style={{\n                                width: \"75%\",\n                                margin: \"20px\",\n                              }}\n                            />\n                          </div>\n                          <div className=\"inputs_right_np\">\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\n                            <div className=\"tbl_ctr_np\">\n                              <table width=\"100%\">\n                                <thead>\n                                  <tr>\n                                    <td>Selling Unit</td>\n                                    <td>Quantity</td>\n                                    <td>Retail</td>\n                                    <td>Wholesale</td>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {this.state.units.length === 0 ? (\n                                    <tr>\n                                      <td>No Selected Units</td>\n                                    </tr>\n                                  ) : (\n                                    this.state.units.map((v, i) => {\n                                      return (\n                                        <tr key={i}>\n                                          <td>\n                                            <FormControl\n                                              error={this.state.new_unit_error}\n                                              variant=\"standard\"\n                                              label=\"supplier\"\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            >\n                                              <InputLabel id=\"selling_unit\">\n                                                {i === 0\n                                                  ? `Smallest Unit`\n                                                  : `Unit ${i + 1}`}\n                                              </InputLabel>\n                                              <Select\n                                                inputProps={{\n                                                  name: \"selling_unit\",\n                                                }}\n                                                label={\n                                                  i === 0\n                                                    ? `Smallest Unit`\n                                                    : `Unit ${i + 1}`\n                                                }\n                                                id=\"select_selling_unit\"\n                                                value={\n                                                  this.state.units[i]\n                                                    .selling_unit\n                                                }\n                                                onChange={(e) => {\n                                                  let units_change =\n                                                    this.state.units;\n                                                  units_change[i].selling_unit =\n                                                    e.target.value;\n                                                  this.setState({\n                                                    ...this.state,\n                                                    units: units_change,\n                                                  });\n                                                }}\n                                              >\n                                                {this.state.selling_units\n                                                  .length === 0\n                                                  ? \"No Unit Added\"\n                                                  : this.state.selling_units.map(\n                                                      (v, i) => {\n                                                        return (\n                                                          <MenuItem\n                                                            value={v.unit_name}\n                                                            key={i}\n                                                          >\n                                                            {v.unit_name}\n                                                          </MenuItem>\n                                                        );\n                                                      }\n                                                    )}\n                                              </Select>\n                                            </FormControl>\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              multiline={true}\n                                              variant=\"standard\"\n                                              value={\n                                                i === 0\n                                                  ? \"1\"\n                                                  : this.state.units[i].qty\n                                              }\n                                              label={\n                                                i === 0\n                                                  ? `Quantity`\n                                                  : `Quantity In Unit ${i}`\n                                              }\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].qty =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Retail\"\n                                              error={this.state.new_unit_error}\n                                              value={this.state.units[i].retail}\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].retail =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <TextField\n                                              variant=\"standard\"\n                                              label=\"Wholesale\"\n                                              error={this.state.new_unit_error}\n                                              value={\n                                                this.state.units[i].wholesale\n                                              }\n                                              onChange={(e) => {\n                                                let units_change =\n                                                  this.state.units;\n                                                units_change[i].wholesale =\n                                                  e.target.value;\n                                                this.setState({\n                                                  ...this.state,\n                                                  units: units_change,\n                                                });\n                                              }}\n                                              style={{\n                                                width: \"95%\",\n                                              }}\n                                            />\n                                          </td>\n                                          <td>\n                                            <Button\n                                              color=\"primary\"\n                                              variant=\"outlined\"\n                                              onClick={() => {\n                                                let units = this.state.units;\n                                                units.splice(i, 1);\n                                                this.setState({\n                                                  ...this.state,\n                                                  units,\n                                                });\n                                              }}\n                                            >\n                                              Remove\n                                            </Button>\n                                          </td>\n                                        </tr>\n                                      );\n                                    })\n                                  )}\n                                </tbody>\n                              </table>\n                            </div>\n                            <div\n                              className=\"\"\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                                width: \"95%\",\n                                margin: \"10px auto\",\n                              }}\n                            >\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  if (this.state.units.length === 0) {\n                                    this.setState({\n                                      ...this.state,\n                                      units: [...this.state.units, { qty: 1 }],\n                                    });\n                                  } else if (this.state.units.length === 1) {\n                                    let units = this.state.units;\n                                    if (\n                                      !units[0].selling_unit ||\n                                      !units[0].qty ||\n                                      !units[0].retail ||\n                                      !units[0].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are missing\",\n                                        messageState: \"error\",\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    }\n                                  } else {\n                                    let units = this.state.units;\n                                    if (\n                                      units[units.length - 1].selling_unit &&\n                                      units[units.length - 1].qty &&\n                                      units[units.length - 1].retail &&\n                                      units[units.length - 1].wholesale\n                                    ) {\n                                      this.setState({\n                                        ...this.state,\n                                        units: [...this.state.units, {}],\n                                        new_unit_error: false,\n                                      });\n                                    } else {\n                                      this.setState({\n                                        ...this.state,\n                                        new_unit_error: true,\n                                        open: true,\n                                        message: \"Some Fields are Missing\",\n                                        messageState: \"error\",\n                                      });\n                                    }\n                                  }\n                                }}\n                              >\n                                New Unit\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </main>\n        </div>\n\n        <Dialog\n          open={this.state.open_dialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\n            <DialogContent>\n              <DialogContentText>\n                <TextField\n                  error={this.state.empty_name_error}\n                  name=\"unit_name\"\n                  variant=\"standard\"\n                  label=\"Unit Name\"\n                  style={{\n                    width: \"85%\",\n                    margin: \"20px\",\n                  }}\n                />\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default EditProduct;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Snackbar,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport UsersApi from \"../../api/users\";\nimport Helper from \"../../components/format\";\nimport { Link } from \"react-router-dom\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass Finance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      open: false,\n      open_purchase: false,\n      open_sale: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      income: 0,\n      today_income: 0,\n      expenses: 0,\n      today_expense: 0,\n      sales: [],\n      purchases: [],\n      print_sale: false,\n    };\n    this.income();\n    this.expenses();\n  }\n\n  handlePurchaseClose = () => {\n    this.setState({ ...this.state, open_purchase: false });\n  };\n  handleSaleClose = () => {\n    this.setState({ ...this.state, open_sale: false });\n  };\n\n  async income() {\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\n    let total = 0;\n    let today_income = 0;\n    let today_sales = [];\n    res === \"Error\"\n      ? this.setState({ ...this.state, income: 0, sales: [] })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.sales_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            today_income += e.amount_paid;\n            today_sales.push(e);\n          }\n          if (\n            new Date(parseInt(e.sales_date)).getMonth() ===\n            new Date(Date.now()).getMonth()\n          ) {\n            total += e.amount_paid;\n          }\n        });\n    this.setState({\n      ...this.state,\n      today_income: today_income,\n      income: total,\n      sales: today_sales,\n    });\n  }\n\n  async expenses() {\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\n    let total = 0;\n    let today_expense = 0;\n    let today_purchases = [];\n    res === \"Error\"\n      ? this.setState({ ...this.state, expenses: 0, purchases: [] })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.purchase_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            today_expense += e.purchase_amount;\n            today_purchases.push(e);\n          }\n          if (\n            new Date(parseInt(e.purchase_date)).getMonth() ===\n            new Date(Date.now()).getMonth()\n          ) {\n            total += e.purchase_amount;\n          }\n        });\n    this.setState({\n      ...this.state,\n      today_expense: today_expense,\n      expenses: total,\n      purchases: today_purchases,\n    });\n  }\n\n  handleOpenActions = (e) => {\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\n  };\n  handleOpenActionsDrugs = (e) => {\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\n  };\n  handleCloseActions = () => {\n    this.setState({ ...this.state, AnchorEl: null });\n  };\n  handleCloseActionsDrugs = () => {\n    this.setState({ ...this.state, AnchorElDrugs: null, print_sale: true });\n  };\n\n  getNameSpaces(n, i) {\n    let name = n.split(\" \")[0];\n    let name_formatted;\n    if (name.length === i) {\n      name_formatted = name + \" \";\n    }\n    if (name.length > i) {\n      name_formatted = name.substring(0, i) + \" \";\n    }\n    if (name.length < i) {\n      name_formatted = name;\n      let spaces = i - name.length;\n      for (let i = 0; i < spaces; i++) {\n        name_formatted = name_formatted + \" \";\n      }\n    }\n    return name_formatted;\n  }\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"finance\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"cards\">\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h4>UGX {Helper.format(this.state.today_income)}</h4>\n                  <span>\n                    Sales <br />\n                    <span style={{ fontSize: \"13px\" }}>Today</span>\n                  </span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h4>UGX {Helper.format(this.state.today_expense)}</h4>\n                  <span>\n                    Purchases <br />\n                    <span style={{ fontSize: \"13px\" }}>Today</span>\n                  </span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"></span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h4>UGX {Helper.format(this.state.expenses)}</h4>\n                  <span>\n                    Purchases <br />\n                    <span style={{ fontSize: \"13px\" }}>This Month</span>\n                  </span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n              <div className=\"card-single\">\n                <div className=\"\">\n                  <h4>UGX {Helper.format(this.state.income)}</h4>\n                  <span>\n                    Sales <br />\n                    <span style={{ fontSize: \"13px\" }}>This Month</span>\n                  </span>\n                </div>\n                <div className=\"\">\n                  <span className=\"las la-users\"> </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"recent-grid\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Sales Today</h3>\n                    <div className=\"\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        aria-controls=\"drug-actions\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpenActionsDrugs}\n                      >\n                        Menu\n                        <span\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\n                        >\n                          <span className=\"las la-angle-down\"></span>\n                        </span>\n                      </Button>\n                      <Menu\n                        id=\"drug-actions\"\n                        anchorEl={this.state.AnchorElDrugs}\n                        keepMounted\n                        open={Boolean(this.state.AnchorElDrugs)}\n                        onClose={this.handleCloseActionsDrugs}\n                        disableScrollLock={true}\n                      >\n                        <Link to=\"/all-sales\">\n                          <MenuItem onClick={this.handleCloseActionsDrugs}>\n                            See Monthly\n                          </MenuItem>\n                        </Link>\n                      </Menu>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Products</td>\n                          <td>Total</td>\n                          <td>Paid</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.sales.length === 0 ? (\n                          <tr>\n                            <td>No Sale Made Today</td>\n                          </tr>\n                        ) : (\n                          this.state.sales.map((v, i) => {\n                            let products = \"\";\n                            let sold = JSON.parse(v.products_sold);\n                            sold.forEach((p) => {\n                              if (sold.length > 1) {\n                                if (sold.indexOf(p) === sold.length - 1) {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\n                                } else {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(\n                                      p.product_name,\n                                      10\n                                    )}` +\n                                    \",\";\n                                }\n                              } else {\n                                products =\n                                  products +\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\n                              }\n                            });\n                            return (\n                              <tr key={i}>\n                                <td>{products}</td>\n                                <td>{v.sales_amount}</td>\n                                <td>{v.amount_paid}</td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      this.setState({\n                                        ...this.state,\n                                        open_sale: true,\n                                        dialog_data: v,\n                                      });\n                                    }}\n                                  >\n                                    Details\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Purchases Today</h3>\n                    <div className=\"\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        aria-controls=\"reception-actions\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpenActions}\n                      >\n                        Menu\n                        <span\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\n                        >\n                          <span className=\"las la-angle-down\"></span>\n                        </span>\n                      </Button>\n                      <Menu\n                        id=\"reception-actions\"\n                        anchorEl={this.state.AnchorEl}\n                        keepMounted\n                        open={Boolean(this.state.AnchorEl)}\n                        onClose={this.handleCloseActions}\n                        disableScrollLock={true}\n                      >\n                        <Link to=\"/all-purchases\">\n                          <MenuItem onClick={this.handleCloseActions}>\n                            See Monthly\n                          </MenuItem>\n                        </Link>\n                      </Menu>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Products</td>\n                          <td>Total</td>\n                          <td>Paid</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.purchases.length === 0 ? (\n                          <tr>\n                            <td>No Purchase Made Today</td>\n                          </tr>\n                        ) : (\n                          this.state.purchases.map((v, i) => {\n                            let products = \"\";\n                            let sold = JSON.parse(v.products_purchased);\n                            sold.forEach((p) => {\n                              if (sold.length > 1) {\n                                if (sold.indexOf(p) === sold.length - 1) {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\n                                } else {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(\n                                      p.product_name,\n                                      10\n                                    )}` +\n                                    \",\";\n                                }\n                              } else {\n                                products =\n                                  products +\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\n                              }\n                            });\n                            return (\n                              <tr key={i}>\n                                <td>{products}</td>\n                                <td>{v.purchase_t_amount}</td>\n                                <td>{v.purchase_amount}</td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      this.setState({\n                                        ...this.state,\n                                        open_purchase: true,\n                                        dialog_purchase_data: v,\n                                      });\n                                    }}\n                                  >\n                                    Details\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n\n        {/* Sale Dialog */}\n        {this.state.dialog_data ? (\n          <Dialog\n            open={this.state.open_sale}\n            onClose={this.handleSaleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <table width=\"100%\">\n                  <thead>\n                    <tr>\n                      <td>Product</td>\n                      <td>Qty</td>\n                      <td>Selling Unit</td>\n                      <td>Amount</td>\n                      <td>Sale Type</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\n                      (v, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"name_cell\">{v.product_name}</td>\n                            <td>{v.qty}</td>\n                            <td>{v.selling_unit}</td>\n                            <td>{v.product_price}</td>\n                            <td>{v.sale_type}</td>\n                          </tr>\n                        );\n                      }\n                    )}\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"\">\n                  <table>\n                    <tr>\n                      <td>\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Discount: UGX  ${this.state.dialog_data.sales_discount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Amount Paid: UGX ${this.state.dialog_data.amount_paid}`}\n                      </td>\n                    </tr>\n                    {`Made By: ${this.state.dialog_data.sale_made_by}`}\n                  </table>\n                </div>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleSaleClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n        {/* Purchase Dialog */}\n        {this.state.dialog_purchase_data ? (\n          <Dialog\n            open={this.state.open_purchase}\n            onClose={this.handlePurchaseClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Purchase Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <table width=\"100%\">\n                  <thead>\n                    <tr>\n                      <td>Product</td>\n                      <td>Qty</td>\n                      <td>Selling Unit</td>\n                      <td>Amount</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {JSON.parse(\n                      this.state.dialog_purchase_data.products_purchased\n                    ).map((v, i) => {\n                      return (\n                        <>\n                          <tr key={i}>\n                            <td className=\"name_cell\">{v.product_name}</td>\n                            <td>{v.qty}</td>\n                            <td>{v.selling_unit}</td>\n                            <td>{v.cost_price}</td>\n                          </tr>\n                        </>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"\">\n                  <table>\n                    <tr>\n                      <td>\n                        {`Total Amount: UGX ${this.state.dialog_purchase_data.purchase_t_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Discount: UGX ${this.state.dialog_purchase_data.purchase_discount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Amount Paid: UGX ${this.state.dialog_purchase_data.purchase_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      {`Made By: ${this.state.dialog_purchase_data.purchase_made_by}`}\n                    </tr>\n                  </table>\n                </div>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handlePurchaseClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Finance;\n","import React, { Component } from \"react\";\n// import { Button } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\nimport Helper from \"../../components/format\";\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      daily: {\n        date: \"...\",\n        daily_purchases: 0,\n        daily_expenses: 0,\n        daily_products: 0,\n        daily_income: 0,\n        daily_sales: 0,\n      },\n      monthly: {\n        month: \"...\",\n        monthly_products: 0,\n        monthly_purchases: 0,\n        monthly_expenses: 0,\n        monthly_income: 0,\n        monthly_sales: 0,\n      },\n      annually: {\n        year: \"...\",\n        annual_products: 0,\n        annual_expenses: 0,\n        annual_purchases: 0,\n        annual_income: 0,\n        annual_sales: 0,\n      },\n    };\n    this.products();\n    this.purchases();\n    this.sales();\n  }\n\n  async products() {\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\n    let products_daily = 0;\n    let products_monthly = 0;\n    let products_annual = 0;\n    res === \"Error\"\n      ? this.setState({\n          ...this.state,\n          daily: { ...this.state.daily, daily_products: 0 },\n          monthly: { ...this.state.monthly, monthly_products: 0 },\n          annually: { ...this.state.annually, annual_products: 0 },\n        })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.product_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            products_daily++;\n          }\n          if (\n            new Date(parseInt(e.product_date)).getMonth() ===\n            new Date(Date.now()).getMonth()\n          ) {\n            products_monthly++;\n          }\n          if (\n            new Date(parseInt(e.product_date)).getFullYear() ===\n            new Date(Date.now()).getFullYear()\n          ) {\n            products_annual++;\n          }\n        });\n    this.setState({\n      ...this.state,\n      daily: {\n        ...this.state.daily,\n        daily_products: products_daily,\n        date:\n          new Date(Date.now()).getDate() +\n          \"/\" +\n          (new Date(Date.now()).getMonth() + 1) +\n          \"/\" +\n          new Date(Date.now()).getFullYear(),\n      },\n      monthly: { ...this.state.monthly, monthly_products: products_monthly },\n      annually: {\n        ...this.state.annually,\n        year: new Date(Date.now()).getFullYear(),\n        annual_products: products_annual,\n      },\n    });\n    if (new Date(Date.now()).getMonth() === 0) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"January\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 1) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"February\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 2) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"March\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 3) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"April\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 4) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"May\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 5) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"June\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 6) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"July\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 7) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"August\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 8) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"September\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 9) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"October\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 10) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"November\" },\n      });\n    } else if (new Date(Date.now()).getMonth() === 11) {\n      this.setState({\n        ...this.state,\n        monthly: { ...this.state.monthly, month: \"December\" },\n      });\n    }\n  }\n\n  async purchases() {\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\n    let purchase_daily = 0;\n    let expense_daily = 0;\n    let purchase_monthly = 0;\n    let expense_monthly = 0;\n    let purchase_annual = 0;\n    let expense_annual = 0;\n    res === \"Error\"\n      ? this.setState({\n          ...this.state,\n          daily: { ...this.state.daily, daily_purchases: 0, daily_expenses: 0 },\n          monthly: {\n            ...this.state.monthly,\n            monthly_expenses: 0,\n            monthly_purchases: 0,\n          },\n          annually: {\n            ...this.state.annually,\n            annual_expenses: 0,\n            annual_purchases: 0,\n          },\n        })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.purchase_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            purchase_daily++;\n            expense_daily += e.purchase_amount;\n          }\n          if (\n            new Date(Date.now()).getMonth() ===\n            new Date(parseInt(e.purchase_date)).getMonth()\n          ) {\n            purchase_monthly++;\n            expense_monthly += e.purchase_amount;\n          }\n          if (\n            new Date(Date.now()).getFullYear() ===\n            new Date(parseInt(e.purchase_date)).getFullYear()\n          ) {\n            purchase_annual++;\n            expense_annual += e.purchase_amount;\n          }\n        });\n    this.setState({\n      ...this.state,\n      daily: {\n        ...this.state.daily,\n        daily_purchases: purchase_daily,\n        daily_expenses: expense_daily,\n      },\n      monthly: {\n        ...this.state.monthly,\n        monthly_expenses: expense_monthly,\n        monthly_purchases: purchase_monthly,\n      },\n      annually: {\n        ...this.state.annually,\n        annual_expenses: expense_annual,\n        annual_purchases: purchase_annual,\n      },\n    });\n  }\n\n  async sales() {\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\n    let income_daily = 0;\n    let sales_daily = 0;\n    let income_monthly = 0;\n    let sales_monthly = 0;\n    let income_annual = 0;\n    let sales_annual = 0;\n    res === \"Error\"\n      ? this.setState({\n          ...this.state,\n          daily: { ...this.state.daily, daily_income: 0, daily_sales: 0 },\n          monthly: {\n            ...this.state.monthly,\n            monthly_income: 0,\n            monthly_sales: 0,\n          },\n          annually: {\n            ...this.state.annually,\n            annual_income: 0,\n            annual_sales: 0,\n          },\n        })\n      : res.forEach((e) => {\n          if (\n            new Date(parseInt(e.sales_date)).getDate() ===\n            new Date(Date.now()).getDate()\n          ) {\n            income_daily += e.amount_paid;\n            sales_daily++;\n          }\n\n          if (\n            new Date(Date.now()).getMonth() ===\n            new Date(parseInt(e.sales_date)).getMonth()\n          ) {\n            income_monthly += e.amount_paid;\n            sales_monthly++;\n          }\n          if (\n            new Date(Date.now()).getFullYear() ===\n            new Date(parseInt(e.sales_date)).getFullYear()\n          ) {\n            income_annual += e.amount_paid;\n            sales_annual++;\n          }\n        });\n    this.setState({\n      ...this.state,\n      daily: {\n        ...this.state.daily,\n        daily_sales: sales_daily,\n        daily_income: income_daily,\n      },\n      monthly: {\n        ...this.state.monthly,\n        monthly_sales: sales_monthly,\n        monthly_income: income_monthly,\n      },\n      annually: {\n        ...this.state.annually,\n        annual_sales: sales_annual,\n        annual_income: income_annual,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"reports\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"recent-grid\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Today</h3>\n                    {/* <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-haspopup=\"true\"\n                    >\n                      print\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-print\"></span>\n                      </span>\n                    </Button> */}\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"\">\n                      <table width=\"100%\">\n                        <tr>\n                          <td>\n                            <span\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\n                            >\n                              Date:\n                            </span>\n                            {`  ${this.state.daily.date}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Purchases:\n                            </span>\n                            {`  ${this.state.daily.daily_purchases}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Sales:\n                            </span>\n                            {` ${this.state.daily.daily_sales}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Expenses:\n                            </span>\n                            {`   UGX ${Helper.format(\n                              this.state.daily.daily_expenses\n                            )}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Income:\n                            </span>\n                            {`   UGX ${Helper.format(\n                              this.state.daily.daily_income\n                            )}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Products Registered:\n                            </span>\n                            {`  ${this.state.daily.daily_products}`}\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>This Month</h3>\n                    {/* <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-controls=\"reception-actions\"\n                      aria-haspopup=\"true\"\n                    >\n                      print\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-print\"></span>\n                      </span>\n                    </Button> */}\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"\">\n                      <table width=\"100%\">\n                        <tr>\n                          <td>\n                            <span\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\n                            >\n                              Month:\n                            </span>\n                            {`  ${this.state.monthly.month}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Purchases:\n                            </span>\n                            {` ${this.state.monthly.monthly_purchases}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Sales:\n                            </span>\n                            {` ${this.state.monthly.monthly_sales}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Expenses:\n                            </span>\n                            {`  UGX ${Helper.format(\n                              this.state.monthly.monthly_expenses\n                            )}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Income:\n                            </span>\n                            {`  UGX ${Helper.format(\n                              this.state.monthly.monthly_income\n                            )}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Products Registered:\n                            </span>\n                            {`  ${this.state.monthly.monthly_products}`}\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"recent-grid\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>This Year</h3>\n                    {/* <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      aria-haspopup=\"true\"\n                    >\n                      print\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\n                        <span className=\"las la-print\"></span>\n                      </span>\n                    </Button> */}\n                  </div>\n                  <div className=\"card-body\">\n                    <div className=\"\">\n                      <table width=\"100%\">\n                        <tr>\n                          <td>\n                            <span\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\n                            >\n                              Year:\n                            </span>\n                            {`  ${this.state.annually.year}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Purchases:\n                            </span>\n                            {`  ${this.state.annually.annual_purchases}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Sales:\n                            </span>\n                            {` ${this.state.annually.annual_sales}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Expenses:\n                            </span>\n                            {`  UGX ${Helper.format(\n                              this.state.annually.annual_expenses\n                            )}`}\n                          </td>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Total Income:\n                            </span>\n                            {` UGX ${Helper.format(\n                              this.state.annually.annual_income\n                            )}`}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <span style={{ fontWeight: \"bolder\" }}>\n                              Products Registered:\n                            </span>\n                            {`  ${this.state.annually.annual_products}`}\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Reports;\n","import React, { Component } from \"react\";\nimport Helper from \"./format\";\nimport \"../design/print_sale.css\";\n\nclass Print extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getTotals() {\n    let total = 0;\n    if (this.props.data.length !== 0) {\n      this.props.data.forEach((s) => {\n        total += parseInt(s.amount_paid);\n      });\n    }\n    return Helper.format(total);\n  }\n  getPurchaseTotals() {\n    let total = 0;\n    if (this.props.data.length !== 0) {\n      this.props.data.forEach((s) => {\n        total += parseInt(s.purchase_amount);\n      });\n    }\n    return Helper.format(total);\n  }\n  getMonth() {\n    let month = new Date(Date.now()).getMonth();\n    if (month === 0) {\n      return \"January\";\n    } else if (month === 1) {\n      return \"February\";\n    } else if (month === 2) {\n      return \"March\";\n    } else if (month === 3) {\n      return \"April\";\n    } else if (month === 4) {\n      return \"May\";\n    } else if (month === 5) {\n      return \"June\";\n    } else if (month === 6) {\n      return \"July\";\n    } else if (month === 7) {\n      return \"August\";\n    } else if (month === 8) {\n      return \"September\";\n    } else if (month === 9) {\n      return \"October\";\n    } else if (month === 10) {\n      return \"November\";\n    } else if (month === 11) {\n      return \"December\";\n    }\n  }\n  getDate() {\n    let date =\n      new Date(Date.now()).getDate() +\n      \" / \" +\n      (new Date(Date.now()).getMonth() + 1) +\n      \" / \" +\n      new Date(Date.now()).getFullYear();\n    return date;\n  }\n  getNameSpaces(n, i) {\n    let name = n.split(\" \")[0];\n    let name_formatted;\n    if (name.length === i) {\n      name_formatted = name + \" \";\n    }\n    if (name.length > i) {\n      name_formatted = name.substring(0, i) + \" \";\n    }\n    if (name.length < i) {\n      name_formatted = name;\n      let spaces = i - name.length;\n      for (let i = 0; i < spaces; i++) {\n        name_formatted = name_formatted + \" \";\n      }\n    }\n    return name_formatted;\n  }\n\n  render() {\n    if (this.props.type === \"sales\") {\n      return (\n        <>\n          <div className=\"print-ctr\">\n            <div className=\"print\">\n              <div className=\"print-pharmacy\">\n                <span> Freedom Health Pharmacy</span>\n                <span style={{ fontSize: \"20px\" }}>\n                  Plot 7, Chegere Road Apac.\n                </span>\n                <span style={{ fontSize: \"20px\" }}>Tel: 0393 193 423</span>\n              </div>\n              <div className=\"print-title\">Sales File</div>\n              <div className=\"date\">Date: {this.getDate()}</div>\n              <div className=\"date\">Month: {this.getMonth()}</div>\n              <div className=\"content\">\n                <table width=\"90%\" style={{ margin: \"auto\" }}>\n                  <thead>\n                    <tr>\n                      <td>Products</td>\n                      <td>Total Amount</td>\n                      <td>Amount Paid</td>\n                      <td>Made By</td>\n                      <td>Sale Date</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.props.data.length === 0 ? (\n                      <tr>\n                        <td>No Content To Print</td>\n                      </tr>\n                    ) : (\n                      this.props.data.map((v, i) => {\n                        let products = \"\";\n                        let sold = JSON.parse(v.products_sold);\n                        sold.forEach((p) => {\n                          if (sold.length > 1) {\n                            if (sold.indexOf(p) === sold.length - 1) {\n                              products =\n                                products +\n                                `${this.getNameSpaces(p.product_name, 10)}`;\n                            } else {\n                              products =\n                                products +\n                                `${this.getNameSpaces(p.product_name, 10)}` +\n                                \",\";\n                            }\n                          } else {\n                            products =\n                              products +\n                              `${this.getNameSpaces(p.product_name, 10)}`;\n                          }\n                        });\n                        return (\n                          <tr key={i}>\n                            <td>{products}</td>\n                            <td>{v.sales_amount}</td>\n                            <td>{v.amount_paid}</td>\n                            <td>{v.sale_made_by}</td>\n                            <td>\n                              {new Date(parseInt(v.sales_date)).getDate() +\n                                \" / \" +\n                                (new Date(parseInt(v.sales_date)).getMonth() +\n                                  1) +\n                                \" / \" +\n                                new Date(parseInt(v.sales_date)).getFullYear()}\n                            </td>\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                  <thead>\n                    <tr>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td>Total Sales</td>\n                      <td>{`${this.props.data.length}`}</td>\n                    </tr>\n                    <tr>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td>Total Income</td>\n                      <td>{`UGX ${this.getTotals()}`}</td>\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.props.type === \"purchases\") {\n      return (\n        <>\n          <div className=\"print-ctr\">\n            <div className=\"print\">\n              <div className=\"print-pharmacy\">\n                <span> Freedom Health Pharmacy</span>\n                <span style={{ fontSize: \"20px\" }}>\n                  Plot 7, Chegere Road Apac.\n                </span>\n                <span style={{ fontSize: \"20px\" }}>Tel: 0393 193 423</span>\n              </div>\n              <div className=\"print-title\">Purchases File</div>\n              <div className=\"date\">Date: {this.getDate()}</div>\n              <div className=\"date\">Month: {this.getMonth()}</div>\n              <div className=\"content\">\n                <table width=\"90%\" style={{ margin: \"auto\" }}>\n                  <thead>\n                    <tr>\n                      <td>Products</td>\n                      <td>Total Amount</td>\n                      <td>Amount Paid</td>\n                      <td>Made By</td>\n                      <td>Purchase Date</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.props.data.length === 0 ? (\n                      <tr>\n                        <td>No Content To Print</td>\n                      </tr>\n                    ) : (\n                      this.props.data.map((v, i) => {\n                        let products = \"\";\n                        let sold = JSON.parse(v.products_purchased);\n                        sold.forEach((p) => {\n                          if (sold.length > 1) {\n                            products =\n                              products +\n                              `${this.getNameSpaces(p.product_name, 10)}` +\n                              \",\";\n                          } else {\n                            products =\n                              products +\n                              `${this.getNameSpaces(p.product_name, 10)}`;\n                          }\n                        });\n                        return (\n                          <tr key={i}>\n                            <td>{products}</td>\n                            <td>{v.purchase_t_amount}</td>\n                            <td>{v.purchase_amount}</td>\n                            <td>{v.purchase_made_by}</td>\n                            <td>\n                              {new Date(parseInt(v.purchase_date)).getDate() +\n                                \" / \" +\n                                (new Date(\n                                  parseInt(v.purchase_date)\n                                ).getMonth() +\n                                  1) +\n                                \" / \" +\n                                new Date(\n                                  parseInt(v.purchase_date)\n                                ).getFullYear()}\n                            </td>\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                  <thead>\n                    <tr>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td>Total Purchases</td>\n                      <td>{`${this.props.data.length}`}</td>\n                    </tr>\n                    <tr>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td>Total Amount Spent</td>\n                      <td>{`UGX ${this.getPurchaseTotals()}`}</td>\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nexport default Print;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\n\n//pdf\nimport ReactToPrint from \"react-to-print\";\nimport Print from \"../../components/print\";\n\nclass AllPurchases extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      purchases: [],\n    };\n    this.purchases();\n  }\n  async purchases() {\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\n    if (res !== \"Error\") {\n      let purchase = [];\n      res.forEach((e) => {\n        if (\n          new Date(parseInt(e.purchase_date)).getMonth() ===\n          new Date(Date.now()).getMonth()\n        ) {\n          purchase.push(e);\n        }\n      });\n      this.setState({\n        ...this.state,\n        purchases: purchase,\n        print: true,\n      });\n    }\n  }\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n  getNameSpaces(n, i) {\n    let name = n.split(\" \")[0];\n    let name_formatted;\n    if (name.length === i) {\n      name_formatted = name + \" \";\n    }\n    if (name.length > i) {\n      name_formatted = name.substring(0, i) + \" \";\n    }\n    if (name.length < i) {\n      name_formatted = name;\n      let spaces = i - name.length;\n      for (let i = 0; i < spaces; i++) {\n        name_formatted = name_formatted + \" \";\n      }\n    }\n    return name_formatted;\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"finance\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Monthly Purchases Made</h3>\n                    <ReactToPrint\n                      trigger={() => {\n                        return (\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ marginRight: 10 }}\n                          >\n                            <span\n                              style={{\n                                fontSize: \"17.5px\",\n                                marginRight: \"10px\",\n                              }}\n                            >\n                              <i className=\"las la-file-pdf\"></i>\n                            </span>\n                            Save PDF\n                          </Button>\n                        );\n                      }}\n                      content={() => this.componentRef}\n                    />\n                  </div>\n                  <div className=\"card-body\">\n                    <table style={{ width: \"85%\", margin: \"auto\" }}>\n                      <thead>\n                        <tr>\n                          <td>Products</td>\n                          <td>Total</td>\n                          <td>Discount</td>\n                          <td>Paid</td>\n                          <td>Details</td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.purchases.length === 0 ? (\n                          <tr>\n                            <td>No Purchase Made</td>\n                          </tr>\n                        ) : (\n                          this.state.purchases.map((v, i) => {\n                            let products = \"\";\n                            let sold = JSON.parse(v.products_purchased);\n                            sold.forEach((p) => {\n                              if (sold.length > 1) {\n                                if (sold.indexOf(p) === sold.length - 1) {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\n                                } else {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(\n                                      p.product_name,\n                                      10\n                                    )}` +\n                                    \",\";\n                                }\n                              } else {\n                                products =\n                                  products +\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\n                              }\n                            });\n                            return (\n                              <tr key={i}>\n                                <td>{products}</td>\n                                <td>{v.purchase_t_amount}</td>\n                                <td>{v.purchase_discount}</td>\n                                <td>{v.purchase_amount}</td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={(e) => {\n                                      this.setState({\n                                        ...this.state,\n                                        open: true,\n                                        dialog_data: v,\n                                      });\n                                    }}\n                                  >\n                                    Details\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n        <div style={{ display: \"none\" }}>\n          {this.state.print ? (\n            <Print\n              ref={(el) => (this.componentRef = el)}\n              data={this.state.purchases}\n              type=\"purchases\"\n            />\n          ) : (\n            <></>\n          )}\n        </div>\n        {this.state.dialog_data ? (\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Purchase Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <table width=\"100%\">\n                  <thead>\n                    <tr>\n                      <td>Product</td>\n                      <td>Qty</td>\n                      <td>Selling Unit</td>\n                      <td>Amount</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {JSON.parse(this.state.dialog_data.products_purchased).map(\n                      (v, i) => {\n                        return (\n                          <>\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.selling_unit}</td>\n                              <td>{v.cost_price}</td>\n                            </tr>\n                          </>\n                        );\n                      }\n                    )}\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"\">\n                  <table>\n                    <tr>\n                      <td>\n                        {`Total Amount: UGX ${this.state.dialog_data.purchase_t_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Discount: UGX ${this.state.dialog_data.purchase_discount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        {`Amount Paid: ${this.state.dialog_data.purchase_amount}`}\n                      </td>\n                    </tr>\n                    {`Made By: ${this.state.dialog_data.purchase_made_by}`}\n                  </table>\n                </div>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AllPurchases;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\n\nimport ReactToPrint from \"react-to-print\";\nimport Print from \"../../components/print\";\n\nclass AllSales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      sales: [],\n    };\n    this.sales();\n  }\n\n  async sales() {\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\n    if (res !== \"Error\") {\n      let sale = [];\n      res.forEach((e) => {\n        if (\n          new Date(parseInt(e.sales_date)).getMonth() ===\n          new Date(Date.now()).getMonth()\n        ) {\n          sale.push(e);\n        }\n      });\n      this.setState({ ...this.state, sales: sale, print: true });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  getNameSpaces(n, i) {\n    let name = n.split(\" \")[0];\n    let name_formatted;\n    if (name.length === i) {\n      name_formatted = name + \" \";\n    }\n    if (name.length > i) {\n      name_formatted = name.substring(0, i) + \" \";\n    }\n    if (name.length < i) {\n      name_formatted = name;\n      let spaces = i - name.length;\n      for (let i = 0; i < spaces; i++) {\n        name_formatted = name_formatted + \" \";\n      }\n    }\n    return name_formatted;\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"finance\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3>Monthly Sales Made</h3>\n\n                    <ReactToPrint\n                      trigger={() => {\n                        return (\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ marginRight: 10 }}\n                          >\n                            <span\n                              style={{\n                                fontSize: \"17.5px\",\n                                marginRight: \"10px\",\n                              }}\n                            >\n                              <i className=\"las la-file-pdf\"></i>\n                            </span>\n                            Save PDF\n                          </Button>\n                        );\n                      }}\n                      content={() => this.componentRef}\n                    />\n                  </div>\n                  <div className=\"card-body\">\n                    <table style={{ width: \"85%\", margin: \"auto\" }}>\n                      <thead>\n                        <tr>\n                          <td>Products</td>\n                          <td>Total</td>\n                          <td>Discount</td>\n                          <td>Paid</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.sales.length === 0 ? (\n                          <tr>\n                            <td>No Sale Made</td>\n                          </tr>\n                        ) : (\n                          this.state.sales.map((v, i) => {\n                            let products = \"\";\n                            let sold = JSON.parse(v.products_sold);\n                            sold.forEach((p) => {\n                              if (sold.length > 1) {\n                                if (sold.indexOf(p) === sold.length - 1) {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\n                                } else {\n                                  products =\n                                    products +\n                                    `${this.getNameSpaces(\n                                      p.product_name,\n                                      10\n                                    )}` +\n                                    \",\";\n                                }\n                              } else {\n                                products =\n                                  products +\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\n                              }\n                            });\n                            return (\n                              <tr key={i}>\n                                <td>{products}</td>\n                                <td>{v.sales_amount}</td>\n                                <td>{v.sales_discount}</td>\n                                <td>{v.amount_paid}</td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={(e) => {\n                                      this.setState({\n                                        ...this.state,\n                                        open: true,\n                                        dialog_data: v,\n                                      });\n                                    }}\n                                  >\n                                    Details\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n        <div style={{ display: \"none\" }}>\n          {this.state.print ? (\n            <Print\n              ref={(el) => (this.componentRef = el)}\n              data={this.state.sales}\n              type=\"sales\"\n            />\n          ) : (\n            <></>\n          )}\n        </div>\n        {this.state.dialog_data ? (\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                <table width=\"100%\">\n                  <thead>\n                    <tr>\n                      <td>Product</td>\n                      <td>Qty</td>\n                      <td>Selling Unit</td>\n                      <td>Amount</td>\n                      <td>Sale Type</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\n                      (v, i) => {\n                        return (\n                          <>\n                            <tr key={i}>\n                              <td className=\"name_cell\">{v.product_name}</td>\n                              <td>{v.qty}</td>\n                              <td>{v.selling_unit}</td>\n                              <td>{v.product_price}</td>\n                              <td>{v.sale_type}</td>\n                            </tr>\n                          </>\n                        );\n                      }\n                    )}\n                  </tbody>\n                </table>\n                <hr />\n                <div className=\"\">\n                  <table>\n                    <tr>\n                      <td>\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        Discount: UGX {this.state.dialog_data.sales_discount}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        Amount Paid: UGX {this.state.dialog_data.amount_paid}\n                      </td>\n                    </tr>\n                    {`Made By: ${this.state.dialog_data.sale_made_by}`}\n                  </table>\n                </div>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AllSales;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Snackbar,\n  IconButton,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport UsersApi from \"../../api/users\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AnchorEl: null,\n      AnchorElDrugs: null,\n      batches: [],\n      loading: true,\n      open: false,\n      open_del: false,\n      message: \"Please Wait...\",\n      messageState: \"\",\n      batch_id: \"\",\n    };\n    this.batches();\n  }\n\n  handleOpenActions = (e) => {\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\n  };\n  handleOpenActionsDrugs = (e) => {\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\n  };\n  handleCloseActions = () => {\n    this.setState({ ...this.state, AnchorEl: null });\n  };\n  handleCloseActionsDrugs = () => {\n    this.setState({ ...this.state, AnchorElDrugs: null });\n  };\n\n  async batches() {\n    const res = (await UsersApi.data(\"/user/all/batches\")) || [];\n    if (res) {\n      this.setState({\n        ...this.state,\n        loading: false,\n        batches: res === \"Error\" ? [] : res,\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ ...this.state, open: false });\n  };\n\n  handleDelete = async () => {\n    this.setState({ ...this.state, open_del: true, messageState: \"info\" });\n    const res = await UsersApi.data(\n      `/user/all/delete_batch/${this.state.batch_id}`\n    );\n    if (res.status === true) {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"success\",\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    } else {\n      this.setState({\n        ...this.state,\n        message: res.data,\n        messageState: \"error\",\n      });\n    }\n  };\n\n  closePopUp = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      ...this.state,\n      open_del: false,\n      message: \"Please Wait...\",\n      messageState: \"info\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          open={this.state.open}\n          autoHideDuration={5000}\n          onClose={this.closePopUp}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={this.closePopUp}\n              >\n                <i className=\"las la-times\"></i>\n              </IconButton>\n            </React.Fragment>\n          }\n        >\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\n        <Nav active=\"dashboard\" />\n        <div className=\"main-content\">\n          <Header />\n          <main>\n            <div className=\"fullwidth-ctr\">\n              <div className=\"projects\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <TextField\n                      className=\"text_field_all_products\"\n                      name=\"drug_name\"\n                      variant=\"outlined\"\n                      label=\"Search Batch\"\n                      style={{\n                        width: \"15%\",\n                      }}\n                      onKeyUp={async (e) => {\n                        const res = e.target.value\n                          ? (await UsersApi.data(\n                              `/user/all/search_batch/${e.target.value}`\n                            )) || []\n                          : (await UsersApi.data(\"/user/all/products\")) || [];\n                        if (res !== \"Error\") {\n                          this.setState({\n                            ...this.state,\n                            loader: false,\n                            batches: res === \"Error\" ? [] : res,\n                          });\n                        }\n                      }}\n                    />\n                  </div>\n                  <div className=\"card-body\">\n                    <table width=\"100%\">\n                      <thead>\n                        <tr>\n                          <td>Product Generic Name</td>\n                          <td>Product Description</td>\n                          <td>Batch Number</td>\n                          <td>Batch Quantity</td>\n                          <td></td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.batches.length === 0 ? (\n                          this.state.loading ? (\n                            <tr>\n                              <td>\n                                <CircularProgress size={25} />\n                              </td>\n                            </tr>\n                          ) : (\n                            <tr>\n                              <td>No Batch Exists</td>\n                            </tr>\n                          )\n                        ) : (\n                          this.state.batches.map((v, i) => {\n                            return (\n                              <tr key={i}>\n                                <td>{v.product_generic_name}</td>\n                                <td>{v.product_description_name}</td>\n                                <td>{v.batch_no}</td>\n                                <td>{v.batch_qty}</td>\n                                <td></td>\n                                <td>\n                                  <Button\n                                    variant=\"contained\"\n                                    style={{ color: \"red\" }}\n                                    onClick={() => {\n                                      this.setState({\n                                        ...this.state,\n                                        open: true,\n                                        batch_id: v.batch_id,\n                                      });\n                                    }}\n                                  >\n                                    Delete\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n        {this.state.batch_id ? (\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">\n              Want to Delete Product Batch?\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                This removes a specific batch number. Press OK and Continue.\n                This process is Irreversible\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleDelete} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AllProducts;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport \"../app.css\";\nimport \"line-awesome/dist/line-awesome/css/line-awesome.css\";\nimport Dashboard from \"../Routes/admin/Dashboard\";\nimport NewProduct from \"../Routes/admin/NewProduct\";\nimport NewSupplier from \"../Routes/admin/NewSupplier\";\nimport NewCustomer from \"../Routes/admin/NewCustomer\";\nimport NewUser from \"../Routes/admin/NewUser\";\nimport NewSale from \"../Routes/admin/Newsale\";\nimport AllProducts from \"../Routes/admin/allProducts\";\nimport NewPurchase from \"../Routes/admin/new_purchase\";\nimport Product from \"../Routes/admin/product\";\nimport Edit from \"../Routes/admin/editProduct\";\nimport Finance from \"../Routes/admin/finance\";\nimport Reports from \"../Routes/admin/reports\";\nimport Purchases from \"../Routes/admin/allPurchases\";\nimport Sales from \"../Routes/admin/allSales\";\nimport Batches from \"../Routes/admin/allBatches\";\nimport NotFound from \"../components/404\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/new-product\" exact component={NewProduct} />\n            <Route path=\"/new-supplier\" exact component={NewSupplier} />\n            <Route path=\"/new-customer\" exact component={NewCustomer} />\n            <Route path=\"/new-user\" exact component={NewUser} />\n            <Route path=\"/new-purchase\" exact component={NewPurchase} />\n            <Route path=\"/new-sale\" exact component={NewSale} />\n            <Route path=\"/all-products\" exact component={AllProducts} />\n            <Route path=\"/product\" exact component={Product} />\n            <Route path=\"/edit-product\" exact component={Edit} />\n            <Route path=\"/finance\" exact component={Finance} />\n            <Route path=\"/reports\" exact component={Reports} />\n            <Route path=\"/all-purchases\" exact component={Purchases} />\n            <Route path=\"/all-sales\" exact component={Sales} />\n            <Route path=\"/all-batches\" exact component={Batches} />\n            <Route path=\"*\" exact component={NotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\nimport user from \"./app_config\";\nimport Dispenser from \"./users_routes/dispenser\";\nimport Cashier from \"./users_routes/cashier\";\nimport Admin from \"./users_routes/admin\";\nimport Login from \"./components/Login\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user,\n    };\n  }\n\n  render() {\n    if (user.user.user_role === \"admin\") {\n      return <Admin />;\n    } else if (user.user.user_role === \"dispenser\") {\n      return <Dispenser />;\n    } else if (user.user.user_role === \"cashier\") {\n      return <Cashier />;\n    } else {\n      return <Login />;\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"@fontsource/ubuntu\";\n\nimport App from \"./app\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst THEME = createTheme({\n  typography: {\n    fontFamily: `\"Ubuntu\", sans-serifs`,\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n});\nconst AppWithTheme = () => (\n  <MuiThemeProvider theme={THEME}>\n    <App />\n  </MuiThemeProvider>\n);\n\nReactDom.render(<AppWithTheme />, document.getElementById(\"root\"));\n"],"sourceRoot":""}