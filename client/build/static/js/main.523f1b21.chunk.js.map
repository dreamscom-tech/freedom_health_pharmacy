{"version":3,"sources":["app_config.js","Routes/dispenser/components/Nav.js","assets/place-holder.jpg","api/users.jsx","assets/doctor.png","assets/fhp.jpg","components/Login.jsx","Routes/dispenser/components/Header.js","components/format.js","Routes/dispenser/Dashboard.jsx","api/forms.js","components/raw_print.js","Routes/dispenser/Newsale.jsx","Routes/dispenser/allProducts.jsx","Routes/dispenser/new_purchase.jsx","Routes/dispenser/product.jsx","Routes/dispenser/new-product.jsx","components/404.js","users_routes/dispenser.jsx","users_routes/cashier.jsx","Routes/admin/components/Nav.js","Routes/admin/components/Header.js","Routes/admin/Dashboard.jsx","Routes/admin/NewProduct.jsx","Routes/admin/NewSupplier.jsx","Routes/admin/NewCustomer.jsx","Routes/admin/NewUser.jsx","Routes/admin/Newsale.jsx","Routes/admin/allProducts.jsx","Routes/admin/new_purchase.jsx","Routes/admin/product.jsx","Routes/admin/editProduct.jsx","Routes/admin/finance.jsx","Routes/admin/reports.jsx","components/print.jsx","Routes/admin/allPurchases.jsx","Routes/admin/allSales.jsx","Routes/admin/allBatches.jsx","users_routes/admin.jsx","app.js","index.js"],"names":["token","sessionStorage","getItem","tokenFrom","JSON","parse","Base64","decode","user","Nav","props","state","className","htmlFor","style","fontSize","to","this","active","Component","url","UsersApi","data","axios","post","res","console","error","i","get","Login","useState","username","password","_cp","setUser","loaderOpen","setloaderOpen","ServerError","setServerError","handleClick","e","a","login","log","status","encode","stringify","setItem","window","location","replace","setTimeout","width","height","backgroundColor","alt","src","Logo","objectFit","margin","TextField","name","variant","label","helperText","onChange","target","value","fullWidth","required","display","type","Button","color","marginRight","onClick","marginLeft","CircularProgress","size","Image","Logout","removeItem","Header","AnchorEl","setAnchorEl","React","open","setOpen","handleCloseActions","handleCloseDialog","alignItems","currentTarget","cursor","Avatar","user_role","Menu","id","anchorEl","keepMounted","disableScrollLock","Boolean","onClose","MenuItem","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","UI_Helper","toLocaleString","Dashboard","expiry_products","setState","handleSaleClose","open_sale","handleOpenActions","handleOpenActionsDrugs","AnchorElDrugs","handleCloseActionsDrugs","products","purchase_number","sales_number","my_sales","purchases","sales","length","defaultChecked","Helper","format","map","v","product_generic_name","batch_no","batch_qty","batch_expiry_date","sales_amount","sales_discount","amount_paid","dialog_data","products_sold","product_name","qty","selling_unit","product_price","sale_type","FormsApi","RawPrint","new_sale","values","total_amount","parseInt","discount","pay_amount","sale","customer","getNameSpaces","n","name_formatted","substring","spaces","month","Date","now","getMonth","getDate","getFullYear","forEach","push","toString","user_first_name","newLine","Alert","elevation","NewSale","print_receipt","qz","websocket","connect","then","printers","find","printer","config","configs","create","print","disconnect","catch","err","customers","handleSale","preventDefault","finish_btn_disabled","messageState","fd","FormData","content","key","_content","formData","date","message","api","reload","handleSubmit","over_qty_error","active_drug","_fcontent","batch","handleDrugNameKeyUp","handleChangeDrugName","IsJsonString","product_units","active_selling_unit","active_selling_price","active_sale_type","active_product_re_order","product_re_order","el","active_product_qty","product_qty","closePopUp","event","reason","total","str","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","IconButton","severity","arr","splice","getTotals","autoComplete","onSubmit","FormControl","marginInline","InputLabel","Select","inputProps","Autocomplete","options","getOptionLabel","option","product_description_name","onKeyUp","renderInput","params","disabled","defaultValue","hidden","product_id","marginTop","FormGroup","FormControlLabel","control","Checkbox","Finish","t","setDiscount","customer_surname","customer_lastname","AllProducts","expiry_date","quantity","NewPurchase","handlePurchase","products_purchased","empty_error","active_retail_price","retail","active_wholesale_price","wholesale","suppliers","cost_price","supplier_id","supplier_surname","Product","product","URLSearchParams","search","borderBottom","padding","product_track_number","fontWeight","unit_price","date_added","getHours","getMinutes","product_description","supplier_lastname","date_registered","supplier_contact","supplier_location","supplier_address","NewProduct","handleClose","open_dialog","handleUnit","empty_name_error","units","new_unit_error","selling_units","justifyContent","flex","units_change","unit_name","multiline","NotFound","flexDirection","marginBlock","Dispenser","path","exact","component","Cashier","less_qty","less_qty_pdts","sales_number_daily","sales_number_monthly","sales_daily","sales_monthly","sales_date","NewSupplier","NewCustomer","New_user","departments","handleDelete","open_del","loading","loader","EditProduct","re_order","units_arr","unit","Finance","handlePurchaseClose","open_purchase","print_sale","income","today_income","expenses","today_expense","today_sales","today_purchases","purchase_date","purchase_amount","split","sold","p","indexOf","purchase_t_amount","dialog_purchase_data","sale_made_by","purchase_discount","purchase_made_by","Reports","daily","daily_purchases","daily_expenses","daily_products","daily_income","daily_sales","monthly","monthly_products","monthly_purchases","monthly_expenses","monthly_income","monthly_sales","annually","year","annual_products","annual_expenses","annual_purchases","annual_income","annual_sales","products_daily","products_monthly","products_annual","product_date","purchase_daily","expense_daily","purchase_monthly","expense_monthly","purchase_annual","expense_annual","income_daily","income_monthly","income_annual","sales_annual","Print","s","getPurchaseTotals","AllPurchases","purchase","trigger","componentRef","ref","AllSales","batch_id","batches","Admin","NewUser","Edit","Purchases","Sales","Batches","App","THEME","createTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","AppWithTheme","theme","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.523f1b21.chunk.js","sourcesContent":["import { Base64 } from \"js-base64\";\r\nconst token = sessionStorage.getItem(\"token\");\r\nconst tokenFrom = token ? JSON.parse(Base64.decode(token)) : null;\r\nconst user = {\r\n  user: tokenFrom ? tokenFrom : {},\r\n};\r\n\r\nexport default user;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"sideBar-ctr\">\r\n          <div className=\"sidebar\">\r\n            <label htmlFor=\"nav-toggle\" className=\"close-on-sm\">\r\n              <span className=\"las la-times\"></span>\r\n            </label>\r\n            <div className=\"sidebar-brand\">\r\n              <h2>\r\n                <span\r\n                  className=\"las la-clinic-medical\"\r\n                  style={{ fontSize: \"32px\" }}\r\n                ></span>\r\n                <span>Pharmacy</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"sidebar-menu\">\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"dashboard\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-home\"></span>\r\n                      <span>Dashboard</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/new-sale\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"sale\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-user-plus\"></span>\r\n                      <span>New Sale</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/new-purchase\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"purchase\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-prescription-bottle-alt\"></span>\r\n                      <span>New Purchase</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/place-holder.8c84566a.jpg\";","import axios from \"axios\";\r\n\r\n// const url = \"http://localhost:5050/api\";\r\nconst url = \"https://freedomhealth.herokuapp.com/api\";\r\n\r\nexport default class UsersApi {\r\n  ///new Login\r\n  static async login(data) {\r\n    try {\r\n      const res = await axios.post(`${url}/user/admin/login`, data);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return \"Error\";\r\n    }\r\n  }\r\n  static async data(i) {\r\n    try {\r\n      const res = await axios.get(`${url}${i}`);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return \"Error\";\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/doctor.26885907.png\";","export default __webpack_public_path__ + \"static/media/fhp.574aa51e.jpg\";","import React, { useState } from \"react\";\r\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\r\nimport UsersApi from \"../api/users\";\r\nimport Image from \"../assets/doctor.png\";\r\nimport Logo from \"../assets/fhp.jpg\";\r\nimport { Base64 } from \"js-base64\";\r\n//design\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n  const [user, setUser] = useState({ username: \"\", password: \"\", _cp: true });\r\n  const [loaderOpen, setloaderOpen] = useState(false);\r\n  const [ServerError, setServerError] = useState(\"\");\r\n  const handleClick = async (e) => {\r\n    setloaderOpen(true);\r\n    const res = await UsersApi.login({\r\n      username: user.username,\r\n      password: user.password,\r\n    });\r\n    console.log(res);\r\n    if (res !== \"Error\") {\r\n      if (res.status === false) {\r\n        setUser({ ...user, _cp: false });\r\n        setloaderOpen(false);\r\n        return;\r\n      } else {\r\n        const data = Base64.encode(JSON.stringify(res.user));\r\n        sessionStorage.setItem(\"token\", data);\r\n        window.location.replace(\"/\");\r\n        setloaderOpen(false);\r\n      }\r\n    } else {\r\n      setServerError(\"Server Error...\");\r\n      setTimeout(() => {\r\n        setloaderOpen(false);\r\n        setServerError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}\r\n      className=\"m-ctr\"\r\n    >\r\n      <div className=\"ctr\">\r\n        <img\r\n          alt=\"Hospital\"\r\n          src={Logo}\r\n          height=\"120px\"\r\n          width=\"150px\"\r\n          style={{ objectFit: \"cover\" }}\r\n        />\r\n        <div\r\n          className=\"header\"\r\n          style={{\r\n            margin: \"15px 0px\",\r\n          }}\r\n        >\r\n          Freedom Pharmacy\r\n        </div>\r\n        <div className=\"loginCtr\">\r\n          <TextField\r\n            name=\"username\"\r\n            variant=\"standard\"\r\n            label=\"Username\"\r\n            helperText={!user._cp ? \"Incorrect Username Or Password\" : \"\"}\r\n            error={!user._cp}\r\n            onChange={(e) => {\r\n              setUser({ ...user, username: e.target.value });\r\n            }}\r\n            fullWidth\r\n            required\r\n            style={{\r\n              width: \"250px\",\r\n              display: \"block\",\r\n              margin: \"15px 0px\",\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            name=\"password\"\r\n            variant=\"standard\"\r\n            helperText={!user._cp ? \"Incorrect Username Or Password\" : \"\"}\r\n            label=\"Password\"\r\n            required\r\n            error={!user._cp}\r\n            onChange={(e) => {\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n            fullWidth\r\n            style={{\r\n              display: \"block\",\r\n              margin: \"50px 0px\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"submitCtr\">\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginRight: 10 }}\r\n            onClick={handleClick}\r\n          >\r\n            Login\r\n            <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n              <i className=\"las la-sign-in-alt\"></i>\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        {/* for loader */}\r\n        <div\r\n          className=\"loader\"\r\n          style={loaderOpen ? { display: \"flex\" } : { display: \"none\" }}\r\n        >\r\n          <CircularProgress size={25} />\r\n          <div>{ServerError}</div>\r\n        </div>\r\n        {/* for loader */}\r\n      </div>\r\n      <img src={Image} className=\"img\" alt=\"Hospital\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nexport function Logout() {\r\n  sessionStorage.removeItem(\"token\");\r\n  window.location.replace(\"/\");\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"../../../assets/place-holder.jpg\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport user from \"../../../app_config\";\r\nimport { Logout } from \"../../../components/Login\";\r\nfunction Header() {\r\n  const [AnchorEl, setAnchorEl] = useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpenActions = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleCloseActions = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h2>\r\n          <label htmlFor=\"nav-toggle\">\r\n            <span className=\"las la-bars\"></span>\r\n          </label>\r\n          <span className=\"health_unit_name\">Freedom Health</span>\r\n        </h2>\r\n        {/* <div className=\"search-wrapper\">\r\n          <span className=\"las la-search\"></span>\r\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Search here\" />\r\n        </div> */}\r\n        <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div className=\"\" style={{ fontSize: \"42px\", marginRight: 20 }}>\r\n            <i className=\"las la-bell\"></i>\r\n          </div>\r\n          <div\r\n            className=\"user-wrapper\"\r\n            aria-controls=\"reception-actions\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleOpenActions}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <img src={Avatar} alt=\"\" width=\"40px\" height=\"40px\" />\r\n            <div className=\"\">\r\n              <h4>{user.user.username}</h4>\r\n              <small>{user.user.user_role}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <Menu\r\n        id=\"reception-actions\"\r\n        anchorEl={AnchorEl}\r\n        keepMounted\r\n        disableScrollLock={true}\r\n        open={Boolean(AnchorEl)}\r\n        onClose={handleCloseActions}\r\n      >\r\n        <MenuItem onClick={handleCloseActions}>\r\n          <span style={{ fontSize: 24, marginRight: 10 }}>\r\n            <i className=\"las la-user-alt\"></i>\r\n          </span>\r\n          Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClickOpenDialog}>\r\n          <span style={{ fontSize: 24, marginRight: 10 }}>\r\n            <i className=\"las la-sign-out-alt\"></i>\r\n          </span>\r\n          Log out\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Want to Log Out. Click 'Stay' to close, Log Out to Continue\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Stay\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            onClick={() => {\r\n              Logout();\r\n            }}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default class UI_Helper {\r\n  static format(value) {\r\n    return value.toLocaleString();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\nimport user from \"../../app_config\";\r\nimport Helper from \"../../components/format\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      products: [],\r\n      purchase_number: \"...\",\r\n      sales_number: \"...\",\r\n      expiry_products: [],\r\n      my_sales: [],\r\n      open_sale: false,\r\n    };\r\n    this.products();\r\n    this.purchases();\r\n    this.sales();\r\n    this.expiry_products();\r\n    this.my_sales();\r\n  }\r\n\r\n  async my_sales() {\r\n    const res =\r\n      (await UsersApi.data(`/user/all/my_sales/${user.user.username}`)) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, my_sales: res !== \"Error\" ? res : [] });\r\n    }\r\n  }\r\n\r\n  expiry_products = async () => {\r\n    const res = (await UsersApi.data(\"/user/all/batch/expiry\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        expiry_products: res !== \"Error\" ? res : [],\r\n      });\r\n    }\r\n  };\r\n\r\n  async products() {\r\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res });\r\n    }\r\n  }\r\n\r\n  async purchases() {\r\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, purchase_number: res.length });\r\n    }\r\n  }\r\n\r\n  async sales() {\r\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, sales_number: res.length });\r\n    }\r\n  }\r\n\r\n  handleSaleClose = () => {\r\n    this.setState({ ...this.state, open_sale: false });\r\n  };\r\n\r\n  handleOpenActions = (e) => {\r\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\r\n  };\r\n  handleOpenActionsDrugs = (e) => {\r\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\r\n  };\r\n  handleCloseActions = () => {\r\n    this.setState({ ...this.state, AnchorEl: null });\r\n  };\r\n  handleCloseActionsDrugs = () => {\r\n    this.setState({ ...this.state, AnchorElDrugs: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"cards\">\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.my_sales.length)}</h3>\r\n                  <span>My Sales</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.sales_number)}</h3>\r\n                  <span>Sales</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.purchase_number)}</h3>\r\n                  <span>Purchases</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.products.length)}</h3>\r\n                  <span>Total Products</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Expiring in 90 days</h3>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-controls=\"drug-actions\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={this.handleOpenActionsDrugs}\r\n                    >\r\n                      Menu\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-angle-down\"></span>\r\n                      </span>\r\n                    </Button>\r\n                    <Menu\r\n                      id=\"drug-actions\"\r\n                      anchorEl={this.state.AnchorElDrugs}\r\n                      keepMounted\r\n                      open={Boolean(this.state.AnchorElDrugs)}\r\n                      onClose={this.handleCloseActionsDrugs}\r\n                      disableScrollLock={true}\r\n                    >\r\n                      <Link to=\"/new-product\">\r\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\r\n                          New Product\r\n                        </MenuItem>\r\n                      </Link>\r\n                    </Menu>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Name</td>\r\n                          <td>Batch No.</td>\r\n                          <td>Quantity In Batch</td>\r\n                          <td>Expires On</td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.expiry_products.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Medicine Expires In 90 days</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.expiry_products.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td className=\"name_cell\">\r\n                                  {v.product_generic_name}\r\n                                </td>\r\n                                <td>{v.batch_no}</td>\r\n                                <td>{v.batch_qty}</td>\r\n                                <td>{v.batch_expiry_date}</td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>My Sales</h3>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-controls=\"reception-actions\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={this.handleOpenActions}\r\n                    >\r\n                      See All\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-angle-down\"></span>\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Total</td>\r\n                          <td>Discount</td>\r\n                          <td>Paid</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.my_sales.length === 0 ? (\r\n                          <tr>\r\n                            <td>No sale made</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.my_sales.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{v.sales_amount}</td>\r\n                                <td>{v.sales_discount}</td>\r\n                                <td>{v.amount_paid}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open_sale: true,\r\n                                        dialog_data: v,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Details\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        {this.state.dialog_data ? (\r\n          <Dialog\r\n            open={this.state.open_sale}\r\n            onClose={this.handleSaleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <table width=\"100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Product</td>\r\n                      <td>Qty</td>\r\n                      <td>Selling Unit</td>\r\n                      <td>Amount</td>\r\n                      <td>Sale Type</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\r\n                      (v, i) => {\r\n                        return (\r\n                          <>\r\n                            <tr key={i}>\r\n                              <td>{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.selling_unit}</td>\r\n                              <td>{v.product_price}</td>\r\n                              <td>{v.sale_type}</td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className=\"\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Discount: UGX  ${this.state.dialog_data.sales_discount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Amount Paid: UGX ${this.state.dialog_data.amount_paid}`}\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleSaleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n\r\n// const url = \"http://localhost:5050/api\";\r\nconst url = \"https://freedomhealth.herokuapp.com/api\";\r\n\r\nexport default class FormsApi {\r\n  async post(i, data) {\r\n    try {\r\n      const res = await axios.post(`${url}${i}`, data);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return \"Error\";\r\n    }\r\n  }\r\n}\r\n","//imports\r\nimport user from \"../app_config\";\r\n//imports\r\n\r\nexport default class RawPrint {\r\n  static new_sale = (v) => {\r\n    console.log(v);\r\n    const values = v.products_sold;\r\n    const total_amount = parseInt(v.total_amount);\r\n    const discount = parseInt(v.discount) || 0;\r\n    const amount_paid = parseInt(v.pay_amount);\r\n    const customer = v.customer;\r\n    const sale = v.sale_type;\r\n    // return [\r\n    //   \"\\x1B\" + \"\\x40\", // init\r\n    //   \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n    //   \"Beverly Hills, CA  90210\" + \"\\x1B\" + \"\\x74\" + \"\\x13\" + \"\\xAA\" + \"\\x0A\",\r\n    //   \"\\x0A\", // line break\r\n    //   \"www.qz.io\" + \"\\x0A\", // text and line break\r\n    //   \"\\x0A\", // line break\r\n    //   \"\\x0A\", // line break\r\n    //   \"May 18, 2016 10:30 AM\" + \"\\x0A\",\r\n    //   \"\\x0A\", // line break\r\n    //   \"\\x0A\", // line break\r\n    //   \"\\x0A\",\r\n    //   \"Transaction # 123456 Register: 3\" + \"\\x0A\",\r\n    //   \"\\x0A\",\r\n    //   \"\\x0A\",\r\n    //   \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n    //   \"Baklava (Qty 4)       9.00\" + \"\\x1B\" + \"\\x74\" + \"\\x13\" + \"\\xAA\", //print special char symbol after numeric\r\n    //   \"\\x0A\",\r\n    //   \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x45\", // bold on\r\n    //   \"Here's some bold text!\",\r\n    //   \"\\x1B\" + \"\\x45\" + \"\\x0A\", // bold off\r\n    //   \"\\x0A\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x61\" + \"\\x32\", // right align\r\n    //   \"\\x1B\" + \"\\x21\" + \"\\x30\", // em mode on\r\n    //   \"DRINK ME\",\r\n    //   \"\\x1B\" + \"\\x21\" + \"\\x0A\" + \"\\x1B\" + \"\\x45\" + \"\\x0A\", // em mode off\r\n    //   \"\\x0A\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n    //   \"------------------------------------------\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x4D\" + \"\\x31\", // small text\r\n    //   \"EAT ME\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x4D\" + \"\\x30\", // normal text\r\n    //   \"------------------------------------------\" + \"\\x0A\",\r\n    //   \"normal text\",\r\n    //   \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n    //   \"\\x0A\" + \"\\x0A\" + \"\\x0A\" + \"\\x0A\" + \"\\x0A\" + \"\\x0A\" + \"\\x0A\",\r\n    //   \"\\x1B\" + \"\\x45\" + \"\\x4d\" + \"\\x20\" + \"\\x34\",\r\n    //   // \"\\x1B\" + \"\\x69\", // cut paper (old syntax)\r\n    //   // '\\x1D' + '\\x56'  + '\\x00' // full cut (new syntax)\r\n    //   // '\\x1D' + '\\x56'  + '\\x30' // full cut (new syntax)\r\n    //   // '\\x1D' + '\\x56'  + '\\x01' // partial cut (new syntax)\r\n    //   // '\\x1D' + '\\x56'  + '\\x31' // partial cut (new syntax)\r\n    //   \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\", // Generate Pulse to kick-out cash drawer**\r\n    //   // **for legacy drawer cable CD-005A.  Research before using.\r\n    // ];\r\n    //functions\r\n    const getDate = () => {\r\n      let month =\r\n        new Date(Date.now()).getMonth() + 1 < 10\r\n          ? \"0\" + (new Date(Date.now()).getMonth() + 1)\r\n          : new Date(Date.now()).getMonth() + 1;\r\n      let date =\r\n        new Date(Date.now()).getDate() < 10\r\n          ? \"0\" + new Date(Date.now()).getDate()\r\n          : new Date(Date.now()).getDate();\r\n\r\n      let date_str =\r\n        date + \"/\" + month + \"/\" + new Date(Date.now()).getFullYear();\r\n      return date_str;\r\n    };\r\n\r\n    const getNameSpaces = (n, i) => {\r\n      let name = n;\r\n      let name_formatted;\r\n      if (name.length === i) {\r\n        name_formatted = name;\r\n      }\r\n      if (name.length > i) {\r\n        name_formatted = name.substring(0, i - 2) + \"..\";\r\n      }\r\n      if (name.length < i) {\r\n        name_formatted = name;\r\n        let spaces = i - name.length;\r\n        for (let i = 0; i < spaces; i++) {\r\n          name_formatted = name_formatted + \" \";\r\n        }\r\n      }\r\n      return name_formatted + \" \";\r\n    };\r\n    // `${customer ? `Customer:  ${customer}` : \"\"}`,\r\n    //functions\r\n    let data = [\r\n      \"------------------------------------------------\",\r\n      \"                                                \",\r\n      \"FREEDOM HEALTH AND SUPPLIES LTD                 \",\r\n      \"Plot 7, Chegere Road Apac                       \",\r\n      \"P.O.Box 120 Apac                                \",\r\n      \"Tel: 0393 193 423                               \",\r\n      \"                                                \",\r\n      \"SALES RECEIPT                                   \",\r\n      \"                                                \",\r\n      \"Date: \" + getDate() + \"                                \",\r\n      \"                                                \",\r\n      \"------------------------------------------------\",\r\n      \"Name                  Qty   Unit     Amount(Shs)\",\r\n    ];\r\n\r\n    values.forEach((v, i) => {\r\n      data.push(\r\n        `${getNameSpaces(v.product_name, 21)}${getNameSpaces(\r\n          v.qty,\r\n          5\r\n        )}${getNameSpaces(v.selling_unit, 8)}${getNameSpaces(\r\n          (parseInt(v.product_price) * parseInt(v.qty)).toString(),\r\n          10\r\n        )}`\r\n      );\r\n    });\r\n    let data_with_footer = [\r\n      ...data,\r\n      \"------------------------------------------------\",\r\n      `Sale          ${getNameSpaces(sale, 10)}                       `,\r\n      `Total         UGX: ${getNameSpaces(\r\n        total_amount.toString(),\r\n        8\r\n      )}                    `,\r\n      `Discount      UGX: ${getNameSpaces(\r\n        discount.toString(),\r\n        8\r\n      )}                    `,\r\n      `Paid          UGX: ${getNameSpaces(\r\n        amount_paid.toString(),\r\n        8\r\n      )}                    `,\r\n      \"                                                \",\r\n      \"Thank You                                       \",\r\n      `Served By: ${getNameSpaces(\r\n        user.user.user_first_name,\r\n        19\r\n      )}                 `,\r\n      \"Be Healthy, Be Happy                            \",\r\n      \"                                                \",\r\n      \"------------------------------------------------\",\r\n    ];\r\n    // \"\\x1B\" + \"\\x45\" + \"\\x4d\" + \"\\x20\" + \"\\x34\",\r\n\r\n    // return data;\r\n    return data_with_footer;\r\n  };\r\n}\r\n\r\n//Set content to print...\r\n//Create ESP/POS commands for sample label\r\nvar esc = \"\\x1B\"; //ESC byte in hex notation\r\nvar newLine = \"\\x0A\"; //LF byte in hex notation\r\n\r\nvar cmds = esc + \"@\"; //Initializes the printer (ESC @)\r\ncmds += esc + \"!\" + \"\\x38\"; //Emphasized + Double-height + Double-width mode selected (ESC ! (8 + 16 + 32)) 56 dec => 38 hex\r\ncmds += \"BEST DEAL STORES\"; //text to print\r\ncmds += newLine + newLine;\r\ncmds += esc + \"!\" + \"\\x00\"; //Character font A selected (ESC ! 0)\r\ncmds += \"COOKIES                   5.00\";\r\ncmds += newLine;\r\ncmds += \"MILK 65 Fl oz             3.78\";\r\ncmds += newLine + newLine;\r\ncmds += \"SUBTOTAL                  8.78\";\r\ncmds += newLine;\r\ncmds += \"TAX 5%                    0.44\";\r\ncmds += newLine;\r\ncmds += \"TOTAL                     9.22\";\r\ncmds += newLine;\r\ncmds += \"CASH TEND                10.00\";\r\ncmds += newLine;\r\ncmds += \"CASH DUE                  0.78\";\r\ncmds += newLine + newLine;\r\ncmds += esc + \"!\" + \"\\x18\"; //Emphasized + Double-height mode selected (ESC ! (16 + 8)) 24 dec => 18 hex\r\ncmds += \"# ITEMS SOLD 2\";\r\ncmds += esc + \"!\" + \"\\x00\"; //Character font A selected (ESC ! 0)\r\ncmds += newLine + newLine;\r\ncmds += \"11/03/13  19:53:17\";\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport qz from \"qz-tray\";\r\n\r\nimport \"../../design/main.css\";\r\nimport \"../../design/forms.css\";\r\nimport \"../../design/print_sale.css\";\r\nimport user from \"../../app_config\";\r\nimport data from \"../../components/raw_print\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewSale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      print: true,\r\n      _content: {},\r\n      active_product_qty: 0,\r\n      active_product_re_order: 0,\r\n      over_qty_error: false,\r\n      active_sale_type: \"retail\",\r\n      active_selling_unit: \"\",\r\n      active_selling_price: \"\",\r\n      products: [],\r\n      customers: [],\r\n      formData: [],\r\n      total: 0,\r\n      discount: 0,\r\n      finish_btn_disabled: false,\r\n    };\r\n    this.customers();\r\n  }\r\n\r\n  print_receipt = (v) => {\r\n    qz.websocket\r\n      .connect()\r\n      .then(() => {\r\n        return qz.printers.find(\"Generic\");\r\n      })\r\n      .then((printer) => {\r\n        console.log(printer);\r\n        let config = qz.configs.create(printer);\r\n        return qz.print(config, data.new_sale(v));\r\n      })\r\n      .then(() => {\r\n        return qz.websocket.disconnect();\r\n      })\r\n      .then(() => {\r\n        // process.exit(0);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        // process.exit(1);\r\n      });\r\n  };\r\n\r\n  //date for receipt\r\n  getDate() {\r\n    let date =\r\n      new Date(Date.now()).getDate() +\r\n      \" / \" +\r\n      (new Date(Date.now()).getMonth() + 1) +\r\n      \" / \" +\r\n      new Date(Date.now()).getFullYear();\r\n    return date;\r\n  }\r\n  //date for receipt\r\n\r\n  //customers\r\n  customers = async () => {\r\n    const res = (await UsersApi.data(\"/user/sale/customers\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        customers: res !== \"Error\" ? res : [],\r\n      });\r\n    }\r\n  };\r\n  //customers\r\n  handleSale = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.finish_btn_disabled) return;\r\n    this.setState({\r\n      ...this.state,\r\n      open: true,\r\n      messageState: \"info\",\r\n      finish_btn_disabled: true,\r\n    });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n    await this.setState({ ...this.state, _content: content });\r\n\r\n    if (this.state.formData.length !== 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        _content: {\r\n          ...this.state._content,\r\n          products_sold: this.state.formData,\r\n          date: Date.now(),\r\n          user: user.user.username,\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"No Products To Sell\",\r\n        messageState: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_sale\", this.state._content);\r\n    if (res.status === true) {\r\n      if (this.state.print) {\r\n        this.print_receipt(this.state._content);\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n        finish_btn_disabled: false,\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 700);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.over_qty_error) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"Quantity Exceeds Available\",\r\n      });\r\n      return;\r\n    }\r\n    if (!this.state.active_drug) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"No Selling Unit\",\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    _fcontent[\"batch\"] = this.state.batch ? this.state.batch : [];\r\n    const product_name = this.state.formData.find(\r\n      (e) => e.product_name === _fcontent.product_name\r\n    );\r\n    if (!product_name) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Added\",\r\n        messageState: \"success\",\r\n        formData: [...this.state.formData, _fcontent],\r\n        active_drug: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Exists\",\r\n        messageState: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDrugNameKeyUp = async (e, v) => {\r\n    const res = e.target.value\r\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\r\n      : [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  };\r\n\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleChangeDrugName = (e, v) => {\r\n    if (v) {\r\n      if (!this.IsJsonString(v.product_units)) {\r\n        this.setState({\r\n          ...this.state,\r\n          open: true,\r\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\r\n          messageState: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          active_drug: v,\r\n        },\r\n        () => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              active_selling_unit: JSON.parse(\r\n                this.state.active_drug.product_units\r\n              )[0].selling_unit,\r\n              active_selling_price: JSON.parse(\r\n                this.state.active_drug.product_units\r\n              )[0][this.state.active_sale_type],\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                active_product_re_order:\r\n                  (this.state.active_selling_unit ===\r\n                  JSON.parse(this.state.active_drug.product_units)[0]\r\n                    .selling_unit\r\n                    ? parseInt(this.state.active_drug.product_re_order)\r\n                    : parseInt(this.state.active_drug.product_re_order) /\r\n                      parseInt(\r\n                        JSON.parse(this.state.active_drug.product_units).find(\r\n                          (el) => el.selling_unit === e.target.value\r\n                        )[\"qty\"]\r\n                      )) || 0,\r\n                active_product_qty:\r\n                  this.state.active_selling_unit ===\r\n                  JSON.parse(this.state.active_drug.product_units)[0]\r\n                    .selling_unit\r\n                    ? parseInt(this.state.active_drug.product_qty)\r\n                    : parseInt(this.state.active_drug.product_qty) /\r\n                      parseInt(\r\n                        JSON.parse(this.state.active_drug.product_units).find(\r\n                          (el) => el.selling_unit === e.target.value\r\n                        )[\"qty\"]\r\n                      ),\r\n              });\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  getTotals() {\r\n    let total = 0;\r\n    if (this.state.formData.length !== 0) {\r\n      this.state.formData.forEach((e) => {\r\n        total += parseInt(e.product_price) * parseInt(e.qty);\r\n      });\r\n    }\r\n    return total;\r\n  }\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false, message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"sale\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3>Sale List</h3>\r\n                  <Button\r\n                    aria-describedby={this.id}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                    style={{ fontSize: \"17.5px\", marginRight: \"15px\" }}\r\n                  >\r\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\r\n                      <i className=\"las la-redo\"></i>\r\n                    </span>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <table width=\"100%\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td>Name</td>\r\n                        <td>Qty</td>\r\n                        <td>Unit Price(Shs)</td>\r\n                        <td>Total(Shs)</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.formData.length === 0 ? (\r\n                        <tr>\r\n                          <td>No Product Added</td>\r\n                        </tr>\r\n                      ) : (\r\n                        this.state.formData.map((v, i) => {\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.product_price}</td>\r\n                              <td>\r\n                                {parseInt(v.product_price) * parseInt(v.qty)}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    let arr = this.state.formData;\r\n                                    arr.splice(i, 1);\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      formData: arr,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </tbody>\r\n                    <thead>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total</td>\r\n                        <td>{this.getTotals()}</td>\r\n                      </tr>\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div className=\"card-header \">\r\n                    <div>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        // label=\"selling_unit\"\r\n                        style={{\r\n                          width: \"85%\",\r\n                          marginInline: \"20px\",\r\n                        }}\r\n                      >\r\n                        <InputLabel id=\"sale_type\">Sale</InputLabel>\r\n                        <Select\r\n                          inputProps={{\r\n                            name: \"sale_type\",\r\n                          }}\r\n                          label=\"Sale\"\r\n                          id=\"select_sale_type\"\r\n                          value={this.state.active_sale_type}\r\n                          onChange={(e, v) => {\r\n                            this.setState({\r\n                              ...this.state,\r\n                              active_sale_type: e.target.value,\r\n                              active_drug: null,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"retail\">Retail</MenuItem>\r\n                          <MenuItem value=\"wholesale\">Wholesale</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        aria-describedby={this.id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-plus-circle\"></i>\r\n                        </span>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Product Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <Autocomplete\r\n                              id=\"combo-box-demo\"\r\n                              options={this.state.products}\r\n                              getOptionLabel={(option) =>\r\n                                `${option.product_generic_name} ${option.product_description_name}`\r\n                              }\r\n                              onChange={this.handleChangeDrugName}\r\n                              onKeyUp={this.handleDrugNameKeyUp}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Search Product\"\r\n                                  name=\"product_name\"\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              )}\r\n                            />\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              type=\"number\"\r\n                              name=\"qty_available\"\r\n                              variant=\"outlined\"\r\n                              label=\"Available\"\r\n                              value={this.state.active_product_qty}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              helperText={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_product_re_order >=\r\n                                    this.state.active_product_qty\r\n                                    ? \"Purchase Needed For This Drug\"\r\n                                    : \"\"\r\n                                  : \"\"\r\n                              }\r\n                              error={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_product_re_order >=\r\n                                    this.state.active_product_qty\r\n                                    ? true\r\n                                    : \"\"\r\n                                  : \"\"\r\n                              }\r\n                              type=\"number\"\r\n                              name=\"qty_re_order\"\r\n                              variant=\"outlined\"\r\n                              label=\"Re-order Quantity\"\r\n                              value={this.state.active_product_re_order}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inpts_on_right\">\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"selling_unit\"\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"selling_unit\">\r\n                                Selling Unit\r\n                              </InputLabel>\r\n                              <Select\r\n                                inputProps={{\r\n                                  name: \"selling_unit\",\r\n                                }}\r\n                                label=\"Selling Unit\"\r\n                                id=\"select_selling_unit\"\r\n                                value={this.state.active_selling_unit}\r\n                                onChange={async (e, v) => {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    active_selling_price: JSON.parse(\r\n                                      this.state.active_drug.product_units\r\n                                    ).find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    )[this.state.active_sale_type],\r\n                                  });\r\n                                  this.setState(\r\n                                    {\r\n                                      ...this.state,\r\n                                      active_selling_unit: e.target.value,\r\n                                    },\r\n                                    () => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        active_product_re_order:\r\n                                          (this.state.active_selling_unit ===\r\n                                          JSON.parse(\r\n                                            this.state.active_drug.product_units\r\n                                          )[0].selling_unit\r\n                                            ? parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_re_order\r\n                                              )\r\n                                            : parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_re_order\r\n                                              ) /\r\n                                              parseInt(\r\n                                                JSON.parse(\r\n                                                  this.state.active_drug\r\n                                                    .product_units\r\n                                                ).find(\r\n                                                  (el) =>\r\n                                                    el.selling_unit ===\r\n                                                    e.target.value\r\n                                                )[\"qty\"]\r\n                                              )) || 0,\r\n                                        active_product_qty:\r\n                                          this.state.active_selling_unit ===\r\n                                          JSON.parse(\r\n                                            this.state.active_drug.product_units\r\n                                          )[0].selling_unit\r\n                                            ? parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_qty\r\n                                              )\r\n                                            : parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_qty\r\n                                              ) /\r\n                                              parseInt(\r\n                                                JSON.parse(\r\n                                                  this.state.active_drug\r\n                                                    .product_units\r\n                                                ).find(\r\n                                                  (el) =>\r\n                                                    el.selling_unit ===\r\n                                                    e.target.value\r\n                                                )[\"qty\"]\r\n                                              ),\r\n                                      });\r\n                                    }\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {this.state.active_drug ? (\r\n                                  JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  ).map((v, i) => {\r\n                                    return (\r\n                                      <MenuItem key={i} value={v.selling_unit}>\r\n                                        {v.selling_unit}\r\n                                      </MenuItem>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\r\n                                )}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              error={this.state.over_qty_error}\r\n                              type=\"number\"\r\n                              name=\"qty\"\r\n                              variant=\"outlined\"\r\n                              label=\"Quantity\"\r\n                              helperText={\r\n                                this.state.over_qty_error\r\n                                  ? \"Quantity Exceeds Available\"\r\n                                  : \"\"\r\n                              }\r\n                              defaultValue={0}\r\n                              onChange={async (e) => {\r\n                                if (\r\n                                  parseInt(e.target.value) >\r\n                                  this.state.active_product_qty\r\n                                ) {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    over_qty_error: true,\r\n                                  });\r\n                                } else {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    over_qty_error: false,\r\n                                  });\r\n                                }\r\n                              }}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_id\"\r\n                              defaultValue={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_drug.product_id\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_price\"\r\n                              defaultValue={this.state.active_selling_price}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <form\r\n                  className=\"card\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  onSubmit={this.handleSale}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">Payment</h3>\r\n                    <div className=\"\">\r\n                      <FormGroup style={{ display: \"inline\" }}>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              defaultChecked\r\n                              name=\"print_receipt\"\r\n                              onChange={() => {\r\n                                this.setState(\r\n                                  {\r\n                                    ...this.state,\r\n                                    print: !this.state.print,\r\n                                  },\r\n                                  () => {\r\n                                    console.log(this.state.print);\r\n                                  }\r\n                                );\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"Print Receipt\"\r\n                        />\r\n                      </FormGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        style={{ marginRight: 10 }}\r\n                        disabled={this.state.finish_btn_disabled}\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-print\"></i>\r\n                        </span>\r\n                        Finish Sale\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Finish\r\n                    t={this.getTotals()}\r\n                    sale_type={this.state.active_sale_type}\r\n                    customers={this.state.customers}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    hidden\r\n                    value={this.state.active_sale_type}\r\n                    name=\"sale_type\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSale;\r\n\r\nfunction Finish({ t, sale_type, customers }) {\r\n  const [discount, setDiscount] = useState(0);\r\n  return (\r\n    <div className=\"_finish_purchase_ctr\">\r\n      <TextField\r\n        name=\"total_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Total\"\r\n        value={t}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"discount\"\r\n        variant=\"outlined\"\r\n        label=\"Discount\"\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setDiscount(parseInt(e.target.value) || 0);\r\n        }}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"pay_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Amount to Be Paid\"\r\n        value={t - discount}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        label=\"customer\"\r\n        style={\r\n          sale_type === \"retail\"\r\n            ? { display: \"none\" }\r\n            : { width: \"75%\", margin: \"20px\" }\r\n        }\r\n      >\r\n        <InputLabel id=\"customer\">Customer</InputLabel>\r\n        <Select\r\n          inputProps={{ name: \"customer\" }}\r\n          label=\"customer\"\r\n          id=\"select_customer\"\r\n          defaultValue=\"\"\r\n        >\r\n          {customers.length === 0\r\n            ? \"No Customer Added\"\r\n            : customers.map((v, i) => {\r\n                return (\r\n                  <MenuItem\r\n                    value={`${v.customer_surname} ${v.customer_lastname}`}\r\n                    key={i}\r\n                  >\r\n                    {`${v.customer_surname} ${v.customer_lastname}`}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nclass AllProducts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n    };\r\n    this.products();\r\n  }\r\n\r\n  async products() {\r\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Products Available</h3>\r\n                    <TextField\r\n                      name=\"drug_name\"\r\n                      variant=\"outlined\"\r\n                      label=\"Search Product\"\r\n                      style={{\r\n                        width: \"15%\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Product Name</td>\r\n                          <td>Expiry Date</td>\r\n                          <td>Quantity</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.products.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Product Exists</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.products.map((v, i) => {\r\n                            return (\r\n                              <>\r\n                                <tr key={i}>\r\n                                  <td>{v.product_name}</td>\r\n                                  <td>{v.expiry_date}</td>\r\n                                  <td>{v.quantity}</td>\r\n                                  <td>\r\n                                    <Link\r\n                                      to={`/product?product-id=${v.product_id}`}\r\n                                    >\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                      >\r\n                                        Details\r\n                                      </Button>\r\n                                    </Link>\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllProducts;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport user from \"../../app_config\";\r\n\r\nimport \"../../design/main.css\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewPurchase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      _content: {},\r\n      active_selling_unit: \"\",\r\n      active_wholesale_price: \"\",\r\n      empty_error: false,\r\n      products: [],\r\n      suppliers: [],\r\n      formData: [],\r\n      total: 0,\r\n      discount: 0,\r\n    };\r\n    this.suppliers();\r\n  }\r\n\r\n  async suppliers() {\r\n    const res = (await UsersApi.data(\"/user/all/suppliers\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, suppliers: res === \"Error\" ? [] : res });\r\n    }\r\n  }\r\n\r\n  // async products() {\r\n  //   const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n  //   if (res) {\r\n  //     this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n  //   }\r\n  // }\r\n\r\n  handlePurchase = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n    await this.setState({ ...this.state, _content: content });\r\n\r\n    if (this.state.formData.length !== 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        _content: {\r\n          ...this.state._content,\r\n          products_purchased: this.state.formData,\r\n          date: Date.now(),\r\n          user: user.user.username,\r\n        },\r\n      });\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_purchase\", this.state._content);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    const product_name = this.state.formData.find(\r\n      (e) => e.product_name === _fcontent.product_name\r\n    );\r\n    if (\r\n      !_fcontent[\"batch_no\"] ||\r\n      !_fcontent[\"expiry_date\"] ||\r\n      !_fcontent[\"qty\"] ||\r\n      !_fcontent[\"cost_price\"]\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        empty_error: true,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"Some Fields are missing\",\r\n      });\r\n      return;\r\n    }\r\n    if (!product_name) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Added\",\r\n        messageState: \"success\",\r\n        formData: [...this.state.formData, _fcontent],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Exists\",\r\n        messageState: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDrugNameKeyUp = async (e, v) => {\r\n    const res = e.target.value\r\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\r\n      : [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  };\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleChangeDrugName = (e, v) => {\r\n    if (v) {\r\n      if (!this.IsJsonString(v.product_units)) {\r\n        this.setState({\r\n          ...this.state,\r\n          open: true,\r\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\r\n          messageState: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          active_drug: v,\r\n        },\r\n        () => {\r\n          let arr = JSON.parse(this.state.active_drug.product_units);\r\n          this.setState({\r\n            ...this.state,\r\n            active_selling_unit: arr[arr.length - 1].selling_unit,\r\n            active_retail_price: arr[arr.length - 1].retail,\r\n            active_wholesale_price: arr[arr.length - 1].wholesale,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  getTotals() {\r\n    let total = 0;\r\n    if (this.state.formData.length !== 0) {\r\n      this.state.formData.forEach((e) => {\r\n        total += parseInt(e.cost_price) * parseInt(e.qty);\r\n      });\r\n    }\r\n    return total;\r\n  }\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false, message: \"\" });\r\n    if (this.state.empty_error) {\r\n      this.setState({ ...this.state, empty_error: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"purchase\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"recent-grid-left\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3>Purchase List</h3>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: 10 }}\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\r\n                      <i className=\"las la-redo\"></i>\r\n                    </span>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"card-body tbl_ctr\">\r\n                  <table width=\"100%\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td>Name</td>\r\n                        <td>Qty</td>\r\n                        <td>Batch No.</td>\r\n                        <td>Expiry Date</td>\r\n                        <td>Cost Price(Shs)</td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.formData.length === 0 ? (\r\n                        <tr>\r\n                          <td>No Product Added</td>\r\n                        </tr>\r\n                      ) : (\r\n                        this.state.formData.map((v, i) => {\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.batch_no}</td>\r\n                              <td>{v.expiry_date}</td>\r\n                              <td>\r\n                                {parseInt(v.cost_price) * parseInt(v.qty)}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    let arr = this.state.formData;\r\n                                    arr.splice(i, 1);\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      formData: arr,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </tbody>\r\n                    <thead>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total</td>\r\n                        <td>{this.getTotals()}</td>\r\n                      </tr>\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">New Purchase</h3>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        aria-describedby={this.id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-plus-circle\"></i>\r\n                        </span>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Product Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <Autocomplete\r\n                              id=\"combo-box-demo\"\r\n                              options={this.state.products}\r\n                              getOptionLabel={(option) =>\r\n                                `${option.product_generic_name} ${option.product_description_name}`\r\n                              }\r\n                              onChange={this.handleChangeDrugName}\r\n                              onKeyUp={this.handleDrugNameKeyUp}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Search Product\"\r\n                                  name=\"product_name\"\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              )}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              name=\"batch_no\"\r\n                              variant=\"outlined\"\r\n                              label=\"Batch Number\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              type=\"date\"\r\n                              name=\"expiry_date\"\r\n                              variant=\"outlined\"\r\n                              helperText=\"Expiry Date\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"supplier\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"supplier\">Supplier</InputLabel>\r\n                              <Select\r\n                                inputProps={{ name: \"supplier\" }}\r\n                                label=\"supplier\"\r\n                                id=\"select_supplier\"\r\n                                defaultValue=\"\"\r\n                              >\r\n                                {this.state.suppliers.length === 0\r\n                                  ? \"No Supplier Added\"\r\n                                  : this.state.suppliers.map((v, i) => {\r\n                                      return (\r\n                                        <MenuItem value={v.supplier_id} key={i}>\r\n                                          {v.supplier_surname}\r\n                                        </MenuItem>\r\n                                      );\r\n                                    })}\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                          <div className=\"inpts_on_right\">\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"selling_unit\"\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"selling_unit\">\r\n                                Purchasing Unit\r\n                              </InputLabel>\r\n                              <Select\r\n                                inputProps={{\r\n                                  name: \"selling_unit\",\r\n                                }}\r\n                                label=\"Purchasing Unit\"\r\n                                id=\"select_selling_unit\"\r\n                                value={this.state.active_selling_unit}\r\n                                onChange={(e, v) => {\r\n                                  let arr = JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  );\r\n                                  this.setState({\r\n                                    ...this.state,\r\n                                    active_retail_price: arr.find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    ).retail,\r\n                                    active_wholesale_price: arr.find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    ).wholesale,\r\n                                  });\r\n                                  this.setState({\r\n                                    ...this.state,\r\n                                    active_selling_unit: e.target.value,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {this.state.active_drug ? (\r\n                                  JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  ).map((v, i) => {\r\n                                    return (\r\n                                      <MenuItem key={i} value={v.selling_unit}>\r\n                                        {v.selling_unit}\r\n                                      </MenuItem>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\r\n                                )}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              type=\"number\"\r\n                              name=\"qty\"\r\n                              variant=\"outlined\"\r\n                              label=\"Quantity\"\r\n                              defaultValue={0}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              name=\"cost_price\"\r\n                              variant=\"outlined\"\r\n                              type=\"number\"\r\n                              label=\"Unit Cost Price(Ushs)\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_id\"\r\n                              defaultValue={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_drug.product_id\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <form\r\n                  className=\"card\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  onSubmit={this.handlePurchase}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">Payment</h3>\r\n                    <div className=\"\">\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finish Purchase\r\n                        <span style={{ fontSize: \"15px\", marginLeft: \"10px\" }}>\r\n                          <i className=\"las la-angle-double-right\"></i>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Finish t={this.getTotals()} />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPurchase;\r\n\r\nfunction Finish({ t }) {\r\n  const [discount, setDiscount] = useState(0);\r\n  return (\r\n    <div className=\"_finish_purchase_ctr\">\r\n      <TextField\r\n        name=\"total_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Total\"\r\n        value={t}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"pay_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Amount to Be Paid\"\r\n        value={t - discount}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Snackbar, IconButton } from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      product: {},\r\n    };\r\n    this.product();\r\n  }\r\n\r\n  async product() {\r\n    let id = parseInt(\r\n      new URLSearchParams(window.location.search).get(\"product-id\")\r\n    );\r\n    const [res] = await UsersApi.data(`/user/all/product/${id}`);\r\n    if (res) {\r\n      this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <h3>Product Details</h3>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Print\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h3>\r\n                          Product No: {this.state.product.product_track_number}\r\n                        </h3>\r\n                        <div className=\"inputs_ctr\">\r\n                          <table width=\"100%\">\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Product Name :\r\n                                </span>\r\n                                {this.state.product.product_name}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Quantity in Stock :\r\n                                </span>\r\n                                {this.state.product.quantity}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Unit Price :\r\n                                </span>\r\n                                {\"UGX\"}\r\n                                {\"\"}\r\n                                {this.state.product.unit_price}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Cost Price :\r\n                                </span>\r\n                                {\"UGX\"} {\"\"}\r\n                                {this.state.product.cost_price}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Total Sales:\r\n                                </span>\r\n                                0\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Income:\r\n                                </span>\r\n                                UGX 0\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Total Purchases:\r\n                                </span>\r\n                                0\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Expenses:\r\n                                </span>\r\n                                UGX 0\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Date Added :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_added\r\n                                ).getDate() +\r\n                                  \"-\" +\r\n                                  (new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getMonth() +\r\n                                    1) +\r\n                                  \"-\" +\r\n                                  new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getFullYear()}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Time :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_added\r\n                                ).getHours() +\r\n                                  \":\" +\r\n                                  new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getMinutes() +\r\n                                  (new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getHours() < 12\r\n                                    ? \"AM\"\r\n                                    : \"PM\")}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Expiry Date :\r\n                                </span>\r\n                                {this.state.product.expiry_date}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Description :\r\n                                </span>\r\n                                {this.state.product.product_description}\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                        <h5>Supplier</h5>\r\n                        <div className=\"inputs_ctr\">\r\n                          <table width=\"100%\">\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Surname :\r\n                                </span>\r\n                                {this.state.product.supplier_surname}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Lastname :\r\n                                </span>\r\n                                {this.state.product.supplier_lastname}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Date Added :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_registered\r\n                                ).getDate() +\r\n                                  \"-\" +\r\n                                  (new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getMonth() +\r\n                                    1) +\r\n                                  \"-\" +\r\n                                  new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getFullYear()}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Time :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_registered\r\n                                ).getHours() +\r\n                                  \":\" +\r\n                                  new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getMinutes() +\r\n                                  (new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getHours() < 12\r\n                                    ? \"AM\"\r\n                                    : \"PM\")}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Contact :\r\n                                </span>\r\n                                {this.state.product.supplier_contact}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Location :\r\n                                </span>\r\n                                {this.state.product.supplier_location}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Address :\r\n                                </span>\r\n                                {this.state.product.supplier_address}\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      open_dialog: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      suppliers: [],\r\n      units: [],\r\n      new_unit_error: false,\r\n      empty_name_error: false,\r\n      selling_units: [],\r\n    };\r\n    this.units();\r\n  }\r\n\r\n  async units() {\r\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        selling_units: res === \"Error\" ? [] : res,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open_dialog: false });\r\n  };\r\n\r\n  handleUnit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n\r\n    if (!content[\"unit_name\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"This field is missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/admin/new_unit\", content);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    if (this.state.units.length === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"No Selling Units Registered\",\r\n        messageState: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    if (!_fcontent[\"generic_name\"] || !_fcontent[\"re_order_qty\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"These Fields are missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n    if (\r\n      !(\r\n        this.state.units[this.state.units.length - 1].selling_unit &&\r\n        this.state.units[this.state.units.length - 1].qty &&\r\n        this.state.units[this.state.units.length - 1].retail &&\r\n        this.state.units[this.state.units.length - 1].wholesale\r\n      )\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        new_unit_error: true,\r\n        open: true,\r\n        message: \"Some Fields are Missing\",\r\n        messageState: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    _fcontent[\"units\"] = this.state.units;\r\n    _fcontent[\"date\"] = Date.now();\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_product\", _fcontent);\r\n\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"info\",\r\n      empty_name_error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                          onClick={(e) => {\r\n                            this.setState({\r\n                              ...this.state,\r\n                              open_dialog: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          Add Unit\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginRight: 10 }}\r\n                          onClick={() => {\r\n                            window.location.reload();\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Medicine Entry</h4>\r\n                        <div className=\"inputs_ctr_np\">\r\n                          <div className=\"inputs_left_np\">\r\n                            <TextField\r\n                              error={this.state.empty_name_error}\r\n                              name=\"generic_name\"\r\n                              variant=\"outlined\"\r\n                              label=\"Generic Name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <TextField\r\n                                error={this.state.empty_name_error}\r\n                                type=\"number\"\r\n                                name=\"re_order_qty\"\r\n                                variant=\"outlined\"\r\n                                label=\"Re-order Qty\"\r\n                                style={{ flex: 1, marginRight: \"5px\" }}\r\n                              />\r\n                              <TextField\r\n                                value={\r\n                                  this.state.units.length > 0 &&\r\n                                  this.state.units[this.state.units.length - 1]\r\n                                    .selling_unit\r\n                                    ? this.state.units[\r\n                                        this.state.units.length - 1\r\n                                      ].selling_unit\r\n                                    : \"\"\r\n                                }\r\n                                name=\"re_order_unit\"\r\n                                variant=\"outlined\"\r\n                                label=\"Unit\"\r\n                                style={{ flex: 1, marginLeft: \"5px\" }}\r\n                              />\r\n                            </div>\r\n                            <TextField\r\n                              name=\"description\"\r\n                              variant=\"outlined\"\r\n                              label=\"Medicine Description\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inputs_right_np\">\r\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\r\n                            <div className=\"tbl_ctr_np\">\r\n                              <table width=\"100%\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <td>Selling Unit</td>\r\n                                    <td>Quantity</td>\r\n                                    <td>Retail</td>\r\n                                    <td>Wholesale</td>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {this.state.units.length === 0 ? (\r\n                                    <tr>\r\n                                      <td>No Selected Units</td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    this.state.units.map((v, i) => {\r\n                                      return (\r\n                                        <tr key={i}>\r\n                                          <td>\r\n                                            <FormControl\r\n                                              error={this.state.new_unit_error}\r\n                                              variant=\"standard\"\r\n                                              label=\"supplier\"\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            >\r\n                                              <InputLabel id=\"selling_unit\">\r\n                                                {i === 0\r\n                                                  ? `Smallest Unit`\r\n                                                  : `Unit ${i + 1}`}\r\n                                              </InputLabel>\r\n                                              <Select\r\n                                                inputProps={{\r\n                                                  name: \"selling_unit\",\r\n                                                }}\r\n                                                label={\r\n                                                  i === 0\r\n                                                    ? `Smallest Unit`\r\n                                                    : `Unit ${i + 1}`\r\n                                                }\r\n                                                id=\"select_selling_unit\"\r\n                                                defaultValue=\"\"\r\n                                                onChange={(e) => {\r\n                                                  let units_change =\r\n                                                    this.state.units;\r\n                                                  units_change[i].selling_unit =\r\n                                                    e.target.value;\r\n                                                  this.setState({\r\n                                                    ...this.state,\r\n                                                    units: units_change,\r\n                                                  });\r\n                                                }}\r\n                                              >\r\n                                                {this.state.selling_units\r\n                                                  .length === 0 ? (\r\n                                                  <MenuItem value=\"no_unit\">\r\n                                                    No Unit Added\r\n                                                  </MenuItem>\r\n                                                ) : (\r\n                                                  this.state.selling_units.map(\r\n                                                    (v, i) => {\r\n                                                      return (\r\n                                                        <MenuItem\r\n                                                          value={v.unit_name}\r\n                                                          key={i}\r\n                                                        >\r\n                                                          {v.unit_name}\r\n                                                        </MenuItem>\r\n                                                      );\r\n                                                    }\r\n                                                  )\r\n                                                )}\r\n                                              </Select>\r\n                                            </FormControl>\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              multiline={true}\r\n                                              variant=\"standard\"\r\n                                              defaultValue={i === 0 ? \"1\" : \"\"}\r\n                                              label={\r\n                                                i === 0\r\n                                                  ? `Quantity`\r\n                                                  : `Quantity In Unit ${i}`\r\n                                              }\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].qty =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Retail\"\r\n                                              error={this.state.new_unit_error}\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].retail =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Wholesale\"\r\n                                              error={this.state.new_unit_error}\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].wholesale =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <Button\r\n                                              color=\"primary\"\r\n                                              variant=\"outlined\"\r\n                                              onClick={() => {\r\n                                                let units = this.state.units;\r\n                                                units.splice(i, 1);\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units,\r\n                                                });\r\n                                              }}\r\n                                            >\r\n                                              Remove\r\n                                            </Button>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"flex-end\",\r\n                                width: \"95%\",\r\n                                margin: \"10px auto\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  if (this.state.units.length === 0) {\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      units: [...this.state.units, { qty: 1 }],\r\n                                    });\r\n                                  } else if (this.state.units.length === 1) {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      !units[0].selling_unit ||\r\n                                      !units[0].qty ||\r\n                                      !units[0].retail ||\r\n                                      !units[0].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      units[units.length - 1].selling_unit &&\r\n                                      units[units.length - 1].qty &&\r\n                                      units[units.length - 1].retail &&\r\n                                      units[units.length - 1].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are Missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    }\r\n                                  }\r\n                                }}\r\n                              >\r\n                                New Unit\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n\r\n        <Dialog\r\n          open={this.state.open_dialog}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\r\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <TextField\r\n                  error={this.state.empty_name_error}\r\n                  name=\"unit_name\"\r\n                  variant=\"standard\"\r\n                  label=\"Unit Name\"\r\n                  style={{\r\n                    width: \"85%\",\r\n                    margin: \"20px\",\r\n                  }}\r\n                />\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProduct;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass NotFound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ marginBlock: 20 }}>404</h1>\r\n        <span style={{ marginBlock: 10 }}>\r\n          This Page Was Not Found On The Server\r\n        </span>\r\n        <Link to=\"/\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginBlock: 20 }}\r\n          >\r\n            <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\r\n              <span className=\"las la-home\"></span>\r\n            </span>\r\n            Home\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"../app.css\";\r\nimport \"line-awesome/dist/line-awesome/css/line-awesome.css\";\r\nimport Dashboard from \"../Routes/dispenser/Dashboard\";\r\nimport NewSale from \"../Routes/dispenser/Newsale\";\r\nimport AllProducts from \"../Routes/dispenser/allProducts\";\r\nimport NewPurchase from \"../Routes/dispenser/new_purchase\";\r\nimport Product from \"../Routes/dispenser/product\";\r\nimport NewProduct from \"../Routes/dispenser/new-product\";\r\nimport NotFound from \"../components/404\";\r\n\r\nclass Dispenser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/new-sale\" exact component={NewSale} />\r\n            <Route path=\"/all-products\" exact component={AllProducts} />\r\n            <Route path=\"/new-purchase\" exact component={NewPurchase} />\r\n            <Route path=\"/new-product\" exact component={NewProduct} />\r\n            <Route path=\"/product\" exact component={Product} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dispenser;\r\n","// import React, { Component } from \"react\";\r\n// import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// import \"../app.css\";\r\n// import \"line-awesome/dist/line-awesome/css/line-awesome.css\";\r\n// import Dashboard from \"../Routes/dispenser/Dashboard\";\r\n// import NewSale from \"../Routes/dispenser/Newsale\";\r\n// import AllProducts from \"../Routes/dispenser/allProducts\";\r\n// import Product from \"../Routes/dispenser/product\";\r\n// import NotFound from \"../components/404\";\r\n\r\n// class Dispenser extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {};\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <BrowserRouter>\r\n//         <div>\r\n//           <Switch>\r\n//             <Route path=\"/\" exact component={Dashboard} />\r\n//             <Route path=\"/new-sale\" exact component={NewSale} />\r\n//             <Route path=\"/all-products\" exact component={AllProducts} />\r\n//             <Route path=\"/product\" exact component={Product} />\r\n//             <Route path=\"*\" component={NotFound} />\r\n//           </Switch>\r\n//         </div>\r\n//       </BrowserRouter>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Dispenser;\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Cashier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Xamuel</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cashier;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"sideBar-ctr\">\r\n          <div className=\"sidebar\">\r\n            <label htmlFor=\"nav-toggle\" className=\"close-on-sm\">\r\n              <span className=\"las la-times\"></span>\r\n            </label>\r\n            <div className=\"sidebar-brand\">\r\n              <h2>\r\n                <span\r\n                  className=\"las la-clinic-medical\"\r\n                  style={{ fontSize: \"32px\" }}\r\n                ></span>\r\n                <span>Pharmacy</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"sidebar-menu\">\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"dashboard\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-home\"></span>\r\n                      <span>Dashboard</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/new-sale\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"sale\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-user-plus\"></span>\r\n                      <span>New Sale</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/new-purchase\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"purchase\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-prescription-bottle-alt\"></span>\r\n                      <span>New Purchase</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/finance\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"finance\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-comments-dollar\"></span>\r\n                      <span>Finance</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/reports\">\r\n                    <span\r\n                      className={`${\r\n                        this.props.active === \"reports\" ? \"active\" : \"\"\r\n                      } _a_replaced`}\r\n                    >\r\n                      <span className=\"las la-comment\"></span>\r\n                      <span>Reports</span>\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"../../../assets/place-holder.jpg\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport user from \"../../../app_config\";\r\nimport { Logout } from \"../../../components/Login\";\r\nfunction Header() {\r\n  const [AnchorEl, setAnchorEl] = useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpenActions = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleCloseActions = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h2>\r\n          <label htmlFor=\"nav-toggle\">\r\n            <span className=\"las la-bars\"></span>\r\n          </label>\r\n          <span className=\"health_unit_name\">Freedom Health</span>\r\n        </h2>\r\n        {/* <div className=\"search-wrapper\">\r\n          <span className=\"las la-search\"></span>\r\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Search here\" />\r\n        </div> */}\r\n        <div className=\"\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <div className=\"\" style={{ fontSize: \"42px\", marginRight: 20 }}>\r\n            <i className=\"las la-bell\"></i>\r\n          </div>\r\n          <div\r\n            className=\"user-wrapper\"\r\n            aria-controls=\"reception-actions\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleOpenActions}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <img src={Avatar} alt=\"\" width=\"40px\" height=\"40px\" />\r\n            <div className=\"\">\r\n              <h4>{user.user.username}</h4>\r\n              <small>{user.user.user_role}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <Menu\r\n        id=\"reception-actions\"\r\n        anchorEl={AnchorEl}\r\n        keepMounted\r\n        disableScrollLock={true}\r\n        open={Boolean(AnchorEl)}\r\n        onClose={handleCloseActions}\r\n      >\r\n        <MenuItem onClick={handleCloseActions}>\r\n          <span style={{ fontSize: 24, marginRight: 10 }}>\r\n            <i className=\"las la-user-alt\"></i>\r\n          </span>\r\n          Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClickOpenDialog}>\r\n          <span style={{ fontSize: 24, marginRight: 10 }}>\r\n            <i className=\"las la-sign-out-alt\"></i>\r\n          </span>\r\n          Log out\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Log Out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Want to Log Out. Click 'Stay' to close, Log Out to Continue\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Stay\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            onClick={() => {\r\n              Logout();\r\n            }}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Helper from \"../../components/format\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      products: [],\r\n      sales_number_daily: \"...\",\r\n      sales_number_monthly: \"...\",\r\n      expiry_products: [],\r\n      less_qty_pdts: [],\r\n    };\r\n    this.products();\r\n    this.sales();\r\n    this.expiry_products();\r\n    this.less_qty();\r\n  }\r\n\r\n  expiry_products = async () => {\r\n    const res = (await UsersApi.data(\"/user/all/batch/expiry\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        expiry_products: res !== \"Error\" ? res : [],\r\n      });\r\n    }\r\n  };\r\n  less_qty = async () => {\r\n    const res = (await UsersApi.data(\"/user/all/less_qty\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        less_qty_pdts: res !== \"Error\" ? res : [],\r\n      });\r\n    }\r\n  };\r\n\r\n  async products() {\r\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  }\r\n\r\n  async sales() {\r\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\r\n    let sales_daily = 0;\r\n    let sales_monthly = 0;\r\n    res === \"Error\"\r\n      ? this.setState({\r\n          ...this.state,\r\n          sales_number_monthly: 0,\r\n          sales_number_daily: 0,\r\n        })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.sales_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            sales_daily++;\r\n          }\r\n          if (\r\n            new Date(parseInt(e.sales_date)).getMonth() ===\r\n            new Date(Date.now()).getMonth()\r\n          ) {\r\n            sales_monthly++;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      sales_number_monthly: sales_monthly,\r\n      sales_number_daily: sales_daily,\r\n    });\r\n  }\r\n\r\n  handleOpenActions = (e) => {\r\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\r\n  };\r\n  handleOpenActionsDrugs = (e) => {\r\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\r\n  };\r\n  handleCloseActions = () => {\r\n    this.setState({ ...this.state, AnchorEl: null });\r\n  };\r\n  handleCloseActionsDrugs = () => {\r\n    this.setState({ ...this.state, AnchorElDrugs: null });\r\n  };\r\n\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"cards\">\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.expiry_products.length)}</h3>\r\n                  <span>\r\n                    Medicines <br />\r\n                    <span style={{ fontSize: \"13px\" }}>\r\n                      Expire in less than 90 days\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.sales_number_monthly)}</h3>\r\n                  <span>Sales</span>\r\n                  <br />\r\n                  <span style={{ fontSize: \"13px\" }}>Made This Month</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.sales_number_daily)}</h3>\r\n                  <span>Sales</span>\r\n                  <br />\r\n                  <span style={{ fontSize: \"13px\" }}>Made Today</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h3>{Helper.format(this.state.products.length)}</h3>\r\n                  <span>Medicines</span>\r\n                  <br />\r\n                  <span style={{ fontSize: \"13px\" }}>Registered</span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Batches - Expiring In 90 Days</h3>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-controls=\"drug-actions\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={this.handleOpenActionsDrugs}\r\n                    >\r\n                      Menu\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-angle-down\"></span>\r\n                      </span>\r\n                    </Button>\r\n                    <Menu\r\n                      id=\"drug-actions\"\r\n                      anchorEl={this.state.AnchorElDrugs}\r\n                      keepMounted\r\n                      open={Boolean(this.state.AnchorElDrugs)}\r\n                      onClose={this.handleCloseActionsDrugs}\r\n                      disableScrollLock={true}\r\n                    >\r\n                      <Link to=\"/new-product\">\r\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\r\n                          New Medicine\r\n                        </MenuItem>\r\n                      </Link>\r\n                      <Link to=\"/all-products\">\r\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\r\n                          Medicines\r\n                        </MenuItem>\r\n                      </Link>\r\n                      <Link to=\"/all-batches\">\r\n                        <MenuItem onClick={this.handleCloseActionsDrugs}>\r\n                          Medicine Batches\r\n                        </MenuItem>\r\n                      </Link>\r\n                    </Menu>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Name</td>\r\n                          <td>Batch No.</td>\r\n                          <td>Quantity In Batch</td>\r\n                          <td>Expires On</td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.expiry_products.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Medicine Expires In 90 days</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.expiry_products.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td className=\"name_cell\">\r\n                                  {v.product_generic_name}\r\n                                </td>\r\n                                <td>{v.batch_no}</td>\r\n                                <td>{v.batch_qty}</td>\r\n                                <td>{v.batch_expiry_date}</td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Quantity Less Re-order Level</h3>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          window.location.reload();\r\n                        }}\r\n                        style={{ marginRight: \"15px\" }}\r\n                        className=\"small-none\"\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\r\n                        >\r\n                          <span className=\"las la-redo\"></span>\r\n                        </span>\r\n                        Refresh\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"reception-actions\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleOpenActions}\r\n                      >\r\n                        Other Menu\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\r\n                        >\r\n                          <span className=\"las la-angle-down\"></span>\r\n                        </span>\r\n                      </Button>\r\n                      <Menu\r\n                        id=\"reception-actions\"\r\n                        anchorEl={this.state.AnchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.AnchorEl)}\r\n                        onClose={this.handleCloseActions}\r\n                        disableScrollLock={true}\r\n                      >\r\n                        <Link to=\"/new-user\">\r\n                          <MenuItem onClick={this.handleCloseActions}>\r\n                            New User\r\n                          </MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/new-supplier\">\r\n                          <MenuItem onClick={this.handleCloseActions}>\r\n                            New Supplier\r\n                          </MenuItem>\r\n                        </Link>\r\n                        <Link to=\"/new-customer\">\r\n                          <MenuItem onClick={this.handleCloseActions}>\r\n                            New Customer\r\n                          </MenuItem>\r\n                        </Link>\r\n                      </Menu>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Name</td>\r\n                          <td>Re-order Level</td>\r\n                          <td>Quantity</td>\r\n                          <td>Unit</td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.less_qty_pdts.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Medicines to display</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.less_qty_pdts.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td className=\"name_cell\">\r\n                                  {`\r\n                                  ${v.product_generic_name}\r\n                                  ${v.product_description_name}\r\n                                  `}\r\n                                </td>\r\n                                <td>{v.product_re_order}</td>\r\n                                <td>{v.product_qty}</td>\r\n                                <td>\r\n                                  {this.IsJsonString(v.product_units)\r\n                                    ? JSON.parse(v.product_units)[0]\r\n                                        .selling_unit\r\n                                    : \"No Product Units\"}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      open_dialog: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      suppliers: [],\r\n      units: [],\r\n      new_unit_error: false,\r\n      empty_name_error: false,\r\n      selling_units: [],\r\n    };\r\n    this.units();\r\n  }\r\n\r\n  async units() {\r\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        selling_units: res === \"Error\" ? [] : res,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open_dialog: false });\r\n  };\r\n\r\n  handleUnit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n\r\n    if (!content[\"unit_name\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"This field is missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/admin/new_unit\", content);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    if (this.state.units.length === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"No Selling Units Registered\",\r\n        messageState: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    if (!_fcontent[\"generic_name\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"The Generic Name is missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n    if (\r\n      !(\r\n        this.state.units[this.state.units.length - 1].selling_unit &&\r\n        this.state.units[this.state.units.length - 1].qty &&\r\n        this.state.units[this.state.units.length - 1].retail &&\r\n        this.state.units[this.state.units.length - 1].wholesale\r\n      )\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        new_unit_error: true,\r\n        open: true,\r\n        message: \"Some Fields are Missing\",\r\n        messageState: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    _fcontent[\"units\"] = this.state.units;\r\n    _fcontent[\"date\"] = Date.now();\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_product\", _fcontent);\r\n\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"info\",\r\n      empty_name_error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                          onClick={(e) => {\r\n                            this.setState({\r\n                              ...this.state,\r\n                              open_dialog: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          Add Unit\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginRight: 10 }}\r\n                          onClick={() => {\r\n                            window.location.reload();\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Medicine Entry</h4>\r\n                        <div className=\"inputs_ctr_np\">\r\n                          <div className=\"inputs_left_np\">\r\n                            <TextField\r\n                              error={this.state.empty_name_error}\r\n                              name=\"generic_name\"\r\n                              variant=\"outlined\"\r\n                              label=\"Generic Name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <TextField\r\n                                error={this.state.empty_name_error}\r\n                                type=\"number\"\r\n                                name=\"re_order_qty\"\r\n                                variant=\"outlined\"\r\n                                label=\"Re-order Qty\"\r\n                                style={{ flex: 1, marginRight: \"5px\" }}\r\n                              />\r\n                              <TextField\r\n                                value={\r\n                                  this.state.units.length > 0 &&\r\n                                  this.state.units[this.state.units.length - 1]\r\n                                    .selling_unit\r\n                                    ? this.state.units[\r\n                                        this.state.units.length - 1\r\n                                      ].selling_unit\r\n                                    : \"\"\r\n                                }\r\n                                name=\"re_order_unit\"\r\n                                variant=\"outlined\"\r\n                                label=\"Unit\"\r\n                                style={{ flex: 1, marginLeft: \"5px\" }}\r\n                              />\r\n                            </div>\r\n                            <TextField\r\n                              name=\"description\"\r\n                              variant=\"outlined\"\r\n                              label=\"Medicine Description\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inputs_right_np\">\r\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\r\n                            <div className=\"tbl_ctr_np\">\r\n                              <table width=\"100%\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <td>Selling Unit</td>\r\n                                    <td>Quantity</td>\r\n                                    <td>Retail</td>\r\n                                    <td>Wholesale</td>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {this.state.units.length === 0 ? (\r\n                                    <tr>\r\n                                      <td>No Selected Units</td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    this.state.units.map((v, i) => {\r\n                                      return (\r\n                                        <tr key={i}>\r\n                                          <td>\r\n                                            <FormControl\r\n                                              error={this.state.new_unit_error}\r\n                                              variant=\"standard\"\r\n                                              label=\"selling_unit\"\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            >\r\n                                              <InputLabel id=\"selling_unit\">\r\n                                                {i === 0\r\n                                                  ? `Smallest Unit`\r\n                                                  : `Unit ${i + 1}`}\r\n                                              </InputLabel>\r\n                                              <Select\r\n                                                inputProps={{\r\n                                                  name: \"selling_unit\",\r\n                                                }}\r\n                                                label={\r\n                                                  i === 0\r\n                                                    ? `Smallest Unit`\r\n                                                    : `Unit ${i + 1}`\r\n                                                }\r\n                                                id=\"select_selling_unit\"\r\n                                                defaultValue=\"\"\r\n                                                onChange={(e) => {\r\n                                                  let units_change =\r\n                                                    this.state.units;\r\n                                                  units_change[i].selling_unit =\r\n                                                    e.target.value;\r\n                                                  this.setState({\r\n                                                    ...this.state,\r\n                                                    units: units_change,\r\n                                                  });\r\n                                                }}\r\n                                              >\r\n                                                {this.state.selling_units\r\n                                                  .length === 0 ? (\r\n                                                  <MenuItem value=\"no_unit\">\r\n                                                    No Unit Added\r\n                                                  </MenuItem>\r\n                                                ) : (\r\n                                                  this.state.selling_units.map(\r\n                                                    (v, i) => {\r\n                                                      return (\r\n                                                        <MenuItem\r\n                                                          value={v.unit_name}\r\n                                                          key={i}\r\n                                                        >\r\n                                                          {v.unit_name}\r\n                                                        </MenuItem>\r\n                                                      );\r\n                                                    }\r\n                                                  )\r\n                                                )}\r\n                                              </Select>\r\n                                            </FormControl>\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              multiline={true}\r\n                                              variant=\"standard\"\r\n                                              defaultValue={i === 0 ? \"1\" : \"\"}\r\n                                              label={\r\n                                                i === 0\r\n                                                  ? `Quantity`\r\n                                                  : `Quantity In Unit ${i}`\r\n                                              }\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].qty =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Retail\"\r\n                                              error={this.state.new_unit_error}\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].retail =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Wholesale\"\r\n                                              error={this.state.new_unit_error}\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].wholesale =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <Button\r\n                                              color=\"primary\"\r\n                                              variant=\"outlined\"\r\n                                              onClick={() => {\r\n                                                let units = this.state.units;\r\n                                                units.splice(i, 1);\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units,\r\n                                                });\r\n                                              }}\r\n                                            >\r\n                                              Remove\r\n                                            </Button>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"flex-end\",\r\n                                width: \"95%\",\r\n                                margin: \"10px auto\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  if (this.state.units.length === 0) {\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      units: [...this.state.units, { qty: 1 }],\r\n                                    });\r\n                                  } else if (this.state.units.length === 1) {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      !units[0].selling_unit ||\r\n                                      !units[0].qty ||\r\n                                      !units[0].retail ||\r\n                                      !units[0].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      units[units.length - 1].selling_unit &&\r\n                                      units[units.length - 1].qty &&\r\n                                      units[units.length - 1].retail &&\r\n                                      units[units.length - 1].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are Missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    }\r\n                                  }\r\n                                }}\r\n                              >\r\n                                New Unit\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n\r\n        <Dialog\r\n          open={this.state.open_dialog}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\r\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <TextField\r\n                  error={this.state.empty_name_error}\r\n                  name=\"unit_name\"\r\n                  variant=\"standard\"\r\n                  label=\"Unit Name\"\r\n                  style={{\r\n                    width: \"85%\",\r\n                    margin: \"20px\",\r\n                  }}\r\n                />\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProduct;\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Snackbar, Button, IconButton } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    _fcontent[\"date\"] = Date.now();\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_supplier\", _fcontent);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <h3>New Supplier</h3>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Supplier Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <TextField\r\n                              name=\"supplier_surname\"\r\n                              variant=\"outlined\"\r\n                              label=\"First name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"supplier_lastname\"\r\n                              variant=\"outlined\"\r\n                              label=\"Last name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"supplier_contact\"\r\n                              variant=\"outlined\"\r\n                              label=\"Phonenumber\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"supplier_location\"\r\n                              variant=\"outlined\"\r\n                              label=\"Location\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inpts_center\">\r\n                            <TextField\r\n                              name=\"supplier_address\"\r\n                              variant=\"outlined\"\r\n                              label=\"Address\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSupplier;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_customer\", _fcontent);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <h3>New Customer</h3>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginRight: 10 }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Customer Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <TextField\r\n                              name=\"surname\"\r\n                              variant=\"outlined\"\r\n                              label=\"Surname\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"first_name\"\r\n                              variant=\"outlined\"\r\n                              label=\"First Name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"phone_contact\"\r\n                              variant=\"outlined\"\r\n                              label=\"Phone Contact\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inpts_center\">\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"type\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"type\">\r\n                                Type Of Customer\r\n                              </InputLabel>\r\n                              <Select\r\n                                inputProps={{ name: \"type\" }}\r\n                                label=\"type\"\r\n                                id=\"select_type\"\r\n                                defaultValue=\"\"\r\n                              >\r\n                                <MenuItem value=\"Retailer\">Retailer</MenuItem>\r\n                                <MenuItem value=\"Wholesaler\">\r\n                                  Wholesaler\r\n                                </MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCustomer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass New_user extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      departments: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/admin/new_user\", _fcontent);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"users\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <h3>New User</h3>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>User Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <TextField\r\n                              name=\"surname\"\r\n                              variant=\"outlined\"\r\n                              label=\"Surname\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"first_name\"\r\n                              variant=\"outlined\"\r\n                              label=\"First Name\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              name=\"username\"\r\n                              variant=\"outlined\"\r\n                              label=\"Username\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inpts_center\">\r\n                            <TextField\r\n                              name=\"phone_contact\"\r\n                              variant=\"outlined\"\r\n                              label=\"Phone Contact\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"Role\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"role\">Role</InputLabel>\r\n                              <Select\r\n                                inputProps={{ name: \"role\" }}\r\n                                id=\"select_role\"\r\n                                label=\"Role\"\r\n                                defaultValue=\"dispenser\"\r\n                              >\r\n                                <MenuItem value=\"dispenser\">Dispenser</MenuItem>\r\n                                <MenuItem value=\"admin\">Admin</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"Gender\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"gender\">Gender</InputLabel>\r\n                              <Select\r\n                                inputProps={{ name: \"gender\" }}\r\n                                id=\"select_gender\"\r\n                                label=\"Gender\"\r\n                                defaultValue=\"M\"\r\n                              >\r\n                                <MenuItem value=\"M\">Male</MenuItem>\r\n                                <MenuItem value=\"F\">Female</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                          <div className=\"inpts_on_right\">\r\n                            <TextField\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              variant=\"outlined\"\r\n                              label=\"Password\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              type=\"password\"\r\n                              name=\"confirm_password\"\r\n                              variant=\"outlined\"\r\n                              label=\"Confirm Password\"\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default New_user;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport qz from \"qz-tray\";\r\n\r\nimport \"../../design/main.css\";\r\nimport \"../../design/forms.css\";\r\nimport \"../../design/print_sale.css\";\r\nimport user from \"../../app_config\";\r\nimport data from \"../../components/raw_print\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewSale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      print: true,\r\n      _content: {},\r\n      active_product_qty: 0,\r\n      active_product_re_order: 0,\r\n      over_qty_error: false,\r\n      active_sale_type: \"retail\",\r\n      active_selling_unit: \"\",\r\n      active_selling_price: \"\",\r\n      products: [],\r\n      customers: [],\r\n      formData: [],\r\n      total: 0,\r\n      discount: 0,\r\n      finish_btn_disabled: false,\r\n    };\r\n    this.customers();\r\n  }\r\n\r\n  print_receipt = (v) => {\r\n    qz.websocket\r\n      .connect()\r\n      .then(() => {\r\n        return qz.printers.find(\"Generic\");\r\n      })\r\n      .then((printer) => {\r\n        console.log(printer);\r\n        let config = qz.configs.create(printer);\r\n        return qz.print(config, data.new_sale(v));\r\n      })\r\n      .then(() => {\r\n        return qz.websocket.disconnect();\r\n      })\r\n      .then(() => {\r\n        // process.exit(0);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        // process.exit(1);\r\n      });\r\n  };\r\n\r\n  //date for receipt\r\n  getDate() {\r\n    let date =\r\n      new Date(Date.now()).getDate() +\r\n      \" / \" +\r\n      (new Date(Date.now()).getMonth() + 1) +\r\n      \" / \" +\r\n      new Date(Date.now()).getFullYear();\r\n    return date;\r\n  }\r\n  //date for receipt\r\n\r\n  //customers\r\n  customers = async () => {\r\n    const res = (await UsersApi.data(\"/user/sale/customers\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        customers: res !== \"Error\" ? res : [],\r\n      });\r\n    }\r\n  };\r\n  //customers\r\n  handleSale = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.finish_btn_disabled) return;\r\n    this.setState({\r\n      ...this.state,\r\n      open: true,\r\n      messageState: \"info\",\r\n      finish_btn_disabled: true,\r\n    });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n    await this.setState({ ...this.state, _content: content });\r\n\r\n    if (this.state.formData.length !== 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        _content: {\r\n          ...this.state._content,\r\n          products_sold: this.state.formData,\r\n          date: Date.now(),\r\n          user: user.user.username,\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"No Products To Sell\",\r\n        messageState: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_sale\", this.state._content);\r\n    if (res.status === true) {\r\n      if (this.state.print) {\r\n        this.print_receipt(this.state._content);\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n        finish_btn_disabled: false,\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 700);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.over_qty_error) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"Quantity Exceeds Available\",\r\n      });\r\n      return;\r\n    }\r\n    if (!this.state.active_drug) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"No Selling Unit\",\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    _fcontent[\"batch\"] = this.state.batch ? this.state.batch : [];\r\n    const product_name = this.state.formData.find(\r\n      (e) => e.product_name === _fcontent.product_name\r\n    );\r\n    if (!product_name) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Added\",\r\n        messageState: \"success\",\r\n        formData: [...this.state.formData, _fcontent],\r\n        active_drug: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Exists\",\r\n        messageState: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDrugNameKeyUp = async (e, v) => {\r\n    const res = e.target.value\r\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\r\n      : [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  };\r\n\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleChangeDrugName = (e, v) => {\r\n    if (v) {\r\n      if (!this.IsJsonString(v.product_units)) {\r\n        this.setState({\r\n          ...this.state,\r\n          open: true,\r\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\r\n          messageState: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          active_drug: v,\r\n        },\r\n        () => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              active_selling_unit: JSON.parse(\r\n                this.state.active_drug.product_units\r\n              )[0].selling_unit,\r\n              active_selling_price: JSON.parse(\r\n                this.state.active_drug.product_units\r\n              )[0][this.state.active_sale_type],\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                active_product_re_order:\r\n                  (this.state.active_selling_unit ===\r\n                  JSON.parse(this.state.active_drug.product_units)[0]\r\n                    .selling_unit\r\n                    ? parseInt(this.state.active_drug.product_re_order)\r\n                    : parseInt(this.state.active_drug.product_re_order) /\r\n                      parseInt(\r\n                        JSON.parse(this.state.active_drug.product_units).find(\r\n                          (el) => el.selling_unit === e.target.value\r\n                        )[\"qty\"]\r\n                      )) || 0,\r\n                active_product_qty:\r\n                  this.state.active_selling_unit ===\r\n                  JSON.parse(this.state.active_drug.product_units)[0]\r\n                    .selling_unit\r\n                    ? parseInt(this.state.active_drug.product_qty)\r\n                    : parseInt(this.state.active_drug.product_qty) /\r\n                      parseInt(\r\n                        JSON.parse(this.state.active_drug.product_units).find(\r\n                          (el) => el.selling_unit === e.target.value\r\n                        )[\"qty\"]\r\n                      ),\r\n              });\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  getTotals() {\r\n    let total = 0;\r\n    if (this.state.formData.length !== 0) {\r\n      this.state.formData.forEach((e) => {\r\n        total += parseInt(e.product_price) * parseInt(e.qty);\r\n      });\r\n    }\r\n    return total;\r\n  }\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false, message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"sale\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3>Sale List</h3>\r\n                  <Button\r\n                    aria-describedby={this.id}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                    style={{ fontSize: \"17.5px\", marginRight: \"15px\" }}\r\n                  >\r\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\r\n                      <i className=\"las la-redo\"></i>\r\n                    </span>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <table width=\"100%\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td>Name</td>\r\n                        <td>Qty</td>\r\n                        <td>Unit Price(Shs)</td>\r\n                        <td>Total(Shs)</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.formData.length === 0 ? (\r\n                        <tr>\r\n                          <td>No Product Added</td>\r\n                        </tr>\r\n                      ) : (\r\n                        this.state.formData.map((v, i) => {\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.product_price}</td>\r\n                              <td>\r\n                                {parseInt(v.product_price) * parseInt(v.qty)}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    let arr = this.state.formData;\r\n                                    arr.splice(i, 1);\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      formData: arr,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </tbody>\r\n                    <thead>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total</td>\r\n                        <td>{this.getTotals()}</td>\r\n                      </tr>\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div className=\"card-header \">\r\n                    <div>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        // label=\"selling_unit\"\r\n                        style={{\r\n                          width: \"85%\",\r\n                          marginInline: \"20px\",\r\n                        }}\r\n                      >\r\n                        <InputLabel id=\"sale_type\">Sale</InputLabel>\r\n                        <Select\r\n                          inputProps={{\r\n                            name: \"sale_type\",\r\n                          }}\r\n                          label=\"Sale\"\r\n                          id=\"select_sale_type\"\r\n                          value={this.state.active_sale_type}\r\n                          onChange={(e, v) => {\r\n                            this.setState({\r\n                              ...this.state,\r\n                              active_sale_type: e.target.value,\r\n                              active_drug: null,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"retail\">Retail</MenuItem>\r\n                          <MenuItem value=\"wholesale\">Wholesale</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        aria-describedby={this.id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-plus-circle\"></i>\r\n                        </span>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Product Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <Autocomplete\r\n                              id=\"combo-box-demo\"\r\n                              options={this.state.products}\r\n                              getOptionLabel={(option) =>\r\n                                `${option.product_generic_name} ${option.product_description_name}`\r\n                              }\r\n                              onChange={this.handleChangeDrugName}\r\n                              onKeyUp={this.handleDrugNameKeyUp}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Search Product\"\r\n                                  name=\"product_name\"\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              )}\r\n                            />\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              type=\"number\"\r\n                              name=\"qty_available\"\r\n                              variant=\"outlined\"\r\n                              label=\"Available\"\r\n                              value={this.state.active_product_qty}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              helperText={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_product_re_order >=\r\n                                    this.state.active_product_qty\r\n                                    ? \"Purchase Needed For This Drug\"\r\n                                    : \"\"\r\n                                  : \"\"\r\n                              }\r\n                              error={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_product_re_order >=\r\n                                    this.state.active_product_qty\r\n                                    ? true\r\n                                    : \"\"\r\n                                  : \"\"\r\n                              }\r\n                              type=\"number\"\r\n                              name=\"qty_re_order\"\r\n                              variant=\"outlined\"\r\n                              label=\"Re-order Quantity\"\r\n                              value={this.state.active_product_re_order}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inpts_on_right\">\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"selling_unit\"\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"selling_unit\">\r\n                                Selling Unit\r\n                              </InputLabel>\r\n                              <Select\r\n                                inputProps={{\r\n                                  name: \"selling_unit\",\r\n                                }}\r\n                                label=\"Selling Unit\"\r\n                                id=\"select_selling_unit\"\r\n                                value={this.state.active_selling_unit}\r\n                                onChange={async (e, v) => {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    active_selling_price: JSON.parse(\r\n                                      this.state.active_drug.product_units\r\n                                    ).find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    )[this.state.active_sale_type],\r\n                                  });\r\n                                  this.setState(\r\n                                    {\r\n                                      ...this.state,\r\n                                      active_selling_unit: e.target.value,\r\n                                    },\r\n                                    () => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        active_product_re_order:\r\n                                          (this.state.active_selling_unit ===\r\n                                          JSON.parse(\r\n                                            this.state.active_drug.product_units\r\n                                          )[0].selling_unit\r\n                                            ? parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_re_order\r\n                                              )\r\n                                            : parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_re_order\r\n                                              ) /\r\n                                              parseInt(\r\n                                                JSON.parse(\r\n                                                  this.state.active_drug\r\n                                                    .product_units\r\n                                                ).find(\r\n                                                  (el) =>\r\n                                                    el.selling_unit ===\r\n                                                    e.target.value\r\n                                                )[\"qty\"]\r\n                                              )) || 0,\r\n                                        active_product_qty:\r\n                                          this.state.active_selling_unit ===\r\n                                          JSON.parse(\r\n                                            this.state.active_drug.product_units\r\n                                          )[0].selling_unit\r\n                                            ? parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_qty\r\n                                              )\r\n                                            : parseInt(\r\n                                                this.state.active_drug\r\n                                                  .product_qty\r\n                                              ) /\r\n                                              parseInt(\r\n                                                JSON.parse(\r\n                                                  this.state.active_drug\r\n                                                    .product_units\r\n                                                ).find(\r\n                                                  (el) =>\r\n                                                    el.selling_unit ===\r\n                                                    e.target.value\r\n                                                )[\"qty\"]\r\n                                              ),\r\n                                      });\r\n                                    }\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {this.state.active_drug ? (\r\n                                  JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  ).map((v, i) => {\r\n                                    return (\r\n                                      <MenuItem key={i} value={v.selling_unit}>\r\n                                        {v.selling_unit}\r\n                                      </MenuItem>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\r\n                                )}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              error={this.state.over_qty_error}\r\n                              type=\"number\"\r\n                              name=\"qty\"\r\n                              variant=\"outlined\"\r\n                              label=\"Quantity\"\r\n                              helperText={\r\n                                this.state.over_qty_error\r\n                                  ? \"Quantity Exceeds Available\"\r\n                                  : \"\"\r\n                              }\r\n                              defaultValue={0}\r\n                              onChange={async (e) => {\r\n                                if (\r\n                                  parseInt(e.target.value) >\r\n                                  this.state.active_product_qty\r\n                                ) {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    over_qty_error: true,\r\n                                  });\r\n                                } else {\r\n                                  await this.setState({\r\n                                    ...this.state,\r\n                                    over_qty_error: false,\r\n                                  });\r\n                                }\r\n                              }}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_id\"\r\n                              defaultValue={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_drug.product_id\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_price\"\r\n                              defaultValue={this.state.active_selling_price}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <form\r\n                  className=\"card\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  onSubmit={this.handleSale}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">Payment</h3>\r\n                    <div className=\"\">\r\n                      <FormGroup style={{ display: \"inline\" }}>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              defaultChecked\r\n                              name=\"print_receipt\"\r\n                              onChange={() => {\r\n                                this.setState(\r\n                                  {\r\n                                    ...this.state,\r\n                                    print: !this.state.print,\r\n                                  },\r\n                                  () => {\r\n                                    console.log(this.state.print);\r\n                                  }\r\n                                );\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"Print Receipt\"\r\n                        />\r\n                      </FormGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        style={{ marginRight: 10 }}\r\n                        disabled={this.state.finish_btn_disabled}\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-print\"></i>\r\n                        </span>\r\n                        Finish Sale\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Finish\r\n                    t={this.getTotals()}\r\n                    sale_type={this.state.active_sale_type}\r\n                    customers={this.state.customers}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    hidden\r\n                    value={this.state.active_sale_type}\r\n                    name=\"sale_type\"\r\n                    onChange={() => {}}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSale;\r\n\r\nfunction Finish({ t, sale_type, customers }) {\r\n  const [discount, setDiscount] = useState(0);\r\n  return (\r\n    <div className=\"_finish_purchase_ctr\">\r\n      <TextField\r\n        name=\"total_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Total\"\r\n        value={t}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"discount\"\r\n        variant=\"outlined\"\r\n        label=\"Discount\"\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setDiscount(parseInt(e.target.value) || 0);\r\n        }}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"pay_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Amount to Be Paid\"\r\n        value={t - discount}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <FormControl\r\n        variant=\"outlined\"\r\n        label=\"customer\"\r\n        style={\r\n          sale_type === \"retail\"\r\n            ? { display: \"none\" }\r\n            : { width: \"75%\", margin: \"20px\" }\r\n        }\r\n      >\r\n        <InputLabel id=\"customer\">Customer</InputLabel>\r\n        <Select\r\n          inputProps={{ name: \"customer\" }}\r\n          label=\"customer\"\r\n          id=\"select_customer\"\r\n          defaultValue=\"\"\r\n        >\r\n          {customers.length === 0\r\n            ? \"No Customer Added\"\r\n            : customers.map((v, i) => {\r\n                return (\r\n                  <MenuItem\r\n                    value={`${v.customer_surname} ${v.customer_lastname}`}\r\n                    key={i}\r\n                  >\r\n                    {`${v.customer_surname} ${v.customer_lastname}`}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Snackbar,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass AllProducts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      products: [],\r\n      loading: true,\r\n      open: false,\r\n      open_del: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n    };\r\n    this.products();\r\n  }\r\n\r\n  handleOpenActions = (e) => {\r\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\r\n  };\r\n  handleOpenActionsDrugs = (e) => {\r\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\r\n  };\r\n  handleCloseActions = () => {\r\n    this.setState({ ...this.state, AnchorEl: null });\r\n  };\r\n  handleCloseActionsDrugs = () => {\r\n    this.setState({ ...this.state, AnchorElDrugs: null });\r\n  };\r\n\r\n  async products() {\r\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false,\r\n        products: res === \"Error\" ? [] : res,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  handleDelete = async () => {\r\n    this.setState({ ...this.state, open_del: true, messageState: \"info\" });\r\n    const res = await UsersApi.data(\r\n      `/user/all/delete/${this.state.product_id}`\r\n    );\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      open_del: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"info\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <TextField\r\n                      className=\"text_field_all_products\"\r\n                      name=\"drug_name\"\r\n                      variant=\"outlined\"\r\n                      label=\"Product Name\"\r\n                      style={{ width: \"15%\" }}\r\n                      onKeyUp={async (e) => {\r\n                        const res = e.target.value\r\n                          ? (await UsersApi.data(\r\n                              `/user/sale/products/${e.target.value}`\r\n                            )) || []\r\n                          : [];\r\n                        if (res) {\r\n                          this.setState({\r\n                            ...this.state,\r\n                            loader: false,\r\n                            products: res === \"Error\" ? [] : res,\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Product Generic Name</td>\r\n                          <td>Product Description</td>\r\n                          <td>Quantity</td>\r\n                          <td></td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.products.length === 0 ? (\r\n                          this.state.loading ? (\r\n                            <tr>\r\n                              <td>\r\n                                <CircularProgress size={25} />\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <tr>\r\n                              <td>No Product Exists</td>\r\n                            </tr>\r\n                          )\r\n                        ) : (\r\n                          this.state.products.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{v.product_generic_name}</td>\r\n                                <td>{v.product_description_name}</td>\r\n                                <td>{v.product_qty}</td>\r\n                                <td>\r\n                                  <Link\r\n                                    to={`/edit-product?product-id=${v.product_id}`}\r\n                                  >\r\n                                    <Button variant=\"contained\" color=\"primary\">\r\n                                      Edit\r\n                                    </Button>\r\n                                  </Link>\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ color: \"red\" }}\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open: true,\r\n                                        product_id: v.product_id,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        {this.state.product_id ? (\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Want to Delete Product?\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                This will delete all Batches. Press OK and Continue. This\r\n                process is Irreversible\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.handleDelete} color=\"primary\">\r\n                OK\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllProducts;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport user from \"../../app_config\";\r\n\r\nimport \"../../design/main.css\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass NewPurchase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      _content: {},\r\n      active_selling_unit: \"\",\r\n      active_wholesale_price: \"\",\r\n      empty_error: false,\r\n      products: [],\r\n      suppliers: [],\r\n      formData: [],\r\n      total: 0,\r\n      discount: 0,\r\n    };\r\n    this.suppliers();\r\n  }\r\n\r\n  async suppliers() {\r\n    const res = (await UsersApi.data(\"/user/all/suppliers\")) || [];\r\n    if (res) {\r\n      this.setState({ ...this.state, suppliers: res === \"Error\" ? [] : res });\r\n    }\r\n  }\r\n\r\n  // async products() {\r\n  //   const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n  //   if (res) {\r\n  //     this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n  //   }\r\n  // }\r\n\r\n  handlePurchase = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n    await this.setState({ ...this.state, _content: content });\r\n\r\n    if (this.state.formData.length !== 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        _content: {\r\n          ...this.state._content,\r\n          products_purchased: this.state.formData,\r\n          date: Date.now(),\r\n          user: user.user.username,\r\n        },\r\n      });\r\n    }\r\n\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/sale/new_purchase\", this.state._content);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    const product_name = this.state.formData.find(\r\n      (e) => e.product_name === _fcontent.product_name\r\n    );\r\n    if (\r\n      !_fcontent[\"batch_no\"] ||\r\n      !_fcontent[\"expiry_date\"] ||\r\n      !_fcontent[\"qty\"] ||\r\n      !_fcontent[\"cost_price\"]\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        empty_error: true,\r\n        open: true,\r\n        messageState: \"error\",\r\n        message: \"Some Fields are missing\",\r\n      });\r\n      return;\r\n    }\r\n    if (!product_name) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Added\",\r\n        messageState: \"success\",\r\n        formData: [...this.state.formData, _fcontent],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"Product Exists\",\r\n        messageState: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDrugNameKeyUp = async (e, v) => {\r\n    const res = e.target.value\r\n      ? (await UsersApi.data(`/user/sale/products/${e.target.value}`)) || []\r\n      : [];\r\n    if (res) {\r\n      this.setState({ ...this.state, products: res === \"Error\" ? [] : res });\r\n    }\r\n  };\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleChangeDrugName = (e, v) => {\r\n    if (v) {\r\n      if (!this.IsJsonString(v.product_units)) {\r\n        this.setState({\r\n          ...this.state,\r\n          open: true,\r\n          message: \"This Product has no Selling Units, Edit It to make a sale\",\r\n          messageState: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          active_drug: v,\r\n        },\r\n        () => {\r\n          let arr = JSON.parse(this.state.active_drug.product_units);\r\n          this.setState({\r\n            ...this.state,\r\n            active_selling_unit: arr[arr.length - 1].selling_unit,\r\n            active_retail_price: arr[arr.length - 1].retail,\r\n            active_wholesale_price: arr[arr.length - 1].wholesale,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  getTotals() {\r\n    let total = 0;\r\n    if (this.state.formData.length !== 0) {\r\n      this.state.formData.forEach((e) => {\r\n        total += parseInt(e.cost_price) * parseInt(e.qty);\r\n      });\r\n    }\r\n    return total;\r\n  }\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ ...this.state, open: false, message: \"\" });\r\n    if (this.state.empty_error) {\r\n      this.setState({ ...this.state, empty_error: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"purchase\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"recent-grid-left\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3>Purchase List</h3>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: 10 }}\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}>\r\n                      <i className=\"las la-redo\"></i>\r\n                    </span>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"card-body tbl_ctr\">\r\n                  <table width=\"100%\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td>Name</td>\r\n                        <td>Qty</td>\r\n                        <td>Batch No.</td>\r\n                        <td>Expiry Date</td>\r\n                        <td>Cost Price(Shs)</td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.formData.length === 0 ? (\r\n                        <tr>\r\n                          <td>No Product Added</td>\r\n                        </tr>\r\n                      ) : (\r\n                        this.state.formData.map((v, i) => {\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.batch_no}</td>\r\n                              <td>{v.expiry_date}</td>\r\n                              <td>\r\n                                {parseInt(v.cost_price) * parseInt(v.qty)}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    let arr = this.state.formData;\r\n                                    arr.splice(i, 1);\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      formData: arr,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </tbody>\r\n                    <thead>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>Total</td>\r\n                        <td>{this.getTotals()}</td>\r\n                      </tr>\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">New Purchase</h3>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        aria-describedby={this.id}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginRight: \"10px\" }}\r\n                        >\r\n                          <i className=\"las la-plus-circle\"></i>\r\n                        </span>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <h4>Product Details</h4>\r\n                        <div className=\"inputs_ctr\">\r\n                          <div className=\"inpts_on_left\">\r\n                            <Autocomplete\r\n                              id=\"combo-box-demo\"\r\n                              options={this.state.products}\r\n                              getOptionLabel={(option) =>\r\n                                `${option.product_generic_name} ${option.product_description_name}`\r\n                              }\r\n                              onChange={this.handleChangeDrugName}\r\n                              onKeyUp={this.handleDrugNameKeyUp}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Search Product\"\r\n                                  name=\"product_name\"\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              )}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              name=\"batch_no\"\r\n                              variant=\"outlined\"\r\n                              label=\"Batch Number\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              type=\"date\"\r\n                              name=\"expiry_date\"\r\n                              variant=\"outlined\"\r\n                              helperText=\"Expiry Date\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"supplier\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"supplier\">Supplier</InputLabel>\r\n                              <Select\r\n                                inputProps={{ name: \"supplier\" }}\r\n                                label=\"supplier\"\r\n                                id=\"select_supplier\"\r\n                                defaultValue=\"\"\r\n                              >\r\n                                {this.state.suppliers.length === 0\r\n                                  ? \"No Supplier Added\"\r\n                                  : this.state.suppliers.map((v, i) => {\r\n                                      return (\r\n                                        <MenuItem value={v.supplier_id} key={i}>\r\n                                          {v.supplier_surname}\r\n                                        </MenuItem>\r\n                                      );\r\n                                    })}\r\n                              </Select>\r\n                            </FormControl>\r\n                          </div>\r\n                          <div className=\"inpts_on_right\">\r\n                            <FormControl\r\n                              variant=\"outlined\"\r\n                              label=\"selling_unit\"\r\n                              disabled={this.state.active_drug ? false : true}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <InputLabel id=\"selling_unit\">\r\n                                Purchasing Unit\r\n                              </InputLabel>\r\n                              <Select\r\n                                inputProps={{\r\n                                  name: \"selling_unit\",\r\n                                }}\r\n                                label=\"Purchasing Unit\"\r\n                                id=\"select_selling_unit\"\r\n                                value={this.state.active_selling_unit}\r\n                                onChange={(e, v) => {\r\n                                  let arr = JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  );\r\n                                  this.setState({\r\n                                    ...this.state,\r\n                                    active_retail_price: arr.find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    ).retail,\r\n                                    active_wholesale_price: arr.find(\r\n                                      (el) => el.selling_unit === e.target.value\r\n                                    ).wholesale,\r\n                                  });\r\n                                  this.setState({\r\n                                    ...this.state,\r\n                                    active_selling_unit: e.target.value,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {this.state.active_drug ? (\r\n                                  JSON.parse(\r\n                                    this.state.active_drug.product_units\r\n                                  ).map((v, i) => {\r\n                                    return (\r\n                                      <MenuItem key={i} value={v.selling_unit}>\r\n                                        {v.selling_unit}\r\n                                      </MenuItem>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <MenuItem value=\"\">No Selling Units</MenuItem>\r\n                                )}\r\n                              </Select>\r\n                            </FormControl>\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              type=\"number\"\r\n                              name=\"qty\"\r\n                              variant=\"outlined\"\r\n                              label=\"Quantity\"\r\n                              defaultValue={0}\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              error={this.state.empty_error}\r\n                              name=\"cost_price\"\r\n                              variant=\"outlined\"\r\n                              type=\"number\"\r\n                              label=\"Unit Cost Price(Ushs)\"\r\n                              style={{\r\n                                width: \"85%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <input\r\n                              hidden\r\n                              type=\"text\"\r\n                              name=\"product_id\"\r\n                              defaultValue={\r\n                                this.state.active_drug\r\n                                  ? this.state.active_drug.product_id\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <form\r\n                  className=\"card\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  onSubmit={this.handlePurchase}\r\n                >\r\n                  <div className=\"card-header card-header-payments\">\r\n                    <h3 className=\"class_payment_header\">Payment</h3>\r\n                    <div className=\"\">\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finish Purchase\r\n                        <span style={{ fontSize: \"15px\", marginLeft: \"10px\" }}>\r\n                          <i className=\"las la-angle-double-right\"></i>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Finish t={this.getTotals()} />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPurchase;\r\n\r\nfunction Finish({ t }) {\r\n  const [discount, setDiscount] = useState(0);\r\n  return (\r\n    <div className=\"_finish_purchase_ctr\">\r\n      <TextField\r\n        name=\"total_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Total\"\r\n        value={t}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n      <TextField\r\n        name=\"pay_amount\"\r\n        variant=\"outlined\"\r\n        label=\"Amount to Be Paid\"\r\n        value={t - discount}\r\n        style={{\r\n          width: \"75%\",\r\n          margin: \"20px\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Snackbar, IconButton } from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      product: {},\r\n    };\r\n    this.product();\r\n  }\r\n\r\n  async product() {\r\n    let id = parseInt(\r\n      new URLSearchParams(window.location.search).get(\"product-id\")\r\n    );\r\n    const [res] = await UsersApi.data(`/user/all/product/${id}`);\r\n    if (res) {\r\n      this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <h3>Product Details</h3>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginInline: 10 }}\r\n                        >\r\n                          Print\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <div className=\"inputs_ctr\">\r\n                          <table width=\"100%\">\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Product Name :\r\n                                </span>\r\n                                {this.state.product.product_name}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Quantity in Stock :\r\n                                </span>\r\n                                {this.state.product.quantity}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Unit Price :\r\n                                </span>\r\n                                {\"UGX\"}\r\n                                {\"\"}\r\n                                {this.state.product.unit_price}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Cost Price :\r\n                                </span>\r\n                                {\"UGX\"} {\"\"}\r\n                                {this.state.product.cost_price}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Date Added :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_added\r\n                                ).getDate() +\r\n                                  \"-\" +\r\n                                  (new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getMonth() +\r\n                                    1) +\r\n                                  \"-\" +\r\n                                  new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getFullYear()}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Time :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_added\r\n                                ).getHours() +\r\n                                  \":\" +\r\n                                  new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getMinutes() +\r\n                                  (new Date(\r\n                                    this.state.product.date_added\r\n                                  ).getHours() < 12\r\n                                    ? \"AM\"\r\n                                    : \"PM\")}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Expiry Date :\r\n                                </span>\r\n                                {this.state.product.expiry_date}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Description :\r\n                                </span>\r\n                                {this.state.product.product_description}\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                        <h5>Supplier</h5>\r\n                        <div className=\"inputs_ctr\">\r\n                          <table width=\"100%\">\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Surname :\r\n                                </span>\r\n                                {this.state.product.supplier_surname}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Lastname :\r\n                                </span>\r\n                                {this.state.product.supplier_lastname}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Date Added :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_registered\r\n                                ).getDate() +\r\n                                  \"-\" +\r\n                                  (new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getMonth() +\r\n                                    1) +\r\n                                  \"-\" +\r\n                                  new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getFullYear()}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Time :\r\n                                </span>\r\n                                {new Date(\r\n                                  this.state.product.date_registered\r\n                                ).getHours() +\r\n                                  \":\" +\r\n                                  new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getMinutes() +\r\n                                  (new Date(\r\n                                    this.state.product.date_registered\r\n                                  ).getHours() < 12\r\n                                    ? \"AM\"\r\n                                    : \"PM\")}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Contact :\r\n                                </span>\r\n                                {this.state.product.supplier_contact}\r\n                              </td>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Location :\r\n                                </span>\r\n                                {this.state.product.supplier_location}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <span style={{ fontWeight: \"bolder\" }}>\r\n                                  Address :\r\n                                </span>\r\n                                {this.state.product.supplier_address}\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","// import React, { Component } from \"react\";\r\n// import {\r\n//   TextField,\r\n//   Snackbar,\r\n//   Button,\r\n//   IconButton,\r\n//   Select,\r\n//   InputLabel,\r\n//   FormControl,\r\n//   MenuItem,\r\n// } from \"@material-ui/core\";\r\n// import MuiAlert from \"@material-ui/lab/Alert\";\r\n// import Nav from \"./components/Nav\";\r\n// import Header from \"./components/Header\";\r\n// import FormsApi from \"../../api/forms\";\r\n// import UsersApi from \"../../api/users\";\r\n// import \"../../design/forms.css\";\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\n// class EditProduct extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       open: false,\r\n//       message: \"Please Wait...\",\r\n//       messageState: \"\",\r\n//       product: {},\r\n//       units: [],\r\n//       new_unit_error: false,\r\n//       selling_units: [],\r\n//     };\r\n//     this.product();\r\n//   }\r\n\r\n//   async product() {\r\n//     let id = parseInt(\r\n//       new URLSearchParams(window.location.search).get(\"product-id\")\r\n//     );\r\n//     const [res] = await UsersApi.data(`/user/all/product/${id}`);\r\n//     if (res) {\r\n//       this.setState({ ...this.state, product: res === \"Error\" ? {} : res });\r\n//     }\r\n//   }\r\n\r\n//   handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n//     const fd = new FormData(e.target);\r\n//     let _fcontent = {};\r\n//     fd.forEach((value, key) => {\r\n//       _fcontent[key] = value;\r\n//     });\r\n//     let id = parseInt(\r\n//       new URLSearchParams(window.location.search).get(\"product-id\")\r\n//     );\r\n//     _fcontent[\"units\"] = this.state.units;\r\n//     let api = new FormsApi();\r\n//     let res = await api.post(`/user/sale/edit_product/${id}`, _fcontent);\r\n//     if (res.status === true) {\r\n//       this.setState({\r\n//         ...this.state,\r\n//         message: res.data,\r\n//         messageState: \"success\",\r\n//       });\r\n//       setTimeout(() => {\r\n//         window.location.reload();\r\n//       }, 200);\r\n//     } else {\r\n//       this.setState({\r\n//         ...this.state,\r\n//         message: res.data,\r\n//         messageState: \"error\",\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   closePopUp = (event, reason) => {\r\n//     if (reason === \"clickaway\") {\r\n//       return;\r\n//     }\r\n//     this.setState({ ...this.state, open: false });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Snackbar\r\n//           anchorOrigin={{\r\n//             vertical: \"top\",\r\n//             horizontal: \"center\",\r\n//           }}\r\n//           open={this.state.open}\r\n//           autoHideDuration={5000}\r\n//           onClose={this.closePopUp}\r\n//           action={\r\n//             <React.Fragment>\r\n//               <IconButton\r\n//                 size=\"small\"\r\n//                 aria-label=\"close\"\r\n//                 color=\"inherit\"\r\n//                 onClick={this.closePopUp}\r\n//               >\r\n//                 <i className=\"las la-times\"></i>\r\n//               </IconButton>\r\n//             </React.Fragment>\r\n//           }\r\n//         >\r\n//           <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n//             {this.state.message}\r\n//           </Alert>\r\n//         </Snackbar>\r\n//         <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n//         <Nav active=\"dashboard\" />\r\n//         <div className=\"main-content\">\r\n//           <Header />\r\n//           <main>\r\n//             <div className=\"fullwidth-ctr\">\r\n//               <div className=\"projects\">\r\n//                 <form\r\n//                   className=\"card\"\r\n//                   autoComplete=\"off\"\r\n//                   onSubmit={this.handleSubmit}\r\n//                 >\r\n//                   <div\r\n//                     className=\"\"\r\n//                     style={{\r\n//                       borderBottom: \"1px solid #f0f0f0\",\r\n//                       padding: \"1rem\",\r\n//                     }}\r\n//                   >\r\n//                     <div className=\"form-header-ctr\">\r\n//                       <div className=\"\">\r\n//                         <h3>Edit Product</h3>\r\n//                       </div>\r\n//                       <div className=\"\">\r\n//                         <Button\r\n//                           aria-describedby={this.id}\r\n//                           variant=\"contained\"\r\n//                           color=\"primary\"\r\n//                           style={{ marginInline: 10 }}\r\n//                           onClick={() => {\r\n//                             window.location.reload();\r\n//                           }}\r\n//                         >\r\n//                           Cancel\r\n//                         </Button>\r\n//                         <Button\r\n//                           type=\"submit\"\r\n//                           aria-describedby={this.id}\r\n//                           variant=\"contained\"\r\n//                           color=\"primary\"\r\n//                           style={{ marginInline: 10 }}\r\n//                         >\r\n//                           Save\r\n//                         </Button>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"card-body\">\r\n//                     <div>\r\n//                       <div className=\"inputCtr\">\r\n//                         <h4>Medicine Entry</h4>\r\n//                         <div className=\"inputs_ctr_np\">\r\n//                           <div className=\"inputs_left_np\">\r\n//                             <TextField\r\n//                               name=\"generic_name\"\r\n//                               variant=\"outlined\"\r\n//                               helperText=\"Generic Name\"\r\n//                               value={this.state.product.product_generic_name}\r\n//                               style={{\r\n//                                 width: \"75%\",\r\n//                                 margin: \"20px\",\r\n//                               }}\r\n//                               onChange={(e) => {\r\n//                                 this.setState({\r\n//                                   ...this.state,\r\n//                                   product: {\r\n//                                     ...this.state.product,\r\n//                                     product_generic_name: e.target.value,\r\n//                                   },\r\n//                                 });\r\n//                               }}\r\n//                             />\r\n//                             <TextField\r\n//                               name=\"description\"\r\n//                               variant=\"outlined\"\r\n//                               helperText=\"Medicine Description\"\r\n//                               value={\r\n//                                 this.state.product.product_description_name\r\n//                               }\r\n//                               style={{\r\n//                                 width: \"75%\",\r\n//                                 margin: \"20px\",\r\n//                               }}\r\n//                               onChange={(e) => {\r\n//                                 this.setState({\r\n//                                   ...this.state,\r\n//                                   product: {\r\n//                                     ...this.state.product,\r\n//                                     product_description: e.target.value,\r\n//                                   },\r\n//                                 });\r\n//                               }}\r\n//                             />\r\n//                           </div>\r\n//                           <div className=\"inputs_right_np\">\r\n//                             <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\r\n//                             <div className=\"tbl_ctr_np\">\r\n//                               <table width=\"100%\">\r\n//                                 <thead>\r\n//                                   <tr>\r\n//                                     <td>Selling Unit</td>\r\n//                                     <td>Quantity</td>\r\n//                                     <td>Retail</td>\r\n//                                     <td>Wholesale</td>\r\n//                                   </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                   {this.state.units.length === 0 ? (\r\n//                                     <tr>\r\n//                                       <td>No Selected Units</td>\r\n//                                     </tr>\r\n//                                   ) : (\r\n//                                     this.state.units.map((v, i) => {\r\n//                                       return (\r\n//                                         <tr key={i}>\r\n//                                           <td>\r\n//                                             <FormControl\r\n//                                               error={this.state.new_unit_error}\r\n//                                               variant=\"standard\"\r\n//                                               label=\"supplier\"\r\n//                                               style={{\r\n//                                                 width: \"95%\",\r\n//                                               }}\r\n//                                             >\r\n//                                               <InputLabel id=\"selling_unit\">\r\n//                                                 {i === 0\r\n//                                                   ? `Smallest Unit`\r\n//                                                   : `Unit ${i + 1}`}\r\n//                                               </InputLabel>\r\n//                                               <Select\r\n//                                                 inputProps={{\r\n//                                                   name: \"selling_unit\",\r\n//                                                 }}\r\n//                                                 label={\r\n//                                                   i === 0\r\n//                                                     ? `Smallest Unit`\r\n//                                                     : `Unit ${i + 1}`\r\n//                                                 }\r\n//                                                 id=\"select_selling_unit\"\r\n//                                                 defaultValue=\"\"\r\n//                                                 onChange={(e) => {\r\n//                                                   let units_change =\r\n//                                                     this.state.units;\r\n//                                                   units_change[i].selling_unit =\r\n//                                                     e.target.value;\r\n//                                                   this.setState({\r\n//                                                     ...this.state,\r\n//                                                     units: units_change,\r\n//                                                   });\r\n//                                                 }}\r\n//                                               >\r\n//                                                 {this.state.selling_units\r\n//                                                   .length === 0\r\n//                                                   ? \"No Unit Added\"\r\n//                                                   : this.state.selling_units.map(\r\n//                                                       (v, i) => {\r\n//                                                         return (\r\n//                                                           <>\r\n//                                                             <MenuItem\r\n//                                                               value={\r\n//                                                                 v.unit_name\r\n//                                                               }\r\n//                                                               key={i}\r\n//                                                             >\r\n//                                                               {v.unit_name}\r\n//                                                             </MenuItem>\r\n//                                                           </>\r\n//                                                         );\r\n//                                                       }\r\n//                                                     )}\r\n//                                               </Select>\r\n//                                             </FormControl>\r\n//                                           </td>\r\n//                                           <td>\r\n//                                             <TextField\r\n//                                               multiline={true}\r\n//                                               variant=\"standard\"\r\n//                                               defaultValue={i === 0 ? \"1\" : \"\"}\r\n//                                               label={\r\n//                                                 i === 0\r\n//                                                   ? `Quantity`\r\n//                                                   : `Quantity In Unit ${i}`\r\n//                                               }\r\n//                                               onChange={(e) => {\r\n//                                                 let units_change =\r\n//                                                   this.state.units;\r\n//                                                 units_change[i].qty =\r\n//                                                   e.target.value;\r\n//                                                 this.setState({\r\n//                                                   ...this.state,\r\n//                                                   units: units_change,\r\n//                                                 });\r\n//                                               }}\r\n//                                               style={{\r\n//                                                 width: \"95%\",\r\n//                                               }}\r\n//                                             />\r\n//                                           </td>\r\n//                                           <td>\r\n//                                             <TextField\r\n//                                               variant=\"standard\"\r\n//                                               label=\"Retail\"\r\n//                                               error={this.state.new_unit_error}\r\n//                                               onChange={(e) => {\r\n//                                                 let units_change =\r\n//                                                   this.state.units;\r\n//                                                 units_change[i].retail =\r\n//                                                   e.target.value;\r\n//                                                 this.setState({\r\n//                                                   ...this.state,\r\n//                                                   units: units_change,\r\n//                                                 });\r\n//                                               }}\r\n//                                               style={{\r\n//                                                 width: \"95%\",\r\n//                                               }}\r\n//                                             />\r\n//                                           </td>\r\n//                                           <td>\r\n//                                             <TextField\r\n//                                               variant=\"standard\"\r\n//                                               label=\"Wholesale\"\r\n//                                               error={this.state.new_unit_error}\r\n//                                               onChange={(e) => {\r\n//                                                 let units_change =\r\n//                                                   this.state.units;\r\n//                                                 units_change[i].wholesale =\r\n//                                                   e.target.value;\r\n//                                                 this.setState({\r\n//                                                   ...this.state,\r\n//                                                   units: units_change,\r\n//                                                 });\r\n//                                               }}\r\n//                                               style={{\r\n//                                                 width: \"95%\",\r\n//                                               }}\r\n//                                             />\r\n//                                           </td>\r\n//                                         </tr>\r\n//                                       );\r\n//                                     })\r\n//                                   )}\r\n//                                 </tbody>\r\n//                               </table>\r\n//                             </div>\r\n//                             <div\r\n//                               className=\"\"\r\n//                               style={{\r\n//                                 display: \"flex\",\r\n//                                 justifyContent: \"flex-end\",\r\n//                                 width: \"95%\",\r\n//                                 margin: \"10px auto\",\r\n//                               }}\r\n//                             >\r\n//                               <Button\r\n//                                 variant=\"contained\"\r\n//                                 color=\"primary\"\r\n//                                 onClick={() => {\r\n//                                   if (this.state.units.length === 0) {\r\n//                                     this.setState({\r\n//                                       ...this.state,\r\n//                                       units: [...this.state.units, { qty: 1 }],\r\n//                                     });\r\n//                                   } else if (this.state.units.length === 1) {\r\n//                                     let units = this.state.units;\r\n//                                     if (\r\n//                                       !units[0].selling_unit ||\r\n//                                       !units[0].qty ||\r\n//                                       !units[0].retail ||\r\n//                                       !units[0].wholesale\r\n//                                     ) {\r\n//                                       this.setState({\r\n//                                         ...this.state,\r\n//                                         new_unit_error: true,\r\n//                                         open: true,\r\n//                                         message: \"Some Fields are missing\",\r\n//                                         messageState: \"error\",\r\n//                                       });\r\n//                                     } else {\r\n//                                       this.setState({\r\n//                                         ...this.state,\r\n//                                         units: [...this.state.units, {}],\r\n//                                         new_unit_error: false,\r\n//                                       });\r\n//                                     }\r\n//                                   } else {\r\n//                                     let units = this.state.units;\r\n//                                     if (\r\n//                                       units[units.length - 1].selling_unit &&\r\n//                                       units[units.length - 1].qty &&\r\n//                                       units[units.length - 1].retail &&\r\n//                                       units[units.length - 1].wholesale\r\n//                                     ) {\r\n//                                       if (\r\n//                                         parseInt(units[units.length - 1].qty) *\r\n//                                           parseInt(\r\n//                                             units[units.length - 2].retail\r\n//                                           ) ===\r\n//                                           parseInt(\r\n//                                             units[units.length - 1].retail\r\n//                                           ) ||\r\n//                                         parseInt(units[units.length - 1].qty) *\r\n//                                           parseInt(\r\n//                                             units[units.length - 2].wholesale\r\n//                                           ) ===\r\n//                                           parseInt(\r\n//                                             units[units.length - 1].wholesale\r\n//                                           )\r\n//                                       ) {\r\n//                                         this.setState({\r\n//                                           ...this.state,\r\n//                                           units: [...this.state.units, {}],\r\n//                                           new_unit_error: false,\r\n//                                         });\r\n//                                       } else {\r\n//                                         this.setState({\r\n//                                           ...this.state,\r\n//                                           new_unit_error: true,\r\n//                                           open: true,\r\n//                                           message: \"Unit Prices Mismatch\",\r\n//                                           messageState: \"error\",\r\n//                                         });\r\n//                                       }\r\n//                                     } else {\r\n//                                       this.setState({\r\n//                                         ...this.state,\r\n//                                         new_unit_error: true,\r\n//                                         open: true,\r\n//                                         message: \"Some Fields are Missing\",\r\n//                                         messageState: \"error\",\r\n//                                       });\r\n//                                     }\r\n//                                   }\r\n//                                 }}\r\n//                               >\r\n//                                 New Unit\r\n//                               </Button>\r\n//                             </div>\r\n//                           </div>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </form>\r\n//               </div>\r\n//             </div>\r\n//           </main>\r\n//         </div>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default EditProduct;\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Snackbar,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport FormsApi from \"../../api/forms\";\r\nimport UsersApi from \"../../api/users\";\r\nimport \"../../design/forms.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass EditProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      open_dialog: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      suppliers: [],\r\n      units: [],\r\n      new_unit_error: false,\r\n      empty_name_error: false,\r\n      selling_units: [],\r\n      product: {},\r\n      re_order: 0,\r\n    };\r\n    this.units();\r\n  }\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open_dialog: false });\r\n  };\r\n\r\n  handleUnit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let content = {};\r\n    fd.forEach((value, key) => {\r\n      content[key] = value;\r\n    });\r\n    if (!content[\"unit_name\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"This field is missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n    let api = new FormsApi();\r\n    let res = await api.post(\"/user/admin/new_unit\", content);\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n  async units() {\r\n    const res = (await UsersApi.data(\"/user/all/units\")) || [];\r\n    if (res) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          selling_units: res === \"Error\" ? [] : res,\r\n        },\r\n        () => {\r\n          this.product();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  //if json string\r\n  IsJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  //if json string\r\n\r\n  async product() {\r\n    let id = parseInt(\r\n      new URLSearchParams(window.location.search).get(\"product-id\")\r\n    );\r\n    const product = await UsersApi.data(`/user/all/product/${id}`);\r\n    if (product) {\r\n      if (product !== \"Error\") {\r\n        const res = product[0];\r\n        console.log(res);\r\n        this.setState({ ...this.state, product: res });\r\n        const units = this.IsJsonString(res.product_units)\r\n          ? JSON.parse(res.product_units)\r\n          : [];\r\n        const re_order =\r\n          units.length === 0\r\n            ? 0\r\n            : (parseInt(res.product_re_order) || 0) /\r\n                parseInt(units[units.length - 1].qty) || 0;\r\n        let units_arr = [];\r\n        for (let i = 0; i < units.length; i++) {\r\n          let unit = units[i];\r\n          if (unit.qty && unit.selling_unit) {\r\n            if (i === 0) {\r\n              units_arr.push(unit);\r\n            } else {\r\n              unit.qty =\r\n                parseInt(units[i].qty) / parseInt(units_arr[i - 1].qty);\r\n              units_arr.push(unit);\r\n            }\r\n          }\r\n        }\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            units: units_arr,\r\n            re_order,\r\n          },\r\n          () => {\r\n            console.log(this.state);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ...this.state, open: true, messageState: \"info\" });\r\n    const fd = new FormData(e.target);\r\n    let _fcontent = {};\r\n    fd.forEach((value, key) => {\r\n      _fcontent[key] = value;\r\n    });\r\n    if (this.state.units.length === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"No Selling Units Registered\",\r\n        messageState: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    if (!_fcontent[\"generic_name\"] || !_fcontent[\"re_order_qty\"]) {\r\n      this.setState({\r\n        ...this.state,\r\n        open: true,\r\n        message: \"These fields are missing\",\r\n        messageState: \"error\",\r\n        empty_name_error: true,\r\n      });\r\n      return;\r\n    }\r\n    let id = parseInt(\r\n      new URLSearchParams(window.location.search).get(\"product-id\")\r\n    );\r\n    _fcontent[\"units\"] = this.state.units;\r\n    let api = new FormsApi();\r\n    let res = await api.post(`/user/sale/edit_product/${id}`, _fcontent);\r\n\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      open: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"info\",\r\n      empty_name_error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <form\r\n                  className=\"card\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <div\r\n                    className=\"\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #f0f0f0\",\r\n                      padding: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <div className=\"form-header-ctr\">\r\n                      <div className=\"\">\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={(e) => {\r\n                            this.setState({\r\n                              ...this.state,\r\n                              open_dialog: true,\r\n                            });\r\n                          }}\r\n                        >\r\n                          Add Unit\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          aria-describedby={this.id}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ marginLeft: 10 }}\r\n                        >\r\n                          Finish &amp; Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div>\r\n                      <div className=\"inputCtr\">\r\n                        <div className=\"inputs_ctr_np\">\r\n                          <div className=\"inputs_left_np\">\r\n                            <TextField\r\n                              error={this.state.empty_name_error}\r\n                              name=\"generic_name\"\r\n                              variant=\"outlined\"\r\n                              label=\"Generic Name\"\r\n                              value={\r\n                                this.state.product.product_generic_name\r\n                                  ? this.state.product.product_generic_name\r\n                                  : \"\"\r\n                              }\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  ...this.state,\r\n                                  product: {\r\n                                    ...this.state.product,\r\n                                    product_generic_name: e.target.value,\r\n                                  },\r\n                                });\r\n                              }}\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            >\r\n                              <TextField\r\n                                error={this.state.empty_name_error}\r\n                                value={this.state.re_order}\r\n                                type=\"number\"\r\n                                name=\"re_order_qty\"\r\n                                variant=\"outlined\"\r\n                                label=\"Re-order Qty\"\r\n                                style={{ flex: 1, marginRight: \"5px\" }}\r\n                                onChange={(e) => {\r\n                                  this.setState({\r\n                                    ...this.state,\r\n                                    re_order: e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <TextField\r\n                                value={\r\n                                  this.state.units.length > 0 &&\r\n                                  this.state.units[this.state.units.length - 1]\r\n                                    .selling_unit\r\n                                    ? this.state.units[\r\n                                        this.state.units.length - 1\r\n                                      ].selling_unit\r\n                                    : \"\"\r\n                                }\r\n                                name=\"re_order_unit\"\r\n                                variant=\"outlined\"\r\n                                label=\"Unit\"\r\n                                style={{ flex: 1, marginLeft: \"5px\" }}\r\n                              />\r\n                            </div>\r\n                            <TextField\r\n                              error={this.state.empty_name_error}\r\n                              name=\"description\"\r\n                              variant=\"outlined\"\r\n                              label=\"Medicine Description\"\r\n                              value={\r\n                                this.state.product.product_description_name\r\n                                  ? this.state.product.product_description_name\r\n                                  : \" \"\r\n                              }\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  ...this.state,\r\n                                  product: {\r\n                                    ...this.state.product,\r\n                                    product_description_name: e.target.value,\r\n                                  },\r\n                                });\r\n                              }}\r\n                              style={{\r\n                                width: \"75%\",\r\n                                margin: \"20px\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"inputs_right_np\">\r\n                            <h4 style={{ margin: \"20px\" }}>Selling Units</h4>\r\n                            <div className=\"tbl_ctr_np\">\r\n                              <table width=\"100%\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <td>Selling Unit</td>\r\n                                    <td>Quantity</td>\r\n                                    <td>Retail</td>\r\n                                    <td>Wholesale</td>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {this.state.units.length === 0 ? (\r\n                                    <tr>\r\n                                      <td>No Selected Units</td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    this.state.units.map((v, i) => {\r\n                                      return (\r\n                                        <tr key={i}>\r\n                                          <td>\r\n                                            <FormControl\r\n                                              error={this.state.new_unit_error}\r\n                                              variant=\"standard\"\r\n                                              label=\"supplier\"\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            >\r\n                                              <InputLabel id=\"selling_unit\">\r\n                                                {i === 0\r\n                                                  ? `Smallest Unit`\r\n                                                  : `Unit ${i + 1}`}\r\n                                              </InputLabel>\r\n                                              <Select\r\n                                                inputProps={{\r\n                                                  name: \"selling_unit\",\r\n                                                }}\r\n                                                label={\r\n                                                  i === 0\r\n                                                    ? `Smallest Unit`\r\n                                                    : `Unit ${i + 1}`\r\n                                                }\r\n                                                id=\"select_selling_unit\"\r\n                                                value={\r\n                                                  this.state.units[i]\r\n                                                    .selling_unit\r\n                                                }\r\n                                                onChange={(e) => {\r\n                                                  let units_change =\r\n                                                    this.state.units;\r\n                                                  units_change[i].selling_unit =\r\n                                                    e.target.value;\r\n                                                  this.setState({\r\n                                                    ...this.state,\r\n                                                    units: units_change,\r\n                                                  });\r\n                                                }}\r\n                                              >\r\n                                                {this.state.selling_units\r\n                                                  .length === 0\r\n                                                  ? \"No Unit Added\"\r\n                                                  : this.state.selling_units.map(\r\n                                                      (v, i) => {\r\n                                                        return (\r\n                                                          <MenuItem\r\n                                                            value={v.unit_name}\r\n                                                            key={i}\r\n                                                          >\r\n                                                            {v.unit_name}\r\n                                                          </MenuItem>\r\n                                                        );\r\n                                                      }\r\n                                                    )}\r\n                                              </Select>\r\n                                            </FormControl>\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              multiline={true}\r\n                                              variant=\"standard\"\r\n                                              value={\r\n                                                i === 0\r\n                                                  ? \"1\"\r\n                                                  : this.state.units[i].qty\r\n                                              }\r\n                                              label={\r\n                                                i === 0\r\n                                                  ? `Quantity`\r\n                                                  : `Quantity In Unit ${i}`\r\n                                              }\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].qty =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Retail\"\r\n                                              error={this.state.new_unit_error}\r\n                                              value={this.state.units[i].retail}\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].retail =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <TextField\r\n                                              variant=\"standard\"\r\n                                              label=\"Wholesale\"\r\n                                              error={this.state.new_unit_error}\r\n                                              value={\r\n                                                this.state.units[i].wholesale\r\n                                              }\r\n                                              onChange={(e) => {\r\n                                                let units_change =\r\n                                                  this.state.units;\r\n                                                units_change[i].wholesale =\r\n                                                  e.target.value;\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units: units_change,\r\n                                                });\r\n                                              }}\r\n                                              style={{\r\n                                                width: \"95%\",\r\n                                              }}\r\n                                            />\r\n                                          </td>\r\n                                          <td>\r\n                                            <Button\r\n                                              color=\"primary\"\r\n                                              variant=\"outlined\"\r\n                                              onClick={() => {\r\n                                                let units = this.state.units;\r\n                                                units.splice(i, 1);\r\n                                                this.setState({\r\n                                                  ...this.state,\r\n                                                  units,\r\n                                                });\r\n                                              }}\r\n                                            >\r\n                                              Remove\r\n                                            </Button>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                            <div\r\n                              className=\"\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"flex-end\",\r\n                                width: \"95%\",\r\n                                margin: \"10px auto\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  if (this.state.units.length === 0) {\r\n                                    this.setState({\r\n                                      ...this.state,\r\n                                      units: [...this.state.units, { qty: 1 }],\r\n                                    });\r\n                                  } else if (this.state.units.length === 1) {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      !units[0].selling_unit ||\r\n                                      !units[0].qty ||\r\n                                      !units[0].retail ||\r\n                                      !units[0].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    let units = this.state.units;\r\n                                    if (\r\n                                      units[units.length - 1].selling_unit &&\r\n                                      units[units.length - 1].qty &&\r\n                                      units[units.length - 1].retail &&\r\n                                      units[units.length - 1].wholesale\r\n                                    ) {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        units: [...this.state.units, {}],\r\n                                        new_unit_error: false,\r\n                                      });\r\n                                    } else {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        new_unit_error: true,\r\n                                        open: true,\r\n                                        message: \"Some Fields are Missing\",\r\n                                        messageState: \"error\",\r\n                                      });\r\n                                    }\r\n                                  }\r\n                                }}\r\n                              >\r\n                                New Unit\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n\r\n        <Dialog\r\n          open={this.state.open_dialog}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Selling Unit</DialogTitle>\r\n          <form onSubmit={this.handleUnit} autoComplete=\"off\">\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <TextField\r\n                  error={this.state.empty_name_error}\r\n                  name=\"unit_name\"\r\n                  variant=\"standard\"\r\n                  label=\"Unit Name\"\r\n                  style={{\r\n                    width: \"85%\",\r\n                    margin: \"20px\",\r\n                  }}\r\n                />\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProduct;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Helper from \"../../components/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass Finance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      open: false,\r\n      open_purchase: false,\r\n      open_sale: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      income: 0,\r\n      today_income: 0,\r\n      expenses: 0,\r\n      today_expense: 0,\r\n      sales: [],\r\n      purchases: [],\r\n      print_sale: false,\r\n    };\r\n    this.income();\r\n    this.expenses();\r\n  }\r\n\r\n  handlePurchaseClose = () => {\r\n    this.setState({ ...this.state, open_purchase: false });\r\n  };\r\n  handleSaleClose = () => {\r\n    this.setState({ ...this.state, open_sale: false });\r\n  };\r\n\r\n  async income() {\r\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\r\n    let total = 0;\r\n    let today_income = 0;\r\n    let today_sales = [];\r\n    res === \"Error\"\r\n      ? this.setState({ ...this.state, income: 0, sales: [] })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.sales_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            today_income += e.amount_paid;\r\n            today_sales.push(e);\r\n          }\r\n          if (\r\n            new Date(parseInt(e.sales_date)).getMonth() ===\r\n            new Date(Date.now()).getMonth()\r\n          ) {\r\n            total += e.amount_paid;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      today_income: today_income,\r\n      income: total,\r\n      sales: today_sales,\r\n    });\r\n  }\r\n\r\n  async expenses() {\r\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\r\n    let total = 0;\r\n    let today_expense = 0;\r\n    let today_purchases = [];\r\n    res === \"Error\"\r\n      ? this.setState({ ...this.state, expenses: 0, purchases: [] })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.purchase_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            today_expense += e.purchase_amount;\r\n            today_purchases.push(e);\r\n          }\r\n          if (\r\n            new Date(parseInt(e.purchase_date)).getMonth() ===\r\n            new Date(Date.now()).getMonth()\r\n          ) {\r\n            total += e.purchase_amount;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      today_expense: today_expense,\r\n      expenses: total,\r\n      purchases: today_purchases,\r\n    });\r\n  }\r\n\r\n  handleOpenActions = (e) => {\r\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\r\n  };\r\n  handleOpenActionsDrugs = (e) => {\r\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\r\n  };\r\n  handleCloseActions = () => {\r\n    this.setState({ ...this.state, AnchorEl: null });\r\n  };\r\n  handleCloseActionsDrugs = () => {\r\n    this.setState({ ...this.state, AnchorElDrugs: null, print_sale: true });\r\n  };\r\n\r\n  getNameSpaces(n, i) {\r\n    let name = n.split(\" \")[0];\r\n    let name_formatted;\r\n    if (name.length === i) {\r\n      name_formatted = name + \" \";\r\n    }\r\n    if (name.length > i) {\r\n      name_formatted = name.substring(0, i) + \" \";\r\n    }\r\n    if (name.length < i) {\r\n      name_formatted = name;\r\n      let spaces = i - name.length;\r\n      for (let i = 0; i < spaces; i++) {\r\n        name_formatted = name_formatted + \" \";\r\n      }\r\n    }\r\n    return name_formatted;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"finance\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"cards\">\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h4>UGX {Helper.format(this.state.today_income)}</h4>\r\n                  <span>\r\n                    Sales <br />\r\n                    <span style={{ fontSize: \"13px\" }}>Today</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h4>UGX {Helper.format(this.state.today_expense)}</h4>\r\n                  <span>\r\n                    Purchases <br />\r\n                    <span style={{ fontSize: \"13px\" }}>Today</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h4>UGX {Helper.format(this.state.expenses)}</h4>\r\n                  <span>\r\n                    Purchases <br />\r\n                    <span style={{ fontSize: \"13px\" }}>This Month</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-single\">\r\n                <div className=\"\">\r\n                  <h4>UGX {Helper.format(this.state.income)}</h4>\r\n                  <span>\r\n                    Sales <br />\r\n                    <span style={{ fontSize: \"13px\" }}>This Month</span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"\">\r\n                  <span className=\"las la-users\"> </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Sales Today</h3>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"drug-actions\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleOpenActionsDrugs}\r\n                      >\r\n                        Menu\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\r\n                        >\r\n                          <span className=\"las la-angle-down\"></span>\r\n                        </span>\r\n                      </Button>\r\n                      <Menu\r\n                        id=\"drug-actions\"\r\n                        anchorEl={this.state.AnchorElDrugs}\r\n                        keepMounted\r\n                        open={Boolean(this.state.AnchorElDrugs)}\r\n                        onClose={this.handleCloseActionsDrugs}\r\n                        disableScrollLock={true}\r\n                      >\r\n                        <Link to=\"/all-sales\">\r\n                          <MenuItem onClick={this.handleCloseActionsDrugs}>\r\n                            See Monthly\r\n                          </MenuItem>\r\n                        </Link>\r\n                      </Menu>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Products</td>\r\n                          <td>Total</td>\r\n                          <td>Paid</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.sales.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Sale Made Today</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.sales.map((v, i) => {\r\n                            let products = \"\";\r\n                            let sold = JSON.parse(v.products_sold);\r\n                            sold.forEach((p) => {\r\n                              if (sold.length > 1) {\r\n                                if (sold.indexOf(p) === sold.length - 1) {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\r\n                                } else {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(\r\n                                      p.product_name,\r\n                                      10\r\n                                    )}` +\r\n                                    \",\";\r\n                                }\r\n                              } else {\r\n                                products =\r\n                                  products +\r\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\r\n                              }\r\n                            });\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{products}</td>\r\n                                <td>{v.sales_amount}</td>\r\n                                <td>{v.amount_paid}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open_sale: true,\r\n                                        dialog_data: v,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Details\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Purchases Today</h3>\r\n                    <div className=\"\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"reception-actions\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleOpenActions}\r\n                      >\r\n                        Menu\r\n                        <span\r\n                          style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}\r\n                        >\r\n                          <span className=\"las la-angle-down\"></span>\r\n                        </span>\r\n                      </Button>\r\n                      <Menu\r\n                        id=\"reception-actions\"\r\n                        anchorEl={this.state.AnchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.AnchorEl)}\r\n                        onClose={this.handleCloseActions}\r\n                        disableScrollLock={true}\r\n                      >\r\n                        <Link to=\"/all-purchases\">\r\n                          <MenuItem onClick={this.handleCloseActions}>\r\n                            See Monthly\r\n                          </MenuItem>\r\n                        </Link>\r\n                      </Menu>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Products</td>\r\n                          <td>Total</td>\r\n                          <td>Paid</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.purchases.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Purchase Made Today</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.purchases.map((v, i) => {\r\n                            let products = \"\";\r\n                            let sold = JSON.parse(v.products_purchased);\r\n                            sold.forEach((p) => {\r\n                              if (sold.length > 1) {\r\n                                if (sold.indexOf(p) === sold.length - 1) {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\r\n                                } else {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(\r\n                                      p.product_name,\r\n                                      10\r\n                                    )}` +\r\n                                    \",\";\r\n                                }\r\n                              } else {\r\n                                products =\r\n                                  products +\r\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\r\n                              }\r\n                            });\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{products}</td>\r\n                                <td>{v.purchase_t_amount}</td>\r\n                                <td>{v.purchase_amount}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open_purchase: true,\r\n                                        dialog_purchase_data: v,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Details\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n\r\n        {/* Sale Dialog */}\r\n        {this.state.dialog_data ? (\r\n          <Dialog\r\n            open={this.state.open_sale}\r\n            onClose={this.handleSaleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <table width=\"100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Product</td>\r\n                      <td>Qty</td>\r\n                      <td>Selling Unit</td>\r\n                      <td>Amount</td>\r\n                      <td>Sale Type</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\r\n                      (v, i) => {\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td className=\"name_cell\">{v.product_name}</td>\r\n                            <td>{v.qty}</td>\r\n                            <td>{v.selling_unit}</td>\r\n                            <td>{v.product_price}</td>\r\n                            <td>{v.sale_type}</td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className=\"\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Discount: UGX  ${this.state.dialog_data.sales_discount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Amount Paid: UGX ${this.state.dialog_data.amount_paid}`}\r\n                      </td>\r\n                    </tr>\r\n                    {`Made By: ${this.state.dialog_data.sale_made_by}`}\r\n                  </table>\r\n                </div>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleSaleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {/* Purchase Dialog */}\r\n        {this.state.dialog_purchase_data ? (\r\n          <Dialog\r\n            open={this.state.open_purchase}\r\n            onClose={this.handlePurchaseClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Purchase Details</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <table width=\"100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Product</td>\r\n                      <td>Qty</td>\r\n                      <td>Selling Unit</td>\r\n                      <td>Amount</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {JSON.parse(\r\n                      this.state.dialog_purchase_data.products_purchased\r\n                    ).map((v, i) => {\r\n                      return (\r\n                        <>\r\n                          <tr key={i}>\r\n                            <td className=\"name_cell\">{v.product_name}</td>\r\n                            <td>{v.qty}</td>\r\n                            <td>{v.selling_unit}</td>\r\n                            <td>{v.cost_price}</td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className=\"\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        {`Total Amount: UGX ${this.state.dialog_purchase_data.purchase_t_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Discount: UGX ${this.state.dialog_purchase_data.purchase_discount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Amount Paid: UGX ${this.state.dialog_purchase_data.purchase_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      {`Made By: ${this.state.dialog_purchase_data.purchase_made_by}`}\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handlePurchaseClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Finance;\r\n","import React, { Component } from \"react\";\r\n// import { Button } from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\nimport Helper from \"../../components/format\";\r\n\r\nclass Reports extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      daily: {\r\n        date: \"...\",\r\n        daily_purchases: 0,\r\n        daily_expenses: 0,\r\n        daily_products: 0,\r\n        daily_income: 0,\r\n        daily_sales: 0,\r\n      },\r\n      monthly: {\r\n        month: \"...\",\r\n        monthly_products: 0,\r\n        monthly_purchases: 0,\r\n        monthly_expenses: 0,\r\n        monthly_income: 0,\r\n        monthly_sales: 0,\r\n      },\r\n      annually: {\r\n        year: \"...\",\r\n        annual_products: 0,\r\n        annual_expenses: 0,\r\n        annual_purchases: 0,\r\n        annual_income: 0,\r\n        annual_sales: 0,\r\n      },\r\n    };\r\n    this.products();\r\n    this.purchases();\r\n    this.sales();\r\n  }\r\n\r\n  async products() {\r\n    const res = (await UsersApi.data(\"/user/all/products\")) || [];\r\n    let products_daily = 0;\r\n    let products_monthly = 0;\r\n    let products_annual = 0;\r\n    res === \"Error\"\r\n      ? this.setState({\r\n          ...this.state,\r\n          daily: { ...this.state.daily, daily_products: 0 },\r\n          monthly: { ...this.state.monthly, monthly_products: 0 },\r\n          annually: { ...this.state.annually, annual_products: 0 },\r\n        })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.product_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            products_daily++;\r\n          }\r\n          if (\r\n            new Date(parseInt(e.product_date)).getMonth() ===\r\n            new Date(Date.now()).getMonth()\r\n          ) {\r\n            products_monthly++;\r\n          }\r\n          if (\r\n            new Date(parseInt(e.product_date)).getFullYear() ===\r\n            new Date(Date.now()).getFullYear()\r\n          ) {\r\n            products_annual++;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      daily: {\r\n        ...this.state.daily,\r\n        daily_products: products_daily,\r\n        date:\r\n          new Date(Date.now()).getDate() +\r\n          \"/\" +\r\n          (new Date(Date.now()).getMonth() + 1) +\r\n          \"/\" +\r\n          new Date(Date.now()).getFullYear(),\r\n      },\r\n      monthly: { ...this.state.monthly, monthly_products: products_monthly },\r\n      annually: {\r\n        ...this.state.annually,\r\n        year: new Date(Date.now()).getFullYear(),\r\n        annual_products: products_annual,\r\n      },\r\n    });\r\n    if (new Date(Date.now()).getMonth() === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"January\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 1) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"February\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 2) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"March\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 3) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"April\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 4) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"May\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 5) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"June\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 6) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"July\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 7) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"August\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 8) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"September\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 9) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"October\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 10) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"November\" },\r\n      });\r\n    } else if (new Date(Date.now()).getMonth() === 11) {\r\n      this.setState({\r\n        ...this.state,\r\n        monthly: { ...this.state.monthly, month: \"December\" },\r\n      });\r\n    }\r\n  }\r\n\r\n  async purchases() {\r\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\r\n    let purchase_daily = 0;\r\n    let expense_daily = 0;\r\n    let purchase_monthly = 0;\r\n    let expense_monthly = 0;\r\n    let purchase_annual = 0;\r\n    let expense_annual = 0;\r\n    res === \"Error\"\r\n      ? this.setState({\r\n          ...this.state,\r\n          daily: { ...this.state.daily, daily_purchases: 0, daily_expenses: 0 },\r\n          monthly: {\r\n            ...this.state.monthly,\r\n            monthly_expenses: 0,\r\n            monthly_purchases: 0,\r\n          },\r\n          annually: {\r\n            ...this.state.annually,\r\n            annual_expenses: 0,\r\n            annual_purchases: 0,\r\n          },\r\n        })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.purchase_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            purchase_daily++;\r\n            expense_daily += e.purchase_amount;\r\n          }\r\n          if (\r\n            new Date(Date.now()).getMonth() ===\r\n            new Date(parseInt(e.purchase_date)).getMonth()\r\n          ) {\r\n            purchase_monthly++;\r\n            expense_monthly += e.purchase_amount;\r\n          }\r\n          if (\r\n            new Date(Date.now()).getFullYear() ===\r\n            new Date(parseInt(e.purchase_date)).getFullYear()\r\n          ) {\r\n            purchase_annual++;\r\n            expense_annual += e.purchase_amount;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      daily: {\r\n        ...this.state.daily,\r\n        daily_purchases: purchase_daily,\r\n        daily_expenses: expense_daily,\r\n      },\r\n      monthly: {\r\n        ...this.state.monthly,\r\n        monthly_expenses: expense_monthly,\r\n        monthly_purchases: purchase_monthly,\r\n      },\r\n      annually: {\r\n        ...this.state.annually,\r\n        annual_expenses: expense_annual,\r\n        annual_purchases: purchase_annual,\r\n      },\r\n    });\r\n  }\r\n\r\n  async sales() {\r\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\r\n    let income_daily = 0;\r\n    let sales_daily = 0;\r\n    let income_monthly = 0;\r\n    let sales_monthly = 0;\r\n    let income_annual = 0;\r\n    let sales_annual = 0;\r\n    res === \"Error\"\r\n      ? this.setState({\r\n          ...this.state,\r\n          daily: { ...this.state.daily, daily_income: 0, daily_sales: 0 },\r\n          monthly: {\r\n            ...this.state.monthly,\r\n            monthly_income: 0,\r\n            monthly_sales: 0,\r\n          },\r\n          annually: {\r\n            ...this.state.annually,\r\n            annual_income: 0,\r\n            annual_sales: 0,\r\n          },\r\n        })\r\n      : res.forEach((e) => {\r\n          if (\r\n            new Date(parseInt(e.sales_date)).getDate() ===\r\n            new Date(Date.now()).getDate()\r\n          ) {\r\n            income_daily += e.amount_paid;\r\n            sales_daily++;\r\n          }\r\n\r\n          if (\r\n            new Date(Date.now()).getMonth() ===\r\n            new Date(parseInt(e.sales_date)).getMonth()\r\n          ) {\r\n            income_monthly += e.amount_paid;\r\n            sales_monthly++;\r\n          }\r\n          if (\r\n            new Date(Date.now()).getFullYear() ===\r\n            new Date(parseInt(e.sales_date)).getFullYear()\r\n          ) {\r\n            income_annual += e.amount_paid;\r\n            sales_annual++;\r\n          }\r\n        });\r\n    this.setState({\r\n      ...this.state,\r\n      daily: {\r\n        ...this.state.daily,\r\n        daily_sales: sales_daily,\r\n        daily_income: income_daily,\r\n      },\r\n      monthly: {\r\n        ...this.state.monthly,\r\n        monthly_sales: sales_monthly,\r\n        monthly_income: income_monthly,\r\n      },\r\n      annually: {\r\n        ...this.state.annually,\r\n        annual_sales: sales_annual,\r\n        annual_income: income_annual,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"reports\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Today</h3>\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-haspopup=\"true\"\r\n                    >\r\n                      print\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-print\"></span>\r\n                      </span>\r\n                    </Button> */}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"\">\r\n                      <table width=\"100%\">\r\n                        <tr>\r\n                          <td>\r\n                            <span\r\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\r\n                            >\r\n                              Date:\r\n                            </span>\r\n                            {`  ${this.state.daily.date}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Purchases:\r\n                            </span>\r\n                            {`  ${this.state.daily.daily_purchases}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Sales:\r\n                            </span>\r\n                            {` ${this.state.daily.daily_sales}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Expenses:\r\n                            </span>\r\n                            {`   UGX ${Helper.format(\r\n                              this.state.daily.daily_expenses\r\n                            )}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Income:\r\n                            </span>\r\n                            {`   UGX ${Helper.format(\r\n                              this.state.daily.daily_income\r\n                            )}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Products Registered:\r\n                            </span>\r\n                            {`  ${this.state.daily.daily_products}`}\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>This Month</h3>\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-controls=\"reception-actions\"\r\n                      aria-haspopup=\"true\"\r\n                    >\r\n                      print\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-print\"></span>\r\n                      </span>\r\n                    </Button> */}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"\">\r\n                      <table width=\"100%\">\r\n                        <tr>\r\n                          <td>\r\n                            <span\r\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\r\n                            >\r\n                              Month:\r\n                            </span>\r\n                            {`  ${this.state.monthly.month}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Purchases:\r\n                            </span>\r\n                            {` ${this.state.monthly.monthly_purchases}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Sales:\r\n                            </span>\r\n                            {` ${this.state.monthly.monthly_sales}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Expenses:\r\n                            </span>\r\n                            {`  UGX ${Helper.format(\r\n                              this.state.monthly.monthly_expenses\r\n                            )}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Income:\r\n                            </span>\r\n                            {`  UGX ${Helper.format(\r\n                              this.state.monthly.monthly_income\r\n                            )}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Products Registered:\r\n                            </span>\r\n                            {`  ${this.state.monthly.monthly_products}`}\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"recent-grid\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>This Year</h3>\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-haspopup=\"true\"\r\n                    >\r\n                      print\r\n                      <span style={{ fontSize: \"17.5px\", marginLeft: \"10px\" }}>\r\n                        <span className=\"las la-print\"></span>\r\n                      </span>\r\n                    </Button> */}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"\">\r\n                      <table width=\"100%\">\r\n                        <tr>\r\n                          <td>\r\n                            <span\r\n                              style={{ fontWeight: \"bolder\", color: \"red\" }}\r\n                            >\r\n                              Year:\r\n                            </span>\r\n                            {`  ${this.state.annually.year}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Purchases:\r\n                            </span>\r\n                            {`  ${this.state.annually.annual_purchases}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Sales:\r\n                            </span>\r\n                            {` ${this.state.annually.annual_sales}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Expenses:\r\n                            </span>\r\n                            {`  UGX ${Helper.format(\r\n                              this.state.annually.annual_expenses\r\n                            )}`}\r\n                          </td>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Total Income:\r\n                            </span>\r\n                            {` UGX ${Helper.format(\r\n                              this.state.annually.annual_income\r\n                            )}`}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <span style={{ fontWeight: \"bolder\" }}>\r\n                              Products Registered:\r\n                            </span>\r\n                            {`  ${this.state.annually.annual_products}`}\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports;\r\n","import React, { Component } from \"react\";\r\nimport Helper from \"./format\";\r\nimport \"../design/print_sale.css\";\r\n\r\nclass Print extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  getTotals() {\r\n    let total = 0;\r\n    if (this.props.data.length !== 0) {\r\n      this.props.data.forEach((s) => {\r\n        total += parseInt(s.amount_paid);\r\n      });\r\n    }\r\n    return Helper.format(total);\r\n  }\r\n  getPurchaseTotals() {\r\n    let total = 0;\r\n    if (this.props.data.length !== 0) {\r\n      this.props.data.forEach((s) => {\r\n        total += parseInt(s.purchase_amount);\r\n      });\r\n    }\r\n    return Helper.format(total);\r\n  }\r\n  getMonth() {\r\n    let month = new Date(Date.now()).getMonth();\r\n    if (month === 0) {\r\n      return \"January\";\r\n    } else if (month === 1) {\r\n      return \"February\";\r\n    } else if (month === 2) {\r\n      return \"March\";\r\n    } else if (month === 3) {\r\n      return \"April\";\r\n    } else if (month === 4) {\r\n      return \"May\";\r\n    } else if (month === 5) {\r\n      return \"June\";\r\n    } else if (month === 6) {\r\n      return \"July\";\r\n    } else if (month === 7) {\r\n      return \"August\";\r\n    } else if (month === 8) {\r\n      return \"September\";\r\n    } else if (month === 9) {\r\n      return \"October\";\r\n    } else if (month === 10) {\r\n      return \"November\";\r\n    } else if (month === 11) {\r\n      return \"December\";\r\n    }\r\n  }\r\n  getDate() {\r\n    let date =\r\n      new Date(Date.now()).getDate() +\r\n      \" / \" +\r\n      (new Date(Date.now()).getMonth() + 1) +\r\n      \" / \" +\r\n      new Date(Date.now()).getFullYear();\r\n    return date;\r\n  }\r\n  getNameSpaces(n, i) {\r\n    let name = n.split(\" \")[0];\r\n    let name_formatted;\r\n    if (name.length === i) {\r\n      name_formatted = name + \" \";\r\n    }\r\n    if (name.length > i) {\r\n      name_formatted = name.substring(0, i) + \" \";\r\n    }\r\n    if (name.length < i) {\r\n      name_formatted = name;\r\n      let spaces = i - name.length;\r\n      for (let i = 0; i < spaces; i++) {\r\n        name_formatted = name_formatted + \" \";\r\n      }\r\n    }\r\n    return name_formatted;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.type === \"sales\") {\r\n      return (\r\n        <>\r\n          <div className=\"print-ctr\">\r\n            <div className=\"print\">\r\n              <div className=\"print-pharmacy\">\r\n                <span> Freedom Health Pharmacy</span>\r\n                <span style={{ fontSize: \"20px\" }}>\r\n                  Plot 7, Chegere Road Apac.\r\n                </span>\r\n                <span style={{ fontSize: \"20px\" }}>Tel: 0393 193 423</span>\r\n              </div>\r\n              <div className=\"print-title\">Sales File</div>\r\n              <div className=\"date\">Date: {this.getDate()}</div>\r\n              <div className=\"date\">Month: {this.getMonth()}</div>\r\n              <div className=\"content\">\r\n                <table width=\"90%\" style={{ margin: \"auto\" }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Products</td>\r\n                      <td>Total Amount</td>\r\n                      <td>Amount Paid</td>\r\n                      <td>Made By</td>\r\n                      <td>Sale Date</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.data.length === 0 ? (\r\n                      <tr>\r\n                        <td>No Content To Print</td>\r\n                      </tr>\r\n                    ) : (\r\n                      this.props.data.map((v, i) => {\r\n                        let products = \"\";\r\n                        let sold = JSON.parse(v.products_sold);\r\n                        sold.forEach((p) => {\r\n                          if (sold.length > 1) {\r\n                            if (sold.indexOf(p) === sold.length - 1) {\r\n                              products =\r\n                                products +\r\n                                `${this.getNameSpaces(p.product_name, 10)}`;\r\n                            } else {\r\n                              products =\r\n                                products +\r\n                                `${this.getNameSpaces(p.product_name, 10)}` +\r\n                                \",\";\r\n                            }\r\n                          } else {\r\n                            products =\r\n                              products +\r\n                              `${this.getNameSpaces(p.product_name, 10)}`;\r\n                          }\r\n                        });\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td>{products}</td>\r\n                            <td>{v.sales_amount}</td>\r\n                            <td>{v.amount_paid}</td>\r\n                            <td>{v.sale_made_by}</td>\r\n                            <td>\r\n                              {new Date(parseInt(v.sales_date)).getDate() +\r\n                                \" / \" +\r\n                                (new Date(parseInt(v.sales_date)).getMonth() +\r\n                                  1) +\r\n                                \" / \" +\r\n                                new Date(parseInt(v.sales_date)).getFullYear()}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </tbody>\r\n                  <thead>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total Sales</td>\r\n                      <td>{`${this.props.data.length}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total Income</td>\r\n                      <td>{`UGX ${this.getTotals()}`}</td>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (this.props.type === \"purchases\") {\r\n      return (\r\n        <>\r\n          <div className=\"print-ctr\">\r\n            <div className=\"print\">\r\n              <div className=\"print-pharmacy\">\r\n                <span> Freedom Health Pharmacy</span>\r\n                <span style={{ fontSize: \"20px\" }}>\r\n                  Plot 7, Chegere Road Apac.\r\n                </span>\r\n                <span style={{ fontSize: \"20px\" }}>Tel: 0393 193 423</span>\r\n              </div>\r\n              <div className=\"print-title\">Purchases File</div>\r\n              <div className=\"date\">Date: {this.getDate()}</div>\r\n              <div className=\"date\">Month: {this.getMonth()}</div>\r\n              <div className=\"content\">\r\n                <table width=\"90%\" style={{ margin: \"auto\" }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Products</td>\r\n                      <td>Total Amount</td>\r\n                      <td>Amount Paid</td>\r\n                      <td>Made By</td>\r\n                      <td>Purchase Date</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.data.length === 0 ? (\r\n                      <tr>\r\n                        <td>No Content To Print</td>\r\n                      </tr>\r\n                    ) : (\r\n                      this.props.data.map((v, i) => {\r\n                        let products = \"\";\r\n                        let sold = JSON.parse(v.products_purchased);\r\n                        sold.forEach((p) => {\r\n                          if (sold.length > 1) {\r\n                            products =\r\n                              products +\r\n                              `${this.getNameSpaces(p.product_name, 10)}` +\r\n                              \",\";\r\n                          } else {\r\n                            products =\r\n                              products +\r\n                              `${this.getNameSpaces(p.product_name, 10)}`;\r\n                          }\r\n                        });\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td>{products}</td>\r\n                            <td>{v.purchase_t_amount}</td>\r\n                            <td>{v.purchase_amount}</td>\r\n                            <td>{v.purchase_made_by}</td>\r\n                            <td>\r\n                              {new Date(parseInt(v.purchase_date)).getDate() +\r\n                                \" / \" +\r\n                                (new Date(\r\n                                  parseInt(v.purchase_date)\r\n                                ).getMonth() +\r\n                                  1) +\r\n                                \" / \" +\r\n                                new Date(\r\n                                  parseInt(v.purchase_date)\r\n                                ).getFullYear()}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </tbody>\r\n                  <thead>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total Purchases</td>\r\n                      <td>{`${this.props.data.length}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>Total Amount Spent</td>\r\n                      <td>{`UGX ${this.getPurchaseTotals()}`}</td>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Print;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\n//pdf\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Print from \"../../components/print\";\r\n\r\nclass AllPurchases extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      purchases: [],\r\n    };\r\n    this.purchases();\r\n  }\r\n  async purchases() {\r\n    const res = (await UsersApi.data(\"/user/all/purchases\")) || [];\r\n    if (res !== \"Error\") {\r\n      let purchase = [];\r\n      res.forEach((e) => {\r\n        if (\r\n          new Date(parseInt(e.purchase_date)).getMonth() ===\r\n          new Date(Date.now()).getMonth()\r\n        ) {\r\n          purchase.push(e);\r\n        }\r\n      });\r\n      this.setState({\r\n        ...this.state,\r\n        purchases: purchase,\r\n        print: true,\r\n      });\r\n    }\r\n  }\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n  getNameSpaces(n, i) {\r\n    let name = n.split(\" \")[0];\r\n    let name_formatted;\r\n    if (name.length === i) {\r\n      name_formatted = name + \" \";\r\n    }\r\n    if (name.length > i) {\r\n      name_formatted = name.substring(0, i) + \" \";\r\n    }\r\n    if (name.length < i) {\r\n      name_formatted = name;\r\n      let spaces = i - name.length;\r\n      for (let i = 0; i < spaces; i++) {\r\n        name_formatted = name_formatted + \" \";\r\n      }\r\n    }\r\n    return name_formatted;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"finance\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Monthly Purchases Made</h3>\r\n                    <ReactToPrint\r\n                      trigger={() => {\r\n                        return (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginRight: 10 }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"17.5px\",\r\n                                marginRight: \"10px\",\r\n                              }}\r\n                            >\r\n                              <i className=\"las la-file-pdf\"></i>\r\n                            </span>\r\n                            Save PDF\r\n                          </Button>\r\n                        );\r\n                      }}\r\n                      content={() => this.componentRef}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table style={{ width: \"85%\", margin: \"auto\" }}>\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Products</td>\r\n                          <td>Total</td>\r\n                          <td>Discount</td>\r\n                          <td>Paid</td>\r\n                          <td>Details</td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.purchases.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Purchase Made</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.purchases.map((v, i) => {\r\n                            let products = \"\";\r\n                            let sold = JSON.parse(v.products_purchased);\r\n                            sold.forEach((p) => {\r\n                              if (sold.length > 1) {\r\n                                if (sold.indexOf(p) === sold.length - 1) {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\r\n                                } else {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(\r\n                                      p.product_name,\r\n                                      10\r\n                                    )}` +\r\n                                    \",\";\r\n                                }\r\n                              } else {\r\n                                products =\r\n                                  products +\r\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\r\n                              }\r\n                            });\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{products}</td>\r\n                                <td>{v.purchase_t_amount}</td>\r\n                                <td>{v.purchase_discount}</td>\r\n                                <td>{v.purchase_amount}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open: true,\r\n                                        dialog_data: v,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Details\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        <div style={{ display: \"none\" }}>\r\n          {this.state.print ? (\r\n            <Print\r\n              ref={(el) => (this.componentRef = el)}\r\n              data={this.state.purchases}\r\n              type=\"purchases\"\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.dialog_data ? (\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Purchase Details</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <table width=\"100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Product</td>\r\n                      <td>Qty</td>\r\n                      <td>Selling Unit</td>\r\n                      <td>Amount</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {JSON.parse(this.state.dialog_data.products_purchased).map(\r\n                      (v, i) => {\r\n                        return (\r\n                          <>\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.selling_unit}</td>\r\n                              <td>{v.cost_price}</td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className=\"\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        {`Total Amount: UGX ${this.state.dialog_data.purchase_t_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Discount: UGX ${this.state.dialog_data.purchase_discount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {`Amount Paid: ${this.state.dialog_data.purchase_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    {`Made By: ${this.state.dialog_data.purchase_made_by}`}\r\n                  </table>\r\n                </div>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllPurchases;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Print from \"../../components/print\";\r\n\r\nclass AllSales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      sales: [],\r\n    };\r\n    this.sales();\r\n  }\r\n\r\n  async sales() {\r\n    const res = (await UsersApi.data(\"/user/all/sales\")) || [];\r\n    if (res !== \"Error\") {\r\n      let sale = [];\r\n      res.forEach((e) => {\r\n        if (\r\n          new Date(parseInt(e.sales_date)).getMonth() ===\r\n          new Date(Date.now()).getMonth()\r\n        ) {\r\n          sale.push(e);\r\n        }\r\n      });\r\n      this.setState({ ...this.state, sales: sale, print: true });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  getNameSpaces(n, i) {\r\n    let name = n.split(\" \")[0];\r\n    let name_formatted;\r\n    if (name.length === i) {\r\n      name_formatted = name + \" \";\r\n    }\r\n    if (name.length > i) {\r\n      name_formatted = name.substring(0, i) + \" \";\r\n    }\r\n    if (name.length < i) {\r\n      name_formatted = name;\r\n      let spaces = i - name.length;\r\n      for (let i = 0; i < spaces; i++) {\r\n        name_formatted = name_formatted + \" \";\r\n      }\r\n    }\r\n    return name_formatted;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"finance\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3>Monthly Sales Made</h3>\r\n\r\n                    <ReactToPrint\r\n                      trigger={() => {\r\n                        return (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ marginRight: 10 }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                fontSize: \"17.5px\",\r\n                                marginRight: \"10px\",\r\n                              }}\r\n                            >\r\n                              <i className=\"las la-file-pdf\"></i>\r\n                            </span>\r\n                            Save PDF\r\n                          </Button>\r\n                        );\r\n                      }}\r\n                      content={() => this.componentRef}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table style={{ width: \"85%\", margin: \"auto\" }}>\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Products</td>\r\n                          <td>Total</td>\r\n                          <td>Discount</td>\r\n                          <td>Paid</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.sales.length === 0 ? (\r\n                          <tr>\r\n                            <td>No Sale Made</td>\r\n                          </tr>\r\n                        ) : (\r\n                          this.state.sales.map((v, i) => {\r\n                            let products = \"\";\r\n                            let sold = JSON.parse(v.products_sold);\r\n                            sold.forEach((p) => {\r\n                              if (sold.length > 1) {\r\n                                if (sold.indexOf(p) === sold.length - 1) {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(p.product_name, 10)}`;\r\n                                } else {\r\n                                  products =\r\n                                    products +\r\n                                    `${this.getNameSpaces(\r\n                                      p.product_name,\r\n                                      10\r\n                                    )}` +\r\n                                    \",\";\r\n                                }\r\n                              } else {\r\n                                products =\r\n                                  products +\r\n                                  `${this.getNameSpaces(p.product_name, 10)}`;\r\n                              }\r\n                            });\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{products}</td>\r\n                                <td>{v.sales_amount}</td>\r\n                                <td>{v.sales_discount}</td>\r\n                                <td>{v.amount_paid}</td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open: true,\r\n                                        dialog_data: v,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Details\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        <div style={{ display: \"none\" }}>\r\n          {this.state.print ? (\r\n            <Print\r\n              ref={(el) => (this.componentRef = el)}\r\n              data={this.state.sales}\r\n              type=\"sales\"\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.dialog_data ? (\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Sale Details</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <table width=\"100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td>Product</td>\r\n                      <td>Qty</td>\r\n                      <td>Selling Unit</td>\r\n                      <td>Amount</td>\r\n                      <td>Sale Type</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {JSON.parse(this.state.dialog_data.products_sold).map(\r\n                      (v, i) => {\r\n                        return (\r\n                          <>\r\n                            <tr key={i}>\r\n                              <td className=\"name_cell\">{v.product_name}</td>\r\n                              <td>{v.qty}</td>\r\n                              <td>{v.selling_unit}</td>\r\n                              <td>{v.product_price}</td>\r\n                              <td>{v.sale_type}</td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className=\"\">\r\n                  <table>\r\n                    <tr>\r\n                      <td>\r\n                        {`Total Amount: UGX ${this.state.dialog_data.sales_amount}`}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        Discount: UGX {this.state.dialog_data.sales_discount}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        Amount Paid: UGX {this.state.dialog_data.amount_paid}\r\n                      </td>\r\n                    </tr>\r\n                    {`Made By: ${this.state.dialog_data.sale_made_by}`}\r\n                  </table>\r\n                </div>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllSales;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Snackbar,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Nav from \"./components/Nav\";\r\nimport Header from \"./components/Header\";\r\nimport UsersApi from \"../../api/users\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nclass AllProducts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AnchorEl: null,\r\n      AnchorElDrugs: null,\r\n      batches: [],\r\n      loading: true,\r\n      open: false,\r\n      open_del: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"\",\r\n      batch_id: \"\",\r\n    };\r\n    this.batches();\r\n  }\r\n\r\n  handleOpenActions = (e) => {\r\n    this.setState({ ...this.state, AnchorEl: e.currentTarget });\r\n  };\r\n  handleOpenActionsDrugs = (e) => {\r\n    this.setState({ ...this.state, AnchorElDrugs: e.currentTarget });\r\n  };\r\n  handleCloseActions = () => {\r\n    this.setState({ ...this.state, AnchorEl: null });\r\n  };\r\n  handleCloseActionsDrugs = () => {\r\n    this.setState({ ...this.state, AnchorElDrugs: null });\r\n  };\r\n\r\n  async batches() {\r\n    const res = (await UsersApi.data(\"/user/all/batches\")) || [];\r\n    if (res) {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false,\r\n        batches: res === \"Error\" ? [] : res,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false });\r\n  };\r\n\r\n  handleDelete = async () => {\r\n    this.setState({ ...this.state, open_del: true, messageState: \"info\" });\r\n    const res = await UsersApi.data(\r\n      `/user/all/delete_batch/${this.state.batch_id}`\r\n    );\r\n    if (res.status === true) {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"success\",\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        message: res.data,\r\n        messageState: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  closePopUp = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      open_del: false,\r\n      message: \"Please Wait...\",\r\n      messageState: \"info\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={5000}\r\n          onClose={this.closePopUp}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.closePopUp}\r\n              >\r\n                <i className=\"las la-times\"></i>\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Alert onClose={this.closePopUp} severity={this.state.messageState}>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <input type=\"checkbox\" id=\"nav-toggle\" defaultChecked />\r\n        <Nav active=\"dashboard\" />\r\n        <div className=\"main-content\">\r\n          <Header />\r\n          <main>\r\n            <div className=\"fullwidth-ctr\">\r\n              <div className=\"projects\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <TextField\r\n                      className=\"text_field_all_products\"\r\n                      name=\"drug_name\"\r\n                      variant=\"outlined\"\r\n                      label=\"Search Batch\"\r\n                      style={{\r\n                        width: \"15%\",\r\n                      }}\r\n                      onKeyUp={async (e) => {\r\n                        const res = e.target.value\r\n                          ? (await UsersApi.data(\r\n                              `/user/all/search_batch/${e.target.value}`\r\n                            )) || []\r\n                          : (await UsersApi.data(\"/user/all/products\")) || [];\r\n                        if (res !== \"Error\") {\r\n                          this.setState({\r\n                            ...this.state,\r\n                            loader: false,\r\n                            batches: res === \"Error\" ? [] : res,\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <table width=\"100%\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td>Product Generic Name</td>\r\n                          <td>Product Description</td>\r\n                          <td>Batch Number</td>\r\n                          <td>Batch Quantity</td>\r\n                          <td></td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.batches.length === 0 ? (\r\n                          this.state.loading ? (\r\n                            <tr>\r\n                              <td>\r\n                                <CircularProgress size={25} />\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <tr>\r\n                              <td>No Batch Exists</td>\r\n                            </tr>\r\n                          )\r\n                        ) : (\r\n                          this.state.batches.map((v, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>{v.product_generic_name}</td>\r\n                                <td>{v.product_description_name}</td>\r\n                                <td>{v.batch_no}</td>\r\n                                <td>{v.batch_qty}</td>\r\n                                <td></td>\r\n                                <td>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ color: \"red\" }}\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        ...this.state,\r\n                                        open: true,\r\n                                        batch_id: v.batch_id,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        {this.state.batch_id ? (\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              Want to Delete Product Batch?\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                This removes a specific batch number. Press OK and Continue.\r\n                This process is Irreversible\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.handleDelete} color=\"primary\">\r\n                OK\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllProducts;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"../app.css\";\r\nimport \"line-awesome/dist/line-awesome/css/line-awesome.css\";\r\nimport Dashboard from \"../Routes/admin/Dashboard\";\r\nimport NewProduct from \"../Routes/admin/NewProduct\";\r\nimport NewSupplier from \"../Routes/admin/NewSupplier\";\r\nimport NewCustomer from \"../Routes/admin/NewCustomer\";\r\nimport NewUser from \"../Routes/admin/NewUser\";\r\nimport NewSale from \"../Routes/admin/Newsale\";\r\nimport AllProducts from \"../Routes/admin/allProducts\";\r\nimport NewPurchase from \"../Routes/admin/new_purchase\";\r\nimport Product from \"../Routes/admin/product\";\r\nimport Edit from \"../Routes/admin/editProduct\";\r\nimport Finance from \"../Routes/admin/finance\";\r\nimport Reports from \"../Routes/admin/reports\";\r\nimport Purchases from \"../Routes/admin/allPurchases\";\r\nimport Sales from \"../Routes/admin/allSales\";\r\nimport Batches from \"../Routes/admin/allBatches\";\r\nimport NotFound from \"../components/404\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/new-product\" exact component={NewProduct} />\r\n            <Route path=\"/new-supplier\" exact component={NewSupplier} />\r\n            <Route path=\"/new-customer\" exact component={NewCustomer} />\r\n            <Route path=\"/new-user\" exact component={NewUser} />\r\n            <Route path=\"/new-purchase\" exact component={NewPurchase} />\r\n            <Route path=\"/new-sale\" exact component={NewSale} />\r\n            <Route path=\"/all-products\" exact component={AllProducts} />\r\n            <Route path=\"/product\" exact component={Product} />\r\n            <Route path=\"/edit-product\" exact component={Edit} />\r\n            <Route path=\"/finance\" exact component={Finance} />\r\n            <Route path=\"/reports\" exact component={Reports} />\r\n            <Route path=\"/all-purchases\" exact component={Purchases} />\r\n            <Route path=\"/all-sales\" exact component={Sales} />\r\n            <Route path=\"/all-batches\" exact component={Batches} />\r\n            <Route path=\"*\" exact component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from \"react\";\r\nimport user from \"./app_config\";\r\nimport Dispenser from \"./users_routes/dispenser\";\r\nimport Cashier from \"./users_routes/cashier\";\r\nimport Admin from \"./users_routes/admin\";\r\nimport Login from \"./components/Login\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (user.user.user_role === \"admin\") {\r\n      return <Admin />;\r\n    } else if (user.user.user_role === \"dispenser\") {\r\n      return <Dispenser />;\r\n    } else if (user.user.user_role === \"cashier\") {\r\n      return <Cashier />;\r\n    } else {\r\n      return <Login />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"@fontsource/ubuntu\";\r\n\r\nimport App from \"./app\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst THEME = createTheme({\r\n  typography: {\r\n    fontFamily: `\"Ubuntu\", sans-serifs`,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n  },\r\n});\r\nconst AppWithTheme = () => (\r\n  <MuiThemeProvider theme={THEME}>\r\n    <App />\r\n  </MuiThemeProvider>\r\n);\r\n\r\nReactDom.render(<AppWithTheme />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}